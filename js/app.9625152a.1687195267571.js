!function(){var e,t,o,s,n,a,r,i={44539:function(e){e.exports={functional:!0,render(e,t){const{_c:o,_v:s,data:n,children:a=[]}=t,{class:r,staticClass:i,style:c,staticStyle:d,attrs:l={},...u}=n;return o("svg",{class:["notif-option__bell",r,i],style:[c,d],attrs:Object.assign({width:"28",height:"28",fill:"currentcolor",xmlns:"http://www.w3.org/2000/svg"},l),...u},a.concat([o("path",{attrs:{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M21.221 22H6.78c-2.286 0-3.59-2.299-2.22-3.91a4.57 4.57 0 001.083-2.446L6.2 10.72c.301-2.656 2.284-4.835 4.962-5.752v-.13a2.837 2.837 0 115.674 0v.13c2.678.917 4.661 3.096 4.962 5.752l.56 4.925a4.57 4.57 0 001.081 2.446c1.372 1.611.067 3.91-2.219 3.91zm-3.506 2.59C17.143 25.998 15.695 27 14 27c-1.696 0-3.143-1.001-3.715-2.41a.53.53 0 01.494-.714h6.442a.53.53 0 01.494.713z"}})]))}}},45605:function(e){e.exports={functional:!0,render(e,t){const{_c:o,_v:s,data:n,children:a=[]}=t,{class:r,staticClass:i,style:c,staticStyle:d,attrs:l={},...u}=n;return o("svg",{class:[r,i],style:[c,d],attrs:Object.assign({width:"24",height:"24",fill:"currentColor",xmlns:"http://www.w3.org/2000/svg"},l),...u},a.concat([o("path",{attrs:{"fill-rule":"evenodd","clip-rule":"evenodd",d:"M0 5a4 4 0 014-4h16a4 4 0 014 4v1.25H0V5zm24 5.25v-2.5H0v2.5h24zm0 1.5H0V19a4 4 0 004 4h16a4 4 0 004-4v-7.25zm-18 4.5a.75.75 0 000 1.5h2a.75.75 0 000-1.5H6z",fill:"#F8087B"}})]))}}},20439:function(e,t,o){"use strict";o.d(t,{Np:function(){return n},tQ:function(){return a}});var s=o(36930);s.axiosInstance.defaults.headers.common["Cache-Control"]="no-cache";const n=e=>{if(e&&"hash"===e.mode){const{origin:e,pathname:t}=window.location;return`${e}${t}`}return""},a=e=>{const t=n(e);s.axiosInstance.defaults.baseURL=t};t.ZP=s.axiosInstance},64645:function(e,t,o){"use strict";o.d(t,{T:function(){return r}});var s=o(73318),n=o(80472),a=o(25108);function r(e){try{const t=e.toUpperCase(),o={flag:(0,s.HL)(t),name:""},a=n.ZP.state.settings.displayRegions;if(!a)return o;const r=a.of(t);return r&&(o.name=r),o}catch(e){return a.warn("Unsupported format of location in env.json",e),null}}},46621:function(e,t,o){"use strict";var s=o(77057),n=o(70655),a=o(53545),r=o(8755),i=o(32806),c=o(54643),d=o(85530),l=o(74614);let u=class extends((0,a.Wr)(i.Z,r.tA.NotificationMixin)){constructor(...e){super(...e),(0,s.Z)(this,"node",void 0),(0,s.Z)(this,"nodeIsConnected",void 0),(0,s.Z)(this,"setSelectNodeDialogVisibility",void 0)}async handleNodeError(e,t=!1){const o=e instanceof c.x?e.translationKey:"node.errors.connection",s=e instanceof c.x?e.translationPayload:{},n=this.t(o,s),a=this.node.address?"node.messages.connected":"node.messages.selectNode",r={address:this.node.address},i=this.t(a,r);this.node.address||(this.setSelectNodeDialogVisibility(!0),await this.$nextTick(),await(0,d.gw)(500)),this.nodeIsConnected&&t?this.showAppNotification(i,"success"):this.showAppAlert(n+i,this.t("errorText"))}handleNodeDisconnect(e){this.showAppNotification(this.t("node.warnings.disconnect",{address:e.address}),"warning")}handleNodeReconnect(e){this.showAppNotification(this.t("node.messages.connected",{address:e.address}),"success")}};(0,n.__decorate)([l.SB.settings.node],u.prototype,"node",void 0),(0,n.__decorate)([l.Yn.settings.nodeIsConnected],u.prototype,"nodeIsConnected",void 0),(0,n.__decorate)([l.QF.settings.setSelectNodeDialogVisibility],u.prototype,"setSelectNodeDialogVisibility",void 0),u=(0,n.__decorate)([a.wA],u),t.Z=u},32806:function(e,t,o){"use strict";var s=o(77057),n=o(70655),a=o(53545),r=o(8755),i=o(74614),c=o(16546);const d={en:e=>{const t=+e;if(!Number.isFinite(t)||0===t)return e;const o=t%10;return 1===o?`${t}st`:2===o?`${t}nd`:3===o?`${t}rd`:`${t}th`}},l={...r.it.TranslationConsts,AppName:c.l2.name,APR:"APR",TVL:"TVL",Kusama:"Kusama",Metamask:"MetaMask",Polkaswap:"Polkaswap",ROI:"ROI",bridgeNetwork:{EWC:"Energy Web Chain",private:"Volta Testnet",goerli:"Ethereum Goerli",kovan:"Ethereum Kovan",rinkeby:"Ethereum Rinkeby",ropsten:"Ethereum Ropsten",main:"Ethereum Mainnet"},evmNetwork:{ethereum:"Ethereum",energy:"Energy Web Chain"},mbps:"mbps",online:"Online",offline:"Offline"};let u=class extends((0,a.Wr)(r.tA.TranslationMixin)){constructor(...e){super(...e),(0,s.Z)(this,"language",void 0),(0,s.Z)(this,"TranslationConsts",l)}tOrdinal(e){return d[this.$i18n.locale]?.(e)??e}};(0,n.__decorate)([i.SB.settings.language],u.prototype,"language",void 0),u=(0,n.__decorate)([a.wA],u),t.Z=u},10909:function(e,t,o){"use strict";var s=o(77057),n=o(70655),a=o(53545),r=o(80710),i=o(85530),c=o(16546),d=o(63471),l=o(74614),u=o(32806),p=o(25108);const m="provider.messages.checkExtension",h=e=>{switch(e.code){case-32002:case 4001:return"provider.messages.extensionLogin";default:return m}};let g=class extends((0,a.Wr)(u.Z)){constructor(...e){super(...e),(0,s.Z)(this,"evmAddress",void 0),(0,s.Z)(this,"isSoraAccountConnected",void 0),(0,s.Z)(this,"isExternalAccountConnected",void 0),(0,s.Z)(this,"resetEvmAddress",void 0),(0,s.Z)(this,"resetWeb3Store",void 0),(0,s.Z)(this,"setEvmNetwork",void 0),(0,s.Z)(this,"switchExternalAccount",void 0),(0,s.Z)(this,"connectExternalAccount",void 0),(0,s.Z)(this,"setEvmNetworkType",void 0),(0,s.Z)(this,"getWalletAddress",i.Tu),(0,s.Z)(this,"formatAddress",i.Tg),(0,s.Z)(this,"isExternalWalletConnecting",!1)}get areNetworksConnected(){return this.isSoraAccountConnected&&this.isExternalAccountConnected}connectInternalWallet(){r.ZP.push({name:c.sn.Wallet})}async connectExternalWallet(){const e=d.zt.Metamask;this.isExternalWalletConnecting=!0;try{await this.connectExternalAccount(e)}catch(t){const o=this.t((e=>e===d.zt.Metamask?"provider.metamask":"provider.default")(e)),s=this.te(t.message)?t.message:((e,t)=>e===d.zt.Metamask?h(t):m)(e,t),n=this.t(s,{name:o}),a="provider.messages.installExtension"===s;this.$alert(n,{showCancelButton:a,cancelButtonText:this.t("provider.messages.reloadPage"),callback:e=>{"cancel"===e&&r.ZP.go(0)}})}finally{this.isExternalWalletConnecting=!1}}async changeExternalWallet(e){if(!this.isExternalWalletConnecting){this.isExternalWalletConnecting=!0;try{this.switchExternalAccount(e.address)}catch(e){p.error(e)}finally{this.isExternalWalletConnecting=!1}}}async checkConnectionToExternalAccount(e){await d.ZP.checkAccountIsConnected(this.evmAddress)?await e():await this.connectExternalWallet()}disconnectExternalAccount(){this.resetEvmAddress(),this.resetWeb3Store()}};(0,n.__decorate)([l.SB.web3.evmAddress],g.prototype,"evmAddress",void 0),(0,n.__decorate)([l.Yn.wallet.account.isLoggedIn],g.prototype,"isSoraAccountConnected",void 0),(0,n.__decorate)([l.Yn.web3.isExternalAccountConnected],g.prototype,"isExternalAccountConnected",void 0),(0,n.__decorate)([l.QF.web3.resetEvmAddress],g.prototype,"resetEvmAddress",void 0),(0,n.__decorate)([l.QF.web3.reset],g.prototype,"resetWeb3Store",void 0),(0,n.__decorate)([l.QF.web3.setEvmNetwork],g.prototype,"setEvmNetwork",void 0),(0,n.__decorate)([l.QF.web3.setEvmAddress],g.prototype,"switchExternalAccount",void 0),(0,n.__decorate)([l.aD.web3.connectExternalAccount],g.prototype,"connectExternalAccount",void 0),(0,n.__decorate)([l.aD.web3.setEvmNetworkType],g.prototype,"setEvmNetworkType",void 0),g=(0,n.__decorate)([a.wA],g),t.Z=g},16546:function(e,t,o){"use strict";o.d(t,{ju:function(){return B},z8:function(){return S},xZ:function(){return y},FP:function(){return g},jF:function(){return Z},k5:function(){return O},cj:function(){return I},XQ:function(){return x},SQ:function(){return l},lI:function(){return u},yX:function(){return p},V3:function(){return b},c$:function(){return w},Dm:function(){return f},Bz:function(){return M},u8:function(){return m},sn:function(){return v},id:function(){return D},Bq:function(){return F},Kk:function(){return C},by:function(){return R},DM:function(){return E},CX:function(){return _},AQ:function(){return N},Ap:function(){return P},i7:function(){return d},m8:function(){return h},l2:function(){return c}});var s=o(46031),n=o.n(s),a=o(59739),r=o(52859),i=JSON.parse('{"i8":"1.16.0","cj":{"H":"https://github.com/sora-xor/polkaswap-exchange-web.git"}}');const c={version:i.i8,name:"Polkaswap",email:"jihoon@tutanota.de",title:"Polkaswap — The DEX for the Interoperable Future."},d={sendAssets:!0,swapAssets:!0};var l;!function(e){e.EN="en",e.RU="ru",e.CS="cs",e.DE="de",e.ES="es",e.FR="fr",e.HR="hr",e.HU="hu",e.HY="hy",e.ID="id",e.IT="it",e.NL="nl",e.NO="no",e.PL="pl",e.SK="sk",e.SR="sr",e.SV="sv",e.VI="vi",e.YO="yo",e.ZH_CN="zh-CN"}(l||(l={}));const u=[{key:l.EN,value:"English",name:"English (UK)"},{key:l.HY,value:"Armenian",name:"հայերեն"},{key:l.ZH_CN,value:"Chinese Simplified",name:"简体中文"},{key:l.HR,value:"Croatian",name:"Hrvatski"},{key:l.CS,value:"Czech",name:"Čeština"},{key:l.NL,value:"Dutch",name:"Nederlands"},{key:l.FR,value:"French",name:"Français"},{key:l.DE,value:"German",name:"Deutsch"},{key:l.HU,value:"Hungarian",name:"Magyar"},{key:l.ID,value:"Indonesian",name:"bahasa Indonesia"},{key:l.IT,value:"Italian",name:"Italiano"},{key:l.NO,value:"Norwegian",name:"Norsk"},{key:l.PL,value:"Polish",name:"Polski"},{key:l.RU,value:"Russian",name:"Русский"},{key:l.SR,value:"Serbian",name:"Српски"},{key:l.SK,value:"Slovak",name:"Slovenský"},{key:l.ES,value:"Spanish",name:"Español"},{key:l.SV,value:"Swedish",name:"Svenska"},{key:l.VI,value:"Vietnamese",name:"Tiếng Việt"},{key:l.YO,value:"Yoruba",name:"Yoruba"}],p={about:{sora:"https://sora.org/",polkadot:"https://medium.com/polkadot-network/polkadot-js-extension-release-update-3b0d2d87edb8"},nodes:{tutorial:"https://medium.com/sora-xor/how-to-run-a-sora-testnet-node-a4d42a9de1af"},faq:"https://wiki.sora.org/polkaswap/polkaswap-faq",terms:"https://wiki.sora.org/polkaswap/terms",privacy:"https://wiki.sora.org/polkaswap/privacy",releaseNotes:i.cj.H.replace(".git","/releases/latest"),demeterFarmingPlatform:"https://farming.deotoken.io/"},m=()=>null,h="0",g="0.5";var f;!function(e){e.SMART="SMART",e.TBC="TBC",e.XYK="XYK"}(f||(f={}));const y=f.SMART,b={[f.SMART]:a.LiquiditySourceTypes.Default,[f.TBC]:a.LiquiditySourceTypes.MulticollateralBondingCurvePool,[f.XYK]:a.LiquiditySourceTypes.XYKPool},w=n()(b);var v,S,C;!function(e){e.About="About",e.Swap="Swap",e.Pool="Pool",e.Stats="Stats",e.Wallet="Wallet",e.PoolContainer="PoolContainer",e.AddLiquidity="AddLiquidity",e.RemoveLiquidity="RemoveLiquidity",e.Farming="Farming",e.Rewards="Rewards",e.ReferralProgram="ReferralProgram",e.RewardsTabs="RewardsTabs",e.ReferralBonding="ReferralBonding",e.ReferralUnbonding="ReferralUnbonding",e.BridgeContainer="BridgeContainer",e.Bridge="Bridge",e.BridgeTransaction="BridgeTransaction",e.BridgeTransactionsHistory="BridgeTransactionsHistory",e.Tokens="Tokens",e.MoonpayHistory="MoonpayHistory",e.StakingContainer="StakingContainer",e.ExploreContainer="Explore/Container",e.ExploreTokens="Explore/Tokens",e.ExploreDemeter="Explore/Demeter",e.ExploreFarming="Explore/Farming",e.ExploreStaking="Explore/Staking",e.ExplorePools="Explore/Pools",e.SoraCard="SoraCard"}(v||(v={})),function(e){e.AppLogoButton="App/Header/AppLogoButton",e.AppMobilePopup="App/MobilePopup",e.AppBrowserNotifsEnableDialog="App/BrowserNotification/BrowserNotifsEnableDialog",e.AppBrowserNotifsBlockedDialog="App/BrowserNotification/BrowserNotifsBlockedDialog",e.SelectLanguageDialog="App/Settings/Language/SelectLanguageDialog",e.AppFooter="App/Footer/AppFooter",e.AppDisclaimer="App/Header/AppDisclaimer",e.StatisticsDialog="App/Footer/StatisticsDialog",e.SelectNodeDialog="App/Footer/SelectNodeDialog",e.SelectNode="App/Footer/Node/SelectNode",e.NodeInfo="App/Footer/Node/NodeInfo",e.SoraCard="SoraCard",e.SoraCardIntroPage="SoraCard/SoraCardIntroPage",e.SoraCardKYC="SoraCard/SoraCardKYC",e.ConfirmationInfo="SoraCard/ConfirmationInfo",e.TermsAndConditions="SoraCard/steps/TermsAndConditions",e.ToSDialog="SoraCard/steps/ToSDialog",e.RoadMap="SoraCard/steps/RoadMap",e.Phone="SoraCard/steps/Phone",e.Email="SoraCard/steps/Email",e.KycView="SoraCard/steps/KycView",e.X1Dialog="X1/X1Dialog",e.PaywingsDialog="SoraCard/Paywings/PaywingsDialog",e.AddLiquidityConfirm="pages/AddLiquidity/Confirm",e.AddLiquidityTransactionDetails="pages/AddLiquidity/TransactionDetails",e.RemoveLiquidityConfirm="pages/RemoveLiquidity/Confirm",e.RemoveLiquidityTransactionDetails="pages/RemoveLiquidity/TransactionDetails",e.BridgeTransactionDetails="pages/Bridge/TransactionDetails",e.BridgeTransferNotification="pages/Bridge/TransferNotification",e.BridgeSelectAsset="pages/Bridge/SelectAsset",e.BridgeSelectNetwork="pages/Bridge/SelectNetwork",e.Moonpay="pages/Moonpay/Moonpay",e.MoonpayNotification="pages/Moonpay/Notification",e.MoonpayConfirmation="pages/Moonpay/Confirmation",e.MoonpayHistoryButton="pages/Moonpay/HistoryButton",e.SwapConfirm="pages/Swap/Confirm",e.SwapChart="pages/Swap/Chart",e.SwapStatusActionBadge="pages/Swap/StatusActionBadge",e.SwapTransactionDetails="pages/Swap/TransactionDetails",e.SwapSettings="pages/Swap/Settings/Settings",e.ReferralsConfirmBonding="pages/Referrals/ConfirmBonding",e.ReferralsConfirmInviteUser="pages/Referrals/ConfirmInviteUser",e.RewardsAmountHeader="pages/Rewards/AmountHeader",e.RewardsAmountTable="pages/Rewards/AmountTable",e.RewardsGradientBox="pages/Rewards/GradientBox",e.WalletAboutNetworkDialog="pages/Wallet/AboutNetworkDialog",e.GenericPageHeader="shared/GenericPageHeader",e.ExternalLink="shared/ExternalLink",e.TokensRow="shared/TokensRow",e.PairTokenLogo="shared/PairTokenLogo",e.PriceChange="shared/PriceChange",e.ValueStatusWrapper="shared/ValueStatusWrapper",e.TransactionDetails="shared/TransactionDetails",e.PoolInfo="shared/PoolInfo",e.Widget="shared/Widget",e.SortButton="shared/Button/SortButton",e.SvgIconButton="shared/Button/SvgIconButton/SvgIconButton",e.TokenInput="shared/Input/TokenInput",e.TokenSelectButton="shared/Input/TokenSelectButton",e.TokenSelectDropdown="shared/Input/TokenSelectDropdown",e.ConfirmBridgeTransactionDialog="shared/Dialog/ConfirmBridgeTransaction",e.NetworkFeeWarningDialog="shared/Dialog/NetworkFeeWarning",e.SelectAssetList="shared/SelectAsset/List",e.SelectToken="shared/SelectAsset/SelectToken",e.SettingsTabs="shared/Settings/Tabs",e.SlippageTolerance="shared/Settings/SlippageTolerance",e.StatsCard="shared/Stats/StatsCard",e.StatsFilter="shared/Stats/StatsFilter",e.ChartSkeleton="shared/Chart/ChartSkeleton"}(S||(S={})),function(e){e.Rewards="Rewards",e.ReferralProgram="ReferralProgram"}(C||(C={}));const k=[{icon:"arrows-swap-90-24",title:v.Swap,href:"/#/swap"},{icon:"basic-drop-24",title:v.Pool,href:"/#/pool"},{icon:"basic-layers-24",title:v.StakingContainer,href:"/#/staking",index:r.p.Staking},{icon:"grid-block-distribute-vertically-24",title:v.Bridge,href:"/#/bridge"}],T=[{icon:"finance-wallet-24",title:v.Wallet,href:"/#/wallet"},{icon:"basic-circle-star-24",title:v.Rewards,href:"/#/rewards"}],A=[{icon:"various-items-24",title:v.ExploreContainer,href:"/#/explore",index:v.ExploreFarming},{icon:"various-planet-24",title:v.Stats,href:"/#/stats"},{icon:"sora-card",title:v.SoraCard,href:"/#/card"},{icon:"file-file-text-24",title:v.About,href:"/#/about"}],E=[{icon:"symbols-24",title:"wiki",href:"https://wiki.sora.org/"},{icon:"symbols-telegram-24",title:"telegram",href:"https://t.me/polkaswap"},{icon:"symbols-twitter-24",title:"twitter",href:"https://twitter.com/polkaswap"},{icon:"symbols-hash-24",title:"reddit",href:"https://www.reddit.com/r/Polkaswap"},{icon:"symbols-peace-24",title:"medium",href:"https://medium.com/polkaswap"},{icon:"symbols-github-24",title:"github",href:"https://github.com/sora-xor"}],N={AppStore:"https://apps.apple.com/us/app/sora-dae/id1457566711",GooglePlay:"https://play.google.com/store/apps/details?id=jp.co.soramitsu.sora"},P={Terms:"https://soracard.com/terms/en/polkaswap/",Privacy:"https://soracard.com/privacy/en/polkaswap/",getLinks:function(e="light"){return"dark"===e?{Terms:this.Terms.concat("?dark"),Privacy:this.Privacy.concat("?dark")}:{Terms:this.Terms,Privacy:this.Privacy}}},x={icon:"software-terminal-24",title:"faucet"},R=[...k,...T,...A],B=[v.BridgeTransaction,v.BridgeTransactionsHistory],D=[v.AddLiquidity,v.RemoveLiquidity],F=[v.Rewards,v.ReferralProgram,v.ReferralBonding,v.ReferralUnbonding],_=[r.p.Staking],I=[v.ExploreFarming,v.ExploreStaking,v.ExplorePools,v.ExploreTokens];var L;!function(e){e.SwapTokens="SwapTokens",e.PassiveEarning="PassiveEarning",e.AddLiquidity="AddLiquidity",e.PriceFeeds="PriceFeeds"}(L||(L={}));L.SwapTokens,L.PassiveEarning,L.AddLiquidity,L.PriceFeeds;var O;!function(e){e.ETH="ETH",e.VT="VT"}(O||(O={}));const M="0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",Z="0x0000000000000000000000000000000000000000"},66926:function(e,t,o){"use strict";o.d(t,{BR:function(){return h},Kd:function(){return g},rj:function(){return f},Gm:function(){return y}});var s=o(52612),n=o.n(s),a=o(70538),r=o(17152),i=o(16546),c=o(6029),d=o(82007),l=o(18979),u=o(25108);a.default.use(r.Z);const p=new r.Z({locale:i.SQ.EN,fallbackLocale:i.SQ.EN,messages:{[i.SQ.EN]:{...d,...l}},silentTranslationWarn:!0}),m=[i.SQ.EN],h=e=>(e=>Object.values(i.SQ).includes(e))(e)?e:e.includes("-")?h(n()(e.split("-"))):i.SQ.EN;function g(){const e=c.d.get("language")||navigator.language||navigator.userLanguage;return h(e)}async function f(e){const t=h(e);let s=n()(t.split("-"));switch(s){case"zh":s="zh-cn";break;case"hy":s="hy-am"}try{await o(85994)(`./${s}.js`)}catch(e){u.warn(`[dayjs]: unsupported locale "${s}"`,e)}}async function y(e){const t=h(e);if(!m.includes(t)){const e=t.replace("-","_"),{default:s}=await o(32086)(`./${e}.json`),{default:n}=await o(13081)(`./${e}.json`);p.setLocaleMessage(t,{...s,...n}),m.push(t)}p.locale=t}t.ZP=p},4458:function(e,t,o){"use strict";var s=o(70538),n=o(80472),a=o(74614),r=o(77057),i=o(70655),c=o(53545),d=o(36930),l=o(8755),u=o(46621),p=o(26711),m=o(56535),h=o(14924),g=o(20366),f=o(16546),y=o(20439),b=o(80710),w=o(85530),v=o(66926);let S=class extends((0,c.Wr)(l.tA.TransactionMixin,u.Z)){constructor(...e){super(...e),(0,r.Z)(this,"menuVisibility",!1),(0,r.Z)(this,"showConfirmInviteUser",!1),(0,r.Z)(this,"showMobilePopup",!1),(0,r.Z)(this,"showNotifsDarkPage",!1),(0,r.Z)(this,"browserNotifPopup",void 0),(0,r.Z)(this,"browserNotifPopupBlocked",void 0),(0,r.Z)(this,"assetsToNotifyQueue",void 0),(0,r.Z)(this,"storageReferrer",void 0),(0,r.Z)(this,"disclaimerVisibility",void 0),(0,r.Z)(this,"pageLoading",void 0),(0,r.Z)(this,"chartsEnabled",void 0),(0,r.Z)(this,"firstReadyTransaction",void 0),(0,r.Z)(this,"isSoraAccountConnected",void 0),(0,r.Z)(this,"libraryTheme",void 0),(0,r.Z)(this,"libraryDesignSystem",void 0),(0,r.Z)(this,"setSoraNetwork",void 0),(0,r.Z)(this,"setSubqueryEndpoint",void 0),(0,r.Z)(this,"setDefaultNodes",void 0),(0,r.Z)(this,"setNetworkChainGenesisHash",void 0),(0,r.Z)(this,"setFaucetUrl",void 0),(0,r.Z)(this,"setFeatureFlags",void 0),(0,r.Z)(this,"setBrowserNotifsPopup",void 0),(0,r.Z)(this,"setBrowserNotifsPopupBlocked",void 0),(0,r.Z)(this,"toggleDisclaimerDialogVisibility",void 0),(0,r.Z)(this,"resetBlockNumberSubscription",void 0),(0,r.Z)(this,"unsubscribeFromInvitedUsers",void 0),(0,r.Z)(this,"setSubNetworks",void 0),(0,r.Z)(this,"resetStorageReferrer",void 0),(0,r.Z)(this,"setApiKeys",void 0),(0,r.Z)(this,"resetNetworkSubscriptions",void 0),(0,r.Z)(this,"resetInternalSubscriptions",void 0),(0,r.Z)(this,"activateNetwokSubscriptions",void 0),(0,r.Z)(this,"connectToNode",void 0),(0,r.Z)(this,"setLanguage",void 0),(0,r.Z)(this,"setBlockNumber",void 0),(0,r.Z)(this,"setSmartContracts",void 0),(0,r.Z)(this,"getReferrer",void 0),(0,r.Z)(this,"notifyOnDeposit",void 0)}handleNotifyOnDeposit(e){e.length&&this.notifyOnDeposit({asset:e[0],message:this.t("assetDeposit")})}handleNotifyAboutTransaction(e,t){this.handleChangeTransaction(e,t)}updateConnectionSubsriptions(e){e?(this.isWalletLoaded&&this.activateNetwokSubscriptions(),this.setBlockNumber()):this.resetNetworkSubscriptions()}async confirmInviteUserIfConnected(e){e&&await this.confirmInvititation()}async confirmInviteUserIfHasStorage(e){this.isSoraAccountConnected&&e&&await this.confirmInvititation()}async confirmInvititation(){await this.getReferrer(),this.storageReferrer&&(this.storageReferrer===this.account.address?this.resetStorageReferrer():this.withApi((()=>{this.showConfirmInviteUser=!0})))}async created(){(0,w.lk)("element-icons"),(0,y.tQ)(b.ZP),await this.setLanguage((0,v.Kd)()),await this.withLoading((async()=>{const{data:e}=await y.ZP.get("/env.json");if(!e.NETWORK_TYPE)throw new Error("NETWORK_TYPE is not set");await this.setApiKeys(e?.API_KEYS),this.setFeatureFlags(e?.FEATURE_FLAGS),this.setSoraNetwork(e.NETWORK_TYPE),this.setSubqueryEndpoint(e.SUBQUERY_ENDPOINT),this.setDefaultNodes(e?.DEFAULT_NETWORKS),this.setSubNetworks(e.SUB_NETWORKS),await this.setSmartContracts(e.SUB_NETWORKS),e.FAUCET_URL&&this.setFaucetUrl(e.FAUCET_URL),e.CHAIN_GENESIS_HASH&&this.setNetworkChainGenesisHash(e.CHAIN_GENESIS_HASH),await this.runAppConnectionToNode(),(0,w.ue)(),this.showDisclaimer()}))}get isSwapPageWithCharts(){return this.$route.name===f.sn.Swap&&this.chartsEnabled}get isAboutPage(){return this.$route.name===f.sn.About}get isCurrentPageTooWide(){return this.isAboutPage||this.isSwapPageWithCharts||this.$route.name===f.sn.Tokens}get appClasses(){const e="app-main",t=[e];return this.$route.name&&t.push(`app-main--${this.$route.name.toLowerCase()}`),this.isSwapPageWithCharts&&t.push("app-main--has-charts"),t}get showBrowserNotifPopup(){return this.browserNotifPopup}set showBrowserNotifPopup(e){this.setBrowserNotifsPopup(e)}get showBrowserNotifBlockedPopup(){return this.browserNotifPopupBlocked}set showBrowserNotifBlockedPopup(e){this.setBrowserNotifsPopupBlocked(e)}goTo(e){(0,b.WF)(e),this.closeMenu()}goToSwap(){this.goTo(f.sn.Swap)}toggleMenu(){this.menuVisibility=!this.menuVisibility}closeMenu(){this.menuVisibility=!1}setDarkPage(e){this.showNotifsDarkPage=e}showDisclaimer(){l.d5.get("disclaimerApprove")||setTimeout((()=>this.toggleDisclaimerDialogVisibility()),3e3)}handleAppMenuClick(e){!!e.target.closest(".app-sidebar")||this.closeMenu()}openDownloadDialog(){this.showMobilePopup=!0}async beforeDestroy(){await this.resetInternalSubscriptions(),await this.resetNetworkSubscriptions(),this.resetBlockNumberSubscription(),this.unsubscribeFromInvitedUsers(),await d.connection.close()}async runAppConnectionToNode(){try{await this.connectToNode({onError:e=>this.handleNodeError(e,!0),onDisconnect:this.handleNodeDisconnect,onReconnect:this.handleNodeReconnect})}catch(e){}}};(0,i.__decorate)([a.SB.settings.browserNotifPopupVisibility],S.prototype,"browserNotifPopup",void 0),(0,i.__decorate)([a.SB.settings.browserNotifPopupBlockedVisibility],S.prototype,"browserNotifPopupBlocked",void 0),(0,i.__decorate)([a.SB.wallet.account.assetsToNotifyQueue],S.prototype,"assetsToNotifyQueue",void 0),(0,i.__decorate)([a.SB.referrals.storageReferrer],S.prototype,"storageReferrer",void 0),(0,i.__decorate)([a.SB.settings.disclaimerVisibility],S.prototype,"disclaimerVisibility",void 0),(0,i.__decorate)([a.SB.router.loading],S.prototype,"pageLoading",void 0),(0,i.__decorate)([a.Yn.settings.chartsEnabled],S.prototype,"chartsEnabled",void 0),(0,i.__decorate)([a.Yn.wallet.transactions.firstReadyTx],S.prototype,"firstReadyTransaction",void 0),(0,i.__decorate)([a.Yn.wallet.account.isLoggedIn],S.prototype,"isSoraAccountConnected",void 0),(0,i.__decorate)([a.Yn.libraryTheme],S.prototype,"libraryTheme",void 0),(0,i.__decorate)([a.Yn.libraryDesignSystem],S.prototype,"libraryDesignSystem",void 0),(0,i.__decorate)([a.QF.wallet.settings.setSoraNetwork],S.prototype,"setSoraNetwork",void 0),(0,i.__decorate)([a.QF.wallet.settings.setSubqueryEndpoint],S.prototype,"setSubqueryEndpoint",void 0),(0,i.__decorate)([a.QF.settings.setDefaultNodes],S.prototype,"setDefaultNodes",void 0),(0,i.__decorate)([a.QF.settings.setNetworkChainGenesisHash],S.prototype,"setNetworkChainGenesisHash",void 0),(0,i.__decorate)([a.QF.settings.setFaucetUrl],S.prototype,"setFaucetUrl",void 0),(0,i.__decorate)([a.QF.settings.setFeatureFlags],S.prototype,"setFeatureFlags",void 0),(0,i.__decorate)([a.QF.settings.setBrowserNotifsPopupEnabled],S.prototype,"setBrowserNotifsPopup",void 0),(0,i.__decorate)([a.QF.settings.setBrowserNotifsPopupBlocked],S.prototype,"setBrowserNotifsPopupBlocked",void 0),(0,i.__decorate)([a.QF.settings.toggleDisclaimerDialogVisibility],S.prototype,"toggleDisclaimerDialogVisibility",void 0),(0,i.__decorate)([a.QF.settings.resetBlockNumberSubscription],S.prototype,"resetBlockNumberSubscription",void 0),(0,i.__decorate)([a.QF.referrals.unsubscribeFromInvitedUsers],S.prototype,"unsubscribeFromInvitedUsers",void 0),(0,i.__decorate)([a.QF.web3.setSubNetworks],S.prototype,"setSubNetworks",void 0),(0,i.__decorate)([a.QF.referrals.resetStorageReferrer],S.prototype,"resetStorageReferrer",void 0),(0,i.__decorate)([a.aD.wallet.settings.setApiKeys],S.prototype,"setApiKeys",void 0),(0,i.__decorate)([a.aD.wallet.subscriptions.resetNetworkSubscriptions],S.prototype,"resetNetworkSubscriptions",void 0),(0,i.__decorate)([a.aD.wallet.subscriptions.resetInternalSubscriptions],S.prototype,"resetInternalSubscriptions",void 0),(0,i.__decorate)([a.aD.wallet.subscriptions.activateNetwokSubscriptions],S.prototype,"activateNetwokSubscriptions",void 0),(0,i.__decorate)([a.aD.settings.connectToNode],S.prototype,"connectToNode",void 0),(0,i.__decorate)([a.aD.settings.setLanguage],S.prototype,"setLanguage",void 0),(0,i.__decorate)([a.aD.settings.setBlockNumber],S.prototype,"setBlockNumber",void 0),(0,i.__decorate)([a.aD.web3.setSmartContracts],S.prototype,"setSmartContracts",void 0),(0,i.__decorate)([a.aD.referrals.getReferrer],S.prototype,"getReferrer",void 0),(0,i.__decorate)([a.aD.wallet.account.notifyOnDeposit],S.prototype,"notifyOnDeposit",void 0),(0,i.__decorate)([(0,c.RL)("assetsToNotifyQueue")],S.prototype,"handleNotifyOnDeposit",null),(0,i.__decorate)([(0,c.RL)("firstReadyTransaction",{deep:!0})],S.prototype,"handleNotifyAboutTransaction",null),(0,i.__decorate)([(0,c.RL)("nodeIsConnected")],S.prototype,"updateConnectionSubsriptions",null),(0,i.__decorate)([(0,c.RL)("isSoraAccountConnected")],S.prototype,"confirmInviteUserIfConnected",null),(0,i.__decorate)([(0,c.RL)("storageReferrer",{immediate:!0})],S.prototype,"confirmInviteUserIfHasStorage",null),S=(0,i.__decorate)([(0,c.wA)({components:{SoraLogo:p.default,AppHeader:m.default,AppFooter:h.default,AppMenu:g.default,AppMobilePopup:(0,b.kF)(f.z8.AppMobilePopup),AppLogoButton:(0,b.kF)(f.z8.AppLogoButton),AppDisclaimer:(0,b.kF)(f.z8.AppDisclaimer),AppBrowserNotifsEnableDialog:(0,b.kF)(f.z8.AppBrowserNotifsEnableDialog),AppBrowserNotifsBlockedDialog:(0,b.kF)(f.z8.AppBrowserNotifsBlockedDialog),ReferralsConfirmInviteUser:(0,b.kF)(f.z8.ReferralsConfirmInviteUser),BridgeTransferNotification:(0,b.kF)(f.z8.BridgeTransferNotification),NotificationEnablingPage:l.wx.NotificationEnablingPage,ConfirmDialog:l.wx.ConfirmDialog}})],S);var C=S,k=(0,o(1001).Z)(C,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("s-design-system-provider",{staticClass:"app",attrs:{value:e.libraryDesignSystem,id:"app"}},[o("app-header",{attrs:{loading:e.loading},on:{"toggle-menu":e.toggleMenu}}),o("div",{class:e.appClasses},[o("app-menu",{attrs:{visible:e.menuVisibility,"on-select":e.goTo,"is-about-page-opened":e.isAboutPage},on:{"open-download-dialog":e.openDownloadDialog},nativeOn:{click:function(t){return e.handleAppMenuClick.apply(null,arguments)}}},[o("app-logo-button",{staticClass:"app-logo--menu",attrs:{slot:"head",theme:e.libraryTheme},on:{click:e.goToSwap},slot:"head"})],1),o("div",{staticClass:"app-body",class:{"app-body__about":e.isAboutPage}},[o("s-scrollbar",{directives:[{name:"loading",rawName:"v-loading",value:e.pageLoading,expression:"pageLoading"}],staticClass:"app-body-scrollbar"},[o("div",{staticClass:"app-content"},[o("router-view",{attrs:{"parent-loading":e.loading||!e.nodeIsConnected}}),e.disclaimerVisibility?o("app-disclaimer"):e._e()],1),o("footer",{staticClass:"app-footer"},[o("div",{staticClass:"sora-logo"},[o("span",{staticClass:"sora-logo__title"},[e._v(e._s(e.t("poweredBy")))]),o("a",{staticClass:"sora-logo__image",attrs:{href:"https://sora.org",title:"Sora",target:"_blank",rel:"nofollow noopener"}},[o("sora-logo",{attrs:{theme:e.libraryTheme}})],1)])])])],1)],1),o("app-footer"),o("referrals-confirm-invite-user",{attrs:{visible:e.showConfirmInviteUser},on:{"update:visible":function(t){e.showConfirmInviteUser=t}}}),o("bridge-transfer-notification"),o("app-mobile-popup",{attrs:{visible:e.showMobilePopup},on:{"update:visible":function(t){e.showMobilePopup=t}}}),o("app-browser-notifs-enable-dialog",{attrs:{visible:e.showBrowserNotifPopup},on:{"update:visible":function(t){e.showBrowserNotifPopup=t},"set-dark-page":e.setDarkPage}}),o("app-browser-notifs-blocked-dialog",{attrs:{visible:e.showBrowserNotifBlockedPopup},on:{"update:visible":function(t){e.showBrowserNotifBlockedPopup=t}}}),e.showNotifsDarkPage?o("notification-enabling-page",[e._v(" "+e._s(e.t("browserNotificationDialog.pointer"))+" ")]):e._e(),e.isDesktop?o("confirm-dialog"):e._e()],1)}),[],!1,null,"a7167592",null),T=k.exports;s.default.use(l.ZP,{store:n.ZP});var A=o(29134),E=o(59832),N=o(35633),P=o(86769),x=o.n(P),R=o(16473),B=o.n(R),D=o(30272),F=o.n(D),_=o(41789),I=o(17561),L=o(92485),O=o(74728),M=o(57341),Z=o(38422),H=o(18379),q=o(28791),V=o(97233),j=o(21165),U=o(16901),W=o(52534),G=o(15251),K=o(97700),X=o(47210),Y=o(37178),$=o(85341),z=o(33986),Q=o(30389),J=o(1832),ee=o(7680),te=o(61843),oe=o(72235),se=o(47886),ne=o(71597),ae=o(91084),re=o(4331),ie=o(80864),ce=o(23615),de=o(72974),le=o(90601),ue=o(49478),pe=o(33887),me=o(24650),he=o.n(me),ge=o(2881),fe=o.n(ge),ye=o(13235),be=o.n(ye);s.default.use(N.ZP),s.default.use(_.Z,{store:n.ZP.original}),s.default.use(he()),s.default.use(fe()),s.default.use(be()),s.default.use(I.Z),s.default.use(L.Z),s.default.use(O.Z),s.default.use(M.Z),s.default.use(Z.Z),s.default.use(H.Z),s.default.use(q.Z),s.default.use(V.Z),s.default.use(j.Z),s.default.use(U.Z),s.default.use(W.Z),s.default.use(G.Z),s.default.use(K.Z),s.default.use(X.Z),s.default.use(Y.Z),s.default.use($.Z),s.default.use(z.Z),s.default.use(Q.Z),s.default.use(J.Z),s.default.use(ee.Z),s.default.use(te.Z),s.default.use(oe.Z),s.default.use(se.Z),s.default.use(ne.Z),s.default.use(ae.Z),s.default.use(re.ZP),s.default.use(ie.Z),s.default.use(ce.Z),s.default.use(de.Z),s.default.use(le.Z),s.default.use(ue.Z),s.default.use(pe.ZP),s.default.prototype.$prompt=x().prompt,s.default.prototype.$alert=x().alert,s.default.prototype.$message=B(),s.default.prototype.$notify=({message:e,type:t})=>{F()({message:e,title:"",duration:4500,type:t,customClass:"sora s-flex"});const o=Array.from(document.getElementsByClassName("el-notification")),s=o[o.length-1];document.getElementsByClassName("app-main").item(0).appendChild(s);const n=document.createElement("div");n.className="loader",s.appendChild(n)},(0,E.Dc)(),(0,E.rz)(A.Z.NEUMORPHIC);var we=o(69762),ve=o(68023),Se=o(70012),Ce=o(54377),ke=o(49693),Te=o(32586),Ae=o(31281),Ee=o(17813),Ne=o(34584),Pe=o(93450);(0,ve.D)([Se.N,Ce.N,ke.N,Te.N,Ae.N,Ee.N,Ne.N,Pe.N]),s.default.component("v-chart",we.ZP);var xe=o(40876);/windows/.test(navigator.userAgent.toLowerCase())&&!/firefox/.test(navigator.userAgent.toLowerCase())&&(0,xe.Y)(),s.default.config.productionTip=!1,s.default.config.devtools=!1,new s.default({i18n:v.ZP,router:b.ZP,store:n.ZP.original,render:e=>e(T)}).$mount("#app")},52859:function(e,t,o){"use strict";var s,n;o.d(t,{p:function(){return s},J:function(){return n}}),function(e){e.Pool="Pool",e.Staking="Staking",e.DataContainer="DataContainer"}(s||(s={})),function(e){e.DialogTitle="DialogTitle",e.StatusBadge="StatusBadge",e.PoolCard="PoolCard",e.StakeDialog="StakeDialog",e.ClaimDialog="ClaimDialog",e.CalculatorDialog="CalculatorDialog",e.CalculatorButton="CalculatorButton"}(n||(n={}))},44973:function(e,t,o){"use strict";o.d(t,{w:function(){return s},G:function(){return n}});const s=e=>()=>o(12488)(`./${e}.vue`),n=e=>()=>o(89706)(`./${e}.vue`)},80710:function(e,t,o){"use strict";o.d(t,{kF:function(){return h},JE:function(){return g},WF:function(){return f}});var s=o(70538),n=o(78345),a=o(53545),r=o(8755),i=o(36930),c=o(80472),d=o(85530),l=o(16546),u=o(52859),p=o(44973);s.default.use(n.ZP),a.wA.registerHooks(["beforeRouteEnter","beforeRouteUpdate","beforeRouteLeave"]);const m=r.it.RouteNames.Wallet,h=e=>()=>o(3457)(`./${e}.vue`),g=e=>()=>o(62513)(`./${e}.vue`);async function f(e){const t=b.currentRoute.name;if(e===l.sn.Wallet&&(c.ZP.getters.wallet.account.isLoggedIn?c.ZP.state.wallet.router.currentRoute!==m&&c.ZP.commit.wallet.router.navigate({name:m}):c.ZP.commit.wallet.router.navigate({name:r.it.RouteNames.WalletConnection})),t!==e)try{c.ZP.commit.router.setLoading(!0),await b.push({name:e})}finally{c.ZP.commit.router.setLoading(!1)}}const y=[{path:"/",redirect:"/swap"},{path:"/swap/:first?/:second?",name:l.sn.Swap,component:g(l.sn.Swap)},{path:"/about",name:l.sn.About,component:g(l.sn.About)},{path:"/wallet",name:l.sn.Wallet,component:g(l.sn.Wallet)},{path:"/card",name:l.sn.SoraCard,component:g(l.sn.SoraCard)},{path:"/bridge",component:g(l.sn.BridgeContainer),children:[{path:"",name:l.sn.Bridge,component:g(l.sn.Bridge)},{path:"history",name:l.sn.BridgeTransactionsHistory,component:g(l.sn.BridgeTransactionsHistory),meta:{requiresAuth:!0}},{path:"transaction",name:l.sn.BridgeTransaction,component:g(l.sn.BridgeTransaction),meta:{requiresAuth:!0}}]},{path:"",component:(0,p.G)(u.p.DataContainer),children:[{path:"/pool",component:g(l.sn.PoolContainer),children:[{path:"",name:u.p.Pool,component:(0,p.G)(u.p.Pool),props:{isFarmingPage:!0}},{path:"add/:first?/:second?",name:l.sn.AddLiquidity,component:g(l.sn.AddLiquidity),meta:{requiresAuth:!0}},{path:"remove/:first/:second",name:l.sn.RemoveLiquidity,component:g(l.sn.RemoveLiquidity),meta:{requiresAuth:!0}}]},{path:"/staking",name:l.sn.StakingContainer,component:g(l.sn.StakingContainer),redirect:{name:u.p.Staking},children:[{path:"demeter",name:u.p.Staking,component:(0,p.G)(u.p.Staking),props:{isFarmingPage:!1}}]}]},{path:"/explore",name:l.sn.ExploreContainer,component:g(l.sn.ExploreContainer),redirect:{name:l.sn.ExploreFarming},children:[{path:"demeter",component:(0,p.G)(u.p.DataContainer),children:[{path:"staking",name:l.sn.ExploreStaking,component:g(l.sn.ExploreDemeter),props:{isFarmingPage:!1}},{path:"farming",name:l.sn.ExploreFarming,component:g(l.sn.ExploreDemeter),props:{isFarmingPage:!0}}]},{path:"pools",component:g(l.sn.PoolContainer),children:[{path:"",name:l.sn.ExplorePools,component:g(l.sn.ExplorePools)}]},{path:"tokens",name:l.sn.ExploreTokens,component:g(l.sn.ExploreTokens)}]},{path:"/rewards",component:g(l.sn.RewardsTabs),children:[{path:"",name:l.sn.Rewards,component:g(l.sn.Rewards)},{path:"/referral",name:l.sn.ReferralProgram,component:g(l.sn.ReferralProgram),children:[{path:":referrerAddress?",meta:{isInvitationRoute:!0,requiresAuth:!0}}]}]},{path:"/referral/bond",name:l.sn.ReferralBonding,component:g(l.sn.ReferralBonding),meta:{requiresAuth:!0}},{path:"/referral/unbond",name:l.sn.ReferralUnbonding,component:g(l.sn.ReferralBonding),meta:{requiresAuth:!0}},{path:"/moonpay-history",name:l.sn.MoonpayHistory,component:g(l.sn.MoonpayHistory),meta:{requiresAuth:!0}},{path:"/stats",name:l.sn.Stats,component:g(l.sn.Stats)},{path:"*",redirect:"/swap"}],b=new n.ZP({mode:"hash",routes:y});b.beforeEach(((e,t,o)=>{const s=t.name,n=e.name,a=(t,n=!0)=>{c.ZP.commit.router.setRoute({prev:s,current:t}),o(n?{name:t}:void 0),(0,d.ue)(e)},r=c.ZP.getters.wallet.account.isLoggedIn;if(s!==l.sn.BridgeTransaction&&n===l.sn.BridgeTransactionsHistory&&c.ZP.commit.bridge.setHistoryPage(1),e.matched.some((e=>e.meta.isInvitationRoute))&&(i.api.validateAddress(e.params.referrerAddress)&&c.ZP.commit.referrals.setStorageReferrer(e.params.referrerAddress),r))a(l.sn.ReferralProgram);else{if(e.matched.some((e=>e.meta.requiresAuth))){if(l.ju.includes(n)&&r&&!c.ZP.getters.web3.isExternalAccountConnected)return void a(l.sn.Bridge);if(!r)return void a(l.sn.Wallet)}a(n,!1)}})),t.ZP=b},93034:function(e,t,o){"use strict";var s;o.d(t,{G:function(){return s}}),function(e){e.First="firstTokenValue",e.Second="secondTokenValue"}(s||(s={}))},4762:function(e,t,o){"use strict";o.d(t,{Y:function(){return a},j:function(){return r}});var s=o(8755);const{WalletModules:n}=s.cZ;var a;!function(e){e.Router="router",e.Web3="web3",e.Assets="assets",e.Settings="settings",e.Swap="swap",e.Charts="charts",e.Referrals="referrals",e.Pool="pool",e.Moonpay="moonpay",e.Bridge="bridge",e.AddLiquidity="addLiquidity",e.RemoveLiquidity="removeLiquidity",e.Rewards="rewards",e.DemeterFarming="demeterFarming",e.SoraCard="soraCard"}(a||(a={}));const r=[...Object.values(a),...n]},74614:function(e,t,o){"use strict";o.d(t,{SB:function(){return d},Yn:function(){return l},QF:function(){return u},aD:function(){return p}});var s=o(8755),n=o(80472),a=o(4762);const{VuexOperation:r,createDecoratorsObject:i,attachDecorator:c}=s.cZ,d={},l={},u={},p={};i(n.ZP.state,d,a.j,r.State),i(n.ZP.getters,l,a.j,r.Getter),i(n.ZP.commit,u,a.j,r.Mutation),i(n.ZP.dispatch,p,a.j,r.Action),l.libraryDesignSystem=c(r.Getter,"libraryDesignSystem"),l.libraryTheme=c(r.Getter,"libraryTheme")},80472:function(e,t,o){"use strict";o.d(t,{ZP:function(){return Ko},K9:function(){return Wo},nl:function(){return Go}});var s=o(70538),n=o(20629),a=o(63782),r=o(8755);const i=(0,a.e9)()({setRoute(e,t){e.prev=t.prev,e.current=t.current},setLoading(e,t){e.loading=t}});var c=i;var d={current:null,prev:null,loading:!1};var l=(0,a.b7)({namespaced:!0,state:d,mutations:c}),u=o(4762),p=o(36930),m=o(63471),h=o(28335),g=o(16546);function f(){return{evmAddress:m.ZP.getEvmUserAddress(),evmBalance:g.m8,networkType:null,subNetworks:[],evmNetwork:p.BridgeNetworks.ETH_NETWORK_ID,contractAddress:{[p.BridgeNetworks.ETH_NETWORK_ID]:{XOR:"",VAL:"",OTHER:""},[p.BridgeNetworks.ENERGY_NETWORK_ID]:{OTHER:""}},smartContracts:{[p.BridgeNetworks.ETH_NETWORK_ID]:{XOR:"",VAL:"",OTHER:""},[p.BridgeNetworks.ENERGY_NETWORK_ID]:{OTHER:""}}}}var y=f();const b=(0,a.e9)()({reset(e){const t=["contractAddress","subNetworks","smartContracts"],o=f();Object.keys(o).filter((e=>!t.includes(e))).forEach((t=>{e[t]=o[t]}))},setEvmAddress(e,t){e.evmAddress=t,m.ZP.storeEvmUserAddress(t)},resetEvmAddress(e){e.evmAddress="",m.ZP.removeEvmUserAddress()},setNetworkType(e,t){e.networkType=t},setSubNetworks(e,t){e.subNetworks=t},setEvmNetwork(e,t){e.evmNetwork=t,h.Zc.externalNetwork=t},setEvmBalance(e,t){e.evmBalance=t},setEthSmartContracts(e,{contracts:t,address:o}){s.default.set(e.smartContracts,p.BridgeNetworks.ETH_NETWORK_ID,{XOR:t.XOR,VAL:t.VAL,OTHER:t.OTHER}),s.default.set(e.contractAddress,p.BridgeNetworks.ETH_NETWORK_ID,{XOR:o.XOR,VAL:o.VAL,OTHER:o.OTHER})},setEnergySmartContracts(e,{contracts:t,address:o}){s.default.set(e.smartContracts,p.BridgeNetworks.ENERGY_NETWORK_ID,{OTHER:t.OTHER}),s.default.set(e.contractAddress,p.BridgeNetworks.ENERGY_NETWORK_ID,{OTHER:o.OTHER})}});var w=b;const v=(0,a.h)()({contractAbi:(...e)=>t=>{const{state:o}=R(e);return o.smartContracts[o.evmNetwork][t]},contractAddress:(...e)=>t=>{const{state:o}=R(e);return o.contractAddress[o.evmNetwork][t]},isExternalAccountConnected(...e){const{state:t}=R(e);return!!t.evmAddress&&"undefined"!==t.evmAddress},defaultNetworkType(...e){const{state:t}=R(e);return t.subNetworks?.find((e=>e.id===t.evmNetwork))?.defaultType},isValidNetworkType(...e){const{state:t,getters:o}=R(e);return!!t.networkType&&t.networkType===o.defaultNetworkType}});var S=v,C=o(6044),k=o(77616),T=o(85530),A=o(25108);async function E(e,t){const{commit:o}=B(e),s=await m.ZP.readSmartContract(m.LB.Ethereum,`${m.CH.Internal}/MASTER.json`),n=await m.ZP.readSmartContract(m.LB.Ethereum,`${m.CH.Other}/${m.Gg.Bridge}.json`),a=await m.ZP.readSmartContract(m.LB.Ethereum,`${m.CH.Other}/${m.Gg.ERC20}.json`);o.setEthSmartContracts({address:{XOR:t.CONTRACTS.XOR.MASTER,VAL:t.CONTRACTS.VAL.MASTER,OTHER:t.CONTRACTS.OTHER.MASTER},contracts:{XOR:s,VAL:s,OTHER:{BRIDGE:n,ERC20:a}}})}const N=(0,a.y2)({async connectExternalAccount(e,t){const{commit:o}=B(e),s=await m.ZP.onConnect({provider:t});o.setEvmAddress(s)},async setEvmNetworkType(e,t){const{commit:o}=B(e);let s="";s=t?m.O[t]:await m.ZP.fetchEvmNetworkType(),o.setNetworkType(s)},async setSmartContracts(e,t){for(const o of t)switch(o.id){case p.BridgeNetworks.ETH_NETWORK_ID:await E(e,o);case p.BridgeNetworks.ENERGY_NETWORK_ID:}},async getEvmBalance(e){const{commit:t,state:o}=B(e);let s=g.m8;try{const e=o.evmAddress;if(e){const t=await m.ZP.getEthersInstance(),o=await t.getBalance(e),n=k.dF(o.toString());s=new p.FPNumber(n).toCodecString()}}catch(e){A.error(e)}return t.setEvmBalance(s),s},async getBalanceByEvmAddress(e,t){const{dispatch:o,state:s}=B(e);let n=g.m8,a=18;const r=s.evmAddress;if(!r)return{value:n,decimals:a};try{const e=await m.ZP.getEthersInstance();if((0,T.uc)(t))n=await o.getEvmBalance();else{const o=new C.CH(t,m.dL.balance,e.getSigner()),s=[r],i=await o.balanceOf(...s);a=await o.decimals(),n=p.FPNumber.fromCodecValue(i._hex,+a).toCodecString()}}catch(e){}return{value:n,decimals:a}},async getEvmTokenAddressByAssetId(e,t){const{getters:o}=B(e);try{if(!t)return"";const e=await m.ZP.getEthersInstance(),s=o.contractAbi(m.HR.Other)[m.Gg.Bridge].abi,n=o.contractAddress(m.HR.Other);if(!n||!s)return A.error("Contract address/abi is not found"),"";const a=new C.CH(n,s,e.getSigner()),r=[t];return await a._sidechainTokens(...r)}catch(e){return A.error(e),""}},async getAllowanceByEvmAddress(e,t){const{getters:o,state:s}=B(e);try{const e=o.contractAddress(m.HR.Other),n=await m.ZP.getEthersInstance(),a=new C.CH(t,m.dL.allowance,n.getSigner()),r=[s.evmAddress,e],i=await a.allowance(...r);return p.FPNumber.fromCodecValue(i._hex).toString()}catch(e){throw A.error(e),e}}});var P=N;const x=(0,a.b7)({namespaced:!0,state:y,mutations:w,getters:S,actions:P}),R=e=>Go(e,u.Y.Web3,x),B=e=>Wo(e,u.Y.Web3,x);var D=x;const F=(0,a.e9)()({setRegisteredAssetsFetching(e,t){e.registeredAssetsFetching=t},setRegisteredAssets(e,t){e.registeredAssets=t,e.registeredAssetsFetching=!1},resetRegisteredAssets(e){e.registeredAssets=[],e.registeredAssetsFetching=!1}});var _=F;var I={registeredAssets:[],registeredAssetsFetching:!1},L=o(82753);const O=(0,a.h)()({whitelistAssets(...e){const{rootState:t,rootGetters:o}=j(e);return t.wallet.account.assets.filter((e=>r.hi.assets.isWhitelist(e,o.wallet.account.whitelist)))},assetsDataTable(...e){const{rootState:t}=j(e);return t.wallet.account.assets.reduce(((e,t)=>({...e,[t.address]:t})),{})},assetDataByAddress(...e){const{getters:t,state:o,rootGetters:s}=j(e);return e=>{if(!e)return;const n=t.assetsDataTable[e];if(!n)return null;const{externalAddress:a,externalBalance:r,externalDecimals:i}=(0,T.U8)(n,o.registeredAssets)||{},{balance:c}=s.wallet.account.accountAssetsAddressTable[n.address]||{};return{...n,balance:c,externalAddress:a,externalBalance:r,externalDecimals:i}}},xor(...e){const{getters:t}=j(e);return t.assetDataByAddress(L.XOR.address)}});var M=O,Z=o(25108);const H=(0,a.y2)({async updateRegisteredAssets(e,t){const{state:o,commit:s,rootDispatch:n}=U(e);if(!o.registeredAssetsFetching){t&&s.resetRegisteredAssets(),s.setRegisteredAssetsFetching(!0);try{const e=await h.Zc.getRegisteredAssets(),t=await Promise.all(e.map((async e=>{const t={...e,externalBalance:g.m8};try{if(t.externalAddress||(t.externalAddress=await n.web3.getEvmTokenAddressByAssetId(e.address)),t.externalAddress){const{value:e,decimals:o}=await n.web3.getBalanceByEvmAddress(t.externalAddress);t.externalBalance=e,t.externalDecimals||(t.externalDecimals=o)}}catch(e){Z.error(e)}return t})));s.setRegisteredAssets(t)}catch(e){Z.error(e),s.resetRegisteredAssets()}}}});var q=H;const V=(0,a.b7)({namespaced:!0,state:I,mutations:_,getters:M,actions:q}),j=e=>Go(e,u.Y.Assets,V),U=e=>Wo(e,u.Y.Assets,V);var W=V,G=o(6029),K=o(25108);const X=(0,a.e9)()({setNodeRequest(e,{node:t,isReconnection:o=!1}){e.nodeAddressConnecting=t?.address??"",e.nodeConnectionAllowance=o},setNodeSuccess(e,t={}){e.node={...t},e.nodeAddressConnecting="",e.nodeConnectionAllowance=!0,G.d.set("node",JSON.stringify(t))},setNodeFailure(e){e.nodeAddressConnecting="",e.nodeConnectionAllowance=!0},setDefaultNodes(e,t){if(e.defaultNodes=[...t],!e.node)return;const o=e.defaultNodes.find((t=>t.address===e.node.address));o&&(e.node={...o},G.d.set("node",JSON.stringify(e.node)))},setCustomNodes(e,t){e.customNodes=[...t],G.d.set("customNodes",JSON.stringify(t))},resetNode(e){e.node={},G.d.remove("node")},setNetworkChainGenesisHash(e,t){e.chainGenesisHash=t||""},setSlippageTolerance(e,t){e.slippageTolerance=t,G.Z.set("slippageTolerance",t)},setMarketAlgorithm(e,t=g.Dm.SMART){e.marketAlgorithm=t,G.Z.set("marketAlgorithm",t)},setChartsEnabled(e,t){e.сhartsEnabled=t,G.Z.set("сhartsEnabled",t)},setTransactionDeadline(e,t){e.transactionDeadline=t,G.Z.set("transactionDeadline",t)},setFaucetUrl(e,t){e.faucetUrl=t},setSelectNodeDialogVisibility(e,t){e.selectNodeDialogVisibility=t},setSelectLanguageDialogVisibility(e,t){e.selectLanguageDialogVisibility=t},toggleDisclaimerDialogVisibility(e){e.disclaimerVisibility=!e.disclaimerVisibility},setBrowserNotifsPopupEnabled(e,t){e.browserNotifPopupVisibility=t},setBrowserNotifsPopupBlocked(e,t){e.browserNotifPopupBlockedVisibility=t},setBrowserNotifsAgreement(e,t){e.browserNotifsPermission=t},setLanguage(e,t){e.language=t,G.d.set("language",t)},setUserDisclaimerApprove(e){e.userDisclaimerApprove=!0,G.d.set("disclaimerApprove",!0)},updateDisplayRegions(e){try{e.displayRegions=new Intl.DisplayNames([e.language],{type:"region"})}catch(t){K.warn("Intl.DisplayNames issue",t),e.displayRegions=null}},setFeatureFlags(e,t={}){e.featureFlags={...e.featureFlags,...t}},setBlockNumber(e,t){e.blockNumber=t||0},setBlockNumberUpdates(e,t){e.blockNumberUpdates=t},resetBlockNumberSubscription(e){e.blockNumberUpdates?.unsubscribe(),e.blockNumberUpdates=null},setInternetConnectionEnabled(e){e.internetConnection=!0},setInternetConnectionDisabled(e){e.internetConnection=!1},setInternetConnectionSpeed(e){e.internetConnectionSpeed=navigator?.connection?.downlink??0}});var Y=X,$=o(66926);var z=function(){const e=G.d.get("node"),t=G.d.get("customNodes"),o=G.d.get("disclaimerApprove"),s=G.Z.get("сhartsEnabled"),n="Notification"in window;return{featureFlags:{},slippageTolerance:G.Z.get("slippageTolerance")||g.FP,marketAlgorithm:G.Z.get("marketAlgorithm")||g.xZ,"сhartsEnabled":!s||Boolean(JSON.parse(s)),userDisclaimerApprove:!!o&&JSON.parse(o),transactionDeadline:Number(G.Z.get("transactionDeadline"))||20,isBrowserNotificationApiAvailable:n,browserNotifsPermission:n?Notification.permission:"default",node:e?JSON.parse(e):{},language:(0,$.Kd)(),displayRegions:void 0,defaultNodes:[],customNodes:t?JSON.parse(t):[],nodeAddressConnecting:"",nodeConnectionAllowance:!0,chainGenesisHash:"",faucetUrl:"",selectNodeDialogVisibility:!1,selectLanguageDialogVisibility:!1,disclaimerVisibility:!1,browserNotifPopupVisibility:!1,browserNotifPopupBlockedVisibility:!1,blockNumber:0,blockNumberUpdates:void 0,internetConnection:void 0,internetConnectionSpeed:void 0}}();const Q=(0,a.h)()({defaultNodesHashTable(...e){const{state:t}=ce(e);return t.defaultNodes.reduce(((e,t)=>({...e,[t.address]:t})),{})},customNodes(...e){const{state:t,getters:o}=ce(e);return t.customNodes.filter((e=>!(e.address in o.defaultNodesHashTable)))},nodeList(...e){const{state:t,getters:o}=ce(e);return[...t.defaultNodes,...o.customNodes]},nodeIsConnecting(...e){const{state:t}=ce(e);return!!t.nodeAddressConnecting},nodeIsConnected(...e){const{state:t}=ce(e);return!!t.node?.address&&!t.nodeAddressConnecting&&r.ZI.opened},liquiditySource(...e){const{state:t}=ce(e);return g.V3[t.marketAlgorithm]},moonpayApiKey(...e){const{rootState:t}=ce(e);return t.wallet.settings.apiKeys.moonpay},moonpayEnabled(...e){const{state:t,getters:o}=ce(e);return!!o.moonpayApiKey&&!!t.featureFlags.moonpay},chartsFlagEnabled(...e){const{state:t}=ce(e);return!!t.featureFlags.charts},chartsEnabled(...e){const{state:t}=ce(e);return!!t.featureFlags.charts&&t.сhartsEnabled},soraCardEnabled(...e){const{state:t}=ce(e);return t.featureFlags.soraCard},notificationActivated(...e){const{state:t}=ce(e);return"granted"===t.browserNotifsPermission},isInternetConnectionEnabled(...e){const{state:t}=ce(e);return t.internetConnection??navigator.onLine},internetConnectionSpeedMb(...e){const{state:t}=ce(e);return t.internetConnectionSpeed??navigator?.connection?.downlink??0},isInternetConnectionStable(...e){const{getters:t}=ce(e);return t.internetConnectionSpeedMb>=1||!t.internetConnectionSpeedMb}});var J=Q,ee=o(54643),te=o(20439);async function oe(e,t,o){const s=(e,t)=>{throw new Error(`${e}: argument ${t} is required`)};if(!e)return s(oe.name,"url");if(!t)return s(oe.name,"method");const{data:n}=await te.ZP.post(e,{id:1,jsonrpc:"2.0",method:t,params:o});return n.result}var se=o(25108);async function ne(){const{endpoint:e,opened:t}=r.ZI;e&&t&&(await r.ZI.close(),se.info("Disconnected from node",e))}const ae=(0,a.y2)({async connectToNode(e,t={}){const{dispatch:o,commit:s,state:n,rootState:a,getters:i}=de(e);if(!n.nodeConnectionAllowance)return;const{node:c,onError:d,currentNodeIndex:l=0,...u}=t,p=i.nodeList[l],m=c||(n.node.address?n.node:p);try{if(await o.setNode({node:m,onError:d,...u}),!a.wallet.settings.isWalletLoaded)try{await(0,r.y2)({permissions:g.i7})}catch(e){throw se.error(e),e}}catch(e){if(m&&m.address===n.node.address&&s.resetNode(),n.node.address||l!==n.defaultNodes.length-1){const e=m?.address===p.address?l+1:0;await o.connectToNode({onError:d,currentNodeIndex:e,...u})}throw d&&"function"==typeof d&&d(e),e}},async setNode(e,t={}){const{dispatch:o,commit:s,state:n,getters:a}=de(e),{node:i,connectionOptions:c={},onError:d,onDisconnect:l,onReconnect:u}=t,p=i?.address??"",m=p in a.defaultNodesHashTable,h={once:!0,timeout:m?void 0:6e4,...c},g=!h.once,f=()=>p!==n.nodeAddressConnecting,y=async()=>{await ne(),"function"==typeof l&&l(i),o.connectToNode({node:i,onError:d,onDisconnect:l,onReconnect:u,connectionOptions:{...h,once:!1}})},b=()=>{r.ZI.addEventListener("disconnected",y)};try{if(!p)throw new Error("Node address is not set");if(s.setNodeRequest({node:i,isReconnection:g}),se.info("Connection request to node",p),await ne(),await r.ZI.open(p,{...h,eventListeners:[["ready",b]]}),f())return;se.info("Connected to node",r.ZI.endpoint);const t=r.ZI.api.genesisHash.toHex();if(m)s.setNetworkChainGenesisHash(t);else if(n.chainGenesisHash||await async function(e){const{commit:t,state:o}=de(e);try{const e=await Promise.any(o.defaultNodes.map((e=>{return oe((t=e.address,/^wss:\/\/ws\.(?:.+\.)*sora2\.soramitsu\.co\.jp\/?$/.test(t)?t.replace(/^wss:\/\/ws/,"https://rpc"):t.replace(/^ws(s)?:/,"http$1:")),"chain_getBlockHash",[0]);var t})));t.setNetworkChainGenesisHash(e)}catch(e){se.error(e)}}(e),t!==n.chainGenesisHash)throw await ne(),new ee.x({key:"node.errors.network",payload:{address:p}},`Chain genesis hash doesn't match: "${t}" received, should be "${n.chainGenesisHash}"`);g&&"function"==typeof u&&u(i),s.setNodeSuccess(i)}catch(e){se.error(e);const t=e instanceof ee.x?e:new ee.x({key:"node.errors.connection",payload:{address:p}});throw f()||s.setNodeFailure(),t}},async addCustomNode(e,t){const{commit:o,getters:s}=de(e),n=[...s.customNodes,t];o.setCustomNodes(n)},async updateCustomNode(e,{address:t,node:o}){const{commit:s,getters:n}=de(e),a=n.customNodes.filter((e=>e.address!==t));s.setCustomNodes([...a,o])},async removeCustomNode(e,t){const{commit:o,getters:s}=de(e),n=s.customNodes.filter((e=>e.address!==t.address));o.setCustomNodes(n)},async setLanguage(e,t){const{commit:o}=de(e),s=(0,$.BR)(t);await(0,$.rj)(s),await(0,$.Gm)(s),(0,T.ue)(),(0,T.RA)(s),o.setLanguage(s),o.updateDisplayRegions()},async setBlockNumber(e){const{commit:t}=de(e);t.resetBlockNumberSubscription();const o=r.hi.system.getBlockNumberObservable().subscribe((e=>{t.setBlockNumber(e)}));t.setBlockNumberUpdates(o)}});var re=ae;const ie=(0,a.b7)({namespaced:!0,state:z,mutations:Y,getters:J,actions:re}),ce=e=>Go(e,u.Y.Settings,ie),de=e=>Wo(e,u.Y.Settings,ie);var le=ie,ue=o(76262),pe=o.n(ue),me=o(31840);function he(){return{tokenFromAddress:"",tokenToAddress:"",tokenFromBalance:null,tokenToBalance:null,fromValue:"",toValue:"",amountWithoutImpact:"",liquidityProviderFee:"",isExchangeB:!1,enabledAssets:{lockedSources:[]},rewards:[],route:[],selectedDexId:me.DexId.XOR,dexQuoteData:{}}}var ge=he();const fe=(0,a.e9)()({reset(e){const t=pe()(["tokenFromAddress","tokenToAddress"],he());Object.keys(t).forEach((o=>{e[o]=t[o]}))},setTokenFromAddress(e,t){e.tokenFromAddress=t},resetTokenFromAddress(e){e.tokenFromAddress=""},setTokenFromBalance(e,t){e.tokenFromBalance=t},setTokenToAddress(e,t){e.tokenToAddress=t},resetTokenToAddress(e){e.tokenToAddress=""},setTokenToBalance(e,t){e.tokenToBalance=t},setFromValue(e,t){e.fromValue=t},setToValue(e,t){e.toValue=t},setAmountWithoutImpact(e,t){e.amountWithoutImpact=t},setExchangeB(e,t){e.isExchangeB=t},setLiquidityProviderFee(e,t){e.liquidityProviderFee=t},setPrimaryMarketsEnabledAssets(e,t){e.enabledAssets=Object.freeze({...t})},setRewards(e,t){e.rewards=Object.freeze([...t])},setRoute(e,t){e.route=Object.freeze([...t])},setSubscriptionPayload(e,{dexId:t,payload:o,paths:s,liquiditySources:n}){e.dexQuoteData={...e.dexQuoteData,[t]:Object.freeze({payload:o,paths:s,pairLiquiditySources:n})}},selectDexId(e,t){e.selectedDexId=t}});var ye=fe,be=o(77606),we=o.n(be),ve=o(59739);const Se=(0,a.h)()({tokenFrom(...e){const{state:t,rootGetters:o}=De(e),s=o.assets.assetDataByAddress(t.tokenFromAddress),n=t.tokenFromBalance;return n?{...s,balance:n}:s},tokenTo(...e){const{state:t,rootGetters:o}=De(e),s=o.assets.assetDataByAddress(t.tokenToAddress),n=t.tokenToBalance;return n?{...s,balance:n}:s},marketAlgorithms(...e){const{state:t}=De(e),o=[...new Set(Object.values(t.dexQuoteData).map((e=>e.pairLiquiditySources)).flat())].filter((e=>e!==ve.LiquiditySourceTypes.XYKPool));return Object.keys(g.V3).filter((e=>{const t=g.V3[e];return e===g.Dm.SMART||o.includes(t)}))},marketAlgorithmsAvailable(...e){const{getters:t}=De(e);return t.marketAlgorithms.length>1},swapLiquiditySource(...e){const{getters:t,rootGetters:o}=De(e);if(t.marketAlgorithmsAvailable&&o.settings.liquiditySource)return o.settings.liquiditySource},isAvailable(...e){const{state:t}=De(e),o=t.dexQuoteData?.[t.selectedDexId]?.paths;return!we()(o)&&Object.values(o).every((e=>!we()(e)))},swapMarketAlgorithm(...e){const{getters:t}=De(e);return g.c$[t.swapLiquiditySource??""]},price(...e){const{state:t,getters:o}=De(e),{tokenFrom:s,tokenTo:n}=o;return s&&n?r.hi.divideAssets(s,n,t.fromValue,t.toValue,!1):g.m8},priceReversed(...e){const{state:t,getters:o}=De(e),{tokenFrom:s,tokenTo:n}=o;return s&&n?r.hi.divideAssets(s,n,t.fromValue,t.toValue,!0):g.m8},priceImpact(...e){const{state:t,getters:o}=De(e),{fromValue:s,toValue:n,amountWithoutImpact:a,isExchangeB:i}=t,{tokenFrom:c,tokenTo:d}=o;return c&&d?r.hi.swap.getPriceImpact(c,d,s,n,a,i):g.m8},minMaxReceived(...e){const{state:t,getters:o,rootState:s}=De(e),{fromValue:n,toValue:a,isExchangeB:i}=t,{tokenFrom:c,tokenTo:d}=o;return c&&d?r.hi.swap.getMinMaxValue(c,d,n,a,i,s.settings.slippageTolerance):g.m8}});var Ce,ke=Se,Te=o(99278),Ae=o(77057);class Ee{constructor(){(0,Ae.Z)(this,"subscriptions",void 0),this.subscriptions=new Map}add(e,{updateBalance:t,token:o}){const s=r.hi.assets.getAssetBalanceObservable(o).subscribe((e=>t(e)));this.subscriptions.set(e,{updateBalance:t,subscription:s})}remove(e){const t=this.subscriptions.get(e);t?.subscription?.unsubscribe(),t?.updateBalance?.(null),this.subscriptions.delete(e)}}!function(e){e.From="from",e.To="to"}(Ce||(Ce={}));const Ne=new Ee;function Pe(e,t){const{getters:o,commit:s,rootGetters:n}=Fe(e),{tokenFrom:a,tokenTo:r}=o,{setTokenFromBalance:i,setTokenToBalance:c}=s,d=t===Ce.From?a:r,l=t===Ce.From?i:c,u=e=>l(e);Ne.remove(t),n.wallet.account.isLoggedIn&&d?.address&&!(d.address in n.wallet.account.accountAssetsAddressTable)&&Ne.add(t,{updateBalance:u,token:d})}const xe=(0,a.y2)({async setTokenFromAddress(e,t){const{commit:o}=Fe(e);t?o.setTokenFromAddress(t):o.resetTokenFromAddress(),Pe(e,Ce.From)},async setTokenToAddress(e,t){const{commit:o}=Fe(e);t?o.setTokenToAddress(t):o.resetTokenToAddress(),Pe(e,Ce.To)},async switchTokens(e){const{commit:t,state:o}=Fe(e),{tokenFromAddress:s,tokenToAddress:n,fromValue:a,toValue:r,isExchangeB:i}=o;if(s&&n){const[o,c]=i?[r,""]:["",a];t.setTokenFromAddress(n),t.setTokenToAddress(s),t.setFromValue(o),t.setToValue(c),t.setExchangeB(!i),Pe(e,Ce.From),Pe(e,Ce.To)}},setSubscriptionPayload(e,{dexId:t,payload:o}){const{state:s,getters:n,commit:a}=Fe(e),i=n.tokenFrom?.address,c=n.tokenTo?.address;if(!(i&&c&&o))return;const d=t===me.DexId.XOR?s.enabledAssets:{tbc:[],xst:[],lockedSources:[]},l=r.hi.dex.getBaseAssetId(t),u=r.hi.dex.getSyntheticBaseAssetId(t),{paths:p,liquiditySources:m}=(0,Te.getPathsAndPairLiquiditySources)(i,c,o,d,l,u);a.setSubscriptionPayload({dexId:t,liquiditySources:m,paths:p,payload:o})},async updateSubscriptions(e){Pe(e,Ce.From),Pe(e,Ce.To)},async resetSubscriptions(e){Ne.remove(Ce.From),Ne.remove(Ce.To)},async reset(e){const{commit:t,dispatch:o}=Fe(e);o.resetSubscriptions(),t.reset()}});var Re=xe;const Be=(0,a.b7)({namespaced:!0,state:ge,mutations:ye,getters:ke,actions:Re}),De=e=>Go(e,u.Y.Swap,Be),Fe=e=>Wo(e,u.Y.Swap,Be);var _e=Be;function Ie(){return{referrer:"",referrerSubscription:null,invitedUsers:[],invitedUsersSubscription:null,amount:"",storageReferrer:G.Z.get("storageReferral")||"",isReferrerApproved:!1}}var Le=Ie();const Oe=(0,a.e9)()({resetReferrer(e){e.referrer=""},setReferrer(e,t){e.referrer=t},setReferrerSubscription(e,t){e.referrerSubscription=t},resetReferrerSubscription(e){e.referrerSubscription?.unsubscribe(),e.referrerSubscription=null},approveReferrer(e,t){e.isReferrerApproved=t},resetInvitedUsers(e){e.invitedUsers=[]},setInvitedUsers(e,t){e.invitedUsers=t},resetInvitedUsersSubscription(e){e.invitedUsersSubscription?.unsubscribe(),e.invitedUsersSubscription=null},setInvitedUsersSubscription(e,t){e.invitedUsersSubscription=t},resetAmount(e){e.amount=""},setAmount(e,t){e.amount=t},setStorageReferrer(e,t){e.storageReferrer=t,G.Z.set("storageReferral",t)},resetStorageReferrer(e){e.storageReferrer="",G.Z.set("storageReferral","")},reset(e){const t=pe()(["invitedUsers","invitedUsersSubscription"],Ie());Object.keys(t).forEach((o=>{e[o]=t[o]}))},unsubscribeFromInvitedUsers(e){e.invitedUsersSubscription?.unsubscribe(),e.invitedUsersSubscription=null,e.invitedUsers=[]}});var Me=Oe;var Ze=(0,a.y2)({async getReferrer(e){const{commit:t}=qe(e);t.resetReferrer();try{const e=await r.hi.referralSystem.getAccountReferrer();t.setReferrer(e)}catch(e){t.resetReferrer()}},async subscribeOnReferrer(e){const{commit:t,rootGetters:o}=qe(e);if(t.resetReferrerSubscription(),!o.wallet.account.isLoggedIn)return;const s=r.hi.referralSystem.subscribeOnReferrer(o.wallet.account.account.address).subscribe((e=>{e&&t.setReferrer(e)}));t.setReferrerSubscription(s)},async subscribeOnInvitedUsers(e){const{commit:t,rootGetters:o}=qe(e);if(t.resetInvitedUsersSubscription(),!o.wallet.account.isLoggedIn)return;const s=r.hi.referralSystem.subscribeOnAccountInvitedUsers().subscribe((e=>{t.setInvitedUsers(e)}));t.setInvitedUsersSubscription(s)}});const He=(0,a.b7)({namespaced:!0,state:Le,mutations:Me,actions:Ze}),qe=e=>Wo(e,u.Y.Referrals,He);var Ve=He;const je=(0,a.e9)()({setAccountLiquidityList(e,t){e.accountLiquidityList=t},resetAccountLiquidityList(e){e.accountLiquidityList?.unsubscribe(),e.accountLiquidityList=null},setAccountLiquidityUpdates(e,t){e.accountLiquidityUpdates=t},resetAccountLiquidityUpdates(e){e.accountLiquidityUpdates?.unsubscribe(),e.accountLiquidityUpdates=null},setAccountLiquidity(e,t){e.accountLiquidity=Object.freeze([...t])},resetAccountLiquidity(e){e.accountLiquidity=[]},setAccountLockedLiquidity(e,t){e.accountLockedLiquidity=Object.freeze([...t])},setAccountLockedLiquidityUpdates(e,t){e.accountLockedLiquiditySubscription=t},resetAccountLockedLiquidityUpdates(e){e.accountLockedLiquiditySubscription?.unsubscribe(),e.accountLockedLiquiditySubscription=null},setPoolApyObject(e,t){e.poolApyObject=Object.freeze({...t})},resetPoolApyObject(e){e.poolApyObject={}},updatePoolApyObject(e,t){e.poolApyObject=Object.freeze({...e.poolApyObject,...t})},setPoolApySubscription(e,t){e.poolApySubscription=t},resetPoolApySubscription(e){e.poolApySubscription?.(),e.poolApySubscription=null}});var Ue=je;var We={accountLiquidity:[],accountLiquidityList:null,accountLiquidityUpdates:null,poolApyObject:{},poolApySubscription:null,accountLockedLiquidity:[],accountLockedLiquiditySubscription:null};var Ge=(0,a.y2)({async subscribeOnAccountLiquidityList(e){const{commit:t,rootGetters:o}=ze(e);t.resetAccountLiquidityList(),o.wallet.account.isLoggedIn&&await(0,T.BV)((async()=>{const e=r.hi.poolXyk.getUserPoolsSubscription();t.setAccountLiquidityList(e),await r.hi.poolXyk.accountLiquidityLoaded.toPromise()}))},async subscribeOnAccountLiquidityUpdates(e){const{commit:t,rootGetters:o}=ze(e);t.resetAccountLiquidityUpdates(),o.wallet.account.isLoggedIn&&await(0,T.BV)((()=>{const e=r.hi.poolXyk.updated.subscribe((()=>{t.setAccountLiquidity(r.hi.poolXyk.accountLiquidity)}));t.setAccountLiquidityUpdates(e)}))},async subscribeOnAccountLockedLiquidity(e){const{commit:t,rootGetters:o}=ze(e);t.resetAccountLockedLiquidityUpdates(),o.wallet.account.isLoggedIn&&await(0,T.BV)((()=>{const e=r.hi.ceresLiquidityLocker.getLockerDataObservable().subscribe((e=>{t.setAccountLockedLiquidity(e)}));t.setAccountLockedLiquidityUpdates(e)}))},async unsubscribeAccountLiquidityListAndUpdates(e){const{commit:t}=ze(e);t.resetAccountLiquidityList(),t.resetAccountLiquidityUpdates(),t.resetAccountLockedLiquidityUpdates(),t.resetAccountLiquidity(),t.resetPoolApySubscription(),t.resetPoolApyObject(),r.hi.poolXyk.unsubscribeFromAllUpdates()},async getPoolApyObject(e){const{commit:t}=ze(e),o=await r.m5.pool.getPoolsApyObject();o&&t.setPoolApyObject(o)},async subscribeOnPoolsApy(e){const{commit:t,dispatch:o}=ze(e);t.resetPoolApySubscription(),await o.getPoolApyObject();const s=r.m5.pool.createPoolsApySubscription((e=>{t.updatePoolApyObject(e)}),(()=>{t.resetPoolApyObject()}));t.setPoolApySubscription(s)}}),Ke=o(57950);const Xe=(0,a.h)()({getLockedAmount(...e){const{state:t}=Qe(e);return(e,o)=>t.accountLockedLiquidity.reduce(((t,s)=>s.assetA===e&&s.assetB===o?t.add(s.poolTokens):t),Ke.FPNumber.ZERO)}});var Ye=Xe;const $e=(0,a.b7)({namespaced:!0,state:We,mutations:Ue,actions:Ge,getters:Ye}),ze=e=>Wo(e,u.Y.Pool,$e),Qe=e=>Go(e,u.Y.Pool,$e);var Je=$e;const et=(0,a.e9)()({setPollingTimestamp(e,t=Date.now()){e.pollingTimestamp=t},setDialogVisibility(e,t){e.dialogVisibility=t},setNotificationVisibility(e,t){e.notificationVisibility=t},setNotificationKey(e,t){e.notificationKey=t},setConfirmationVisibility(e,t){e.confirmationVisibility=t},setBridgeTxData(e,{data:t=null,startBridgeButtonVisibility:o=!1}={}){e.bridgeTransactionData=t,e.startBridgeButtonVisibility=o},updateTxsRequest(e,t){t&&(e.transactions=[]),e.transactionsFetching=!0},updateTxsSuccess(e,t){e.transactions=[...t],e.transactionsFetching=!1},updateTxsFailure(e){e.transactions=[],e.transactionsFetching=!1},setCurrencies(e,t){e.currencies=[...t]},resetCurrencies(e){e.currencies=[]}});var tt=et;var ot={api:new(o(82344).u),dialogVisibility:!1,notificationVisibility:!1,notificationKey:"",confirmationVisibility:!1,pollingTimestamp:0,transactions:[],transactionsFetching:!1,bridgeTransactionData:null,startBridgeButtonVisibility:!1,currencies:[]},st=o(16011),nt=o(25108);const at=(0,a.y2)({async getCurrencies(e){const{state:t,commit:o}=ct(e);o.resetCurrencies();try{const e=await t.api.getCurrencies();o.setCurrencies(e)}catch(e){nt.error(e),o.resetCurrencies()}},async getTransactions(e,t=!1){const{state:o,commit:s,rootGetters:n,rootState:a}=ct(e);if(n.wallet.account.isLoggedIn&&!o.transactionsFetching&&o.api.publicKey){s.updateTxsRequest(t);try{const e=await o.api.getTransactionsByExtId(a.wallet.account.address);nt.info("Moonpay: user transactions request"),s.updateTxsSuccess(e)}catch(e){nt.error(e),s.updateTxsFailure()}}},async createTransactionsPolling(e){const{dispatch:t,commit:o}=ct(e);o.setPollingTimestamp();let s=setInterval((()=>t.getTransactions()),15e3);return()=>{null!==s&&(clearInterval(s),o.setPollingTimestamp(0),s=null)}},async getTransactionTranserData(e,t){try{const e=1,o=0,s=await m.ZP.getEthersInstance();nt.info(`Moonpay: found latest moonpay transaction.\nChecking ethereum transaction by hash:\n${t}`),await s.waitForTransaction(t,e,o);const n=await s.getTransaction(t);if(nt.info("Moonpay: ethereum transaction data received:",n),"0x"===n.data){const{to:e="",value:t}=n,o=new p.FPNumber(t).toString();return{amount:o,address:g.jF,to:e}}{const e=["function transfer(address to, uint256 value)"],t=new st.vU(e).parseTransaction({data:n.data}),o=n.to??"",{value:s,to:a=""}=t.args;return{amount:new p.FPNumber(s).toString(),address:o,to:a}}}catch(e){return nt.error(e),null}},async findRegisteredAssetByExternalAddress(e,t){const{rootState:o,rootDispatch:s}=ct(e);if(!t)return;await s.assets.updateRegisteredAssets();const n=o.assets.registeredAssets,a=t.toLowerCase();return n.find((e=>e.externalAddress.toLowerCase()===a))}});var rt=at;const it=(0,a.b7)({namespaced:!0,state:ot,mutations:tt,actions:rt}),ct=e=>Wo(e,u.Y.Moonpay,it);var dt=it;const lt=(0,a.e9)()({setSoraToEvm(e,t){e.isSoraToEvm=t},setAssetAddress(e,t){e.assetAddress=t||""},setAssetBalance(e,t=null){e.assetBalance=t},setAmount(e,t){e.amount=t||""},getEvmNetworkFeeRequest(e){e.evmNetworkFeeFetching=!0},getEvmNetworkFeeSuccess(e,t){e.evmNetworkFee=t,e.evmNetworkFeeFetching=!1},getEvmNetworkFeeFailure(e){e.evmNetworkFee=g.m8,e.evmNetworkFeeFetching=!1},setHistory(e){e.history=[...h.Zc.historyList]},setHistoryPage(e,t){e.historyPage=t||1},setHistoryId(e,t){e.historyId=t||""},addTxIdInProgress(e,t){e.inProgressIds={...e.inProgressIds,[t]:!0}},removeTxIdFromProgress(e,t){e.inProgressIds=pe()([t],e.inProgressIds)},addTxIdInApprove(e,t){e.waitingForApprove={...e.waitingForApprove,[t]:!0}},removeTxIdFromApprove(e,t){e.waitingForApprove=pe()([t],e.waitingForApprove)},setEvmBlockNumber(e,t){e.evmBlockNumber=t},setHistoryLoading(e,t){e.historyLoading=t},setNotificationData(e,t=null){e.notificationData=t}});var ut=lt;var pt={isSoraToEvm:!0,assetAddress:"",assetBalance:null,amount:"",evmNetworkFee:g.m8,evmNetworkFeeFetching:!1,evmBlockNumber:0,history:[],historyPage:1,historyId:"",historyLoading:!1,waitingForApprove:{},inProgressIds:{},notificationData:null};const mt=(0,a.h)()({asset(...e){const{state:t,rootGetters:o}=kt(e),s=o.assets.assetDataByAddress(t.assetAddress),n=t.assetBalance;return n?{...s,balance:n}:s},isRegisteredAsset(...e){const{getters:t}=kt(e);return!!t.asset?.externalAddress},soraNetworkFee(...e){const{state:t,rootState:o}=kt(e);return t.isSoraToEvm?o.wallet.settings.networkFees[p.Operation.EthBridgeOutgoing]:g.m8},historyItem(...e){const{state:t}=kt(e);return t.historyId?t.history.find((e=>e.id===t.historyId))??null:null},isTxEvmAccount(...e){const{getters:t,rootState:o}=kt(e),s=t.historyItem?.to,n=o.web3.evmAddress;return!s||m.ZP.addressesAreEqual(s,n)}});var ht=mt,gt=o(4835),ft=o.n(gt),yt=o(25108);const bt=new Ee;function wt(e){const{rootGetters:t}=Tt(e);if(!t.web3.isValidNetworkType)throw new Error("Change evm network in Metamask")}const vt=(0,a.y2)({async updateBalanceSubscription(e){const{getters:t,commit:o,rootGetters:s}=Tt(e),n=e=>o.setAssetBalance(e);bt.remove("asset"),s.wallet.account.isLoggedIn&&t.asset?.address&&!(t.asset.address in s.wallet.account.accountAssetsAddressTable)&&bt.add("asset",{updateBalance:n,token:t.asset})},async resetBalanceSubscription(e){bt.remove("asset")},async setAssetAddress(e,t){const{commit:o,dispatch:s}=Tt(e);o.setAssetAddress(t),s.updateBalanceSubscription()},async resetBridgeForm(e){const{commit:t,dispatch:o}=Tt(e);o.resetBalanceSubscription(),t.setAmount(),t.setSoraToEvm(!0)},async updateEvmBlockNumber(e,t){const{commit:o}=Tt(e),s=t??await(await m.ZP.getEthersInstance()).getBlockNumber();o.setEvmBlockNumber(s)},async getBridgeHistoryInstance(e){const{rootState:t}=Tt(e),o=t.wallet.settings.apiKeys?.etherscan,s=new h.He(o);return await s.init(),s},async updateHistory(e,t=!1){const{commit:o,state:s,dispatch:n,rootState:a,rootGetters:r}=Tt(e);if(s.historyLoading)return;o.setHistoryLoading(!0);const i=await n.getBridgeHistoryInstance(),c=a.wallet.account.address,d=r.assets.assetsDataTable,l=a.wallet.settings.networkFees,u=Object.values(m.HR).map((e=>r.web3.contractAddress(e))),p=ft()(u),h=()=>o.setHistory();t&&await i.clearHistory(h),await i.updateAccountHistory(c,d,l,p,h),o.setHistoryLoading(!1)},async getEvmNetworkFee(e){const{getters:t,commit:o,state:s}=Tt(e);if(t.asset?.address){o.getEvmNetworkFeeRequest();try{const e=await m.ZP.fetchEvmNetworkFee(t.asset.address,s.isSoraToEvm);o.getEvmNetworkFeeSuccess(e)}catch(e){o.getEvmNetworkFeeFailure()}}},async generateHistoryItem(e,t){const{commit:o}=Tt(e),s=function(e,{date:t=Date.now(),step:o=1,payload:s={},...n}={}){const{getters:a,state:r,rootState:i}=Tt(e);return{type:n.type??(r.isSoraToEvm?p.Operation.EthBridgeOutgoing:p.Operation.EthBridgeIncoming),amount:n.amount??r.amount,symbol:n.symbol??a.asset?.symbol,assetAddress:n.assetAddress??a.asset?.address,startTime:t,endTime:t,status:"",transactionStep:o,hash:"",ethereumHash:"",transactionState:h.PO.INITIAL,soraNetworkFee:n.soraNetworkFee??a.soraNetworkFee,ethereumNetworkFee:n.ethereumNetworkFee??r.evmNetworkFee,externalNetwork:i.web3.evmNetwork,to:n.to??i.web3.evmAddress,payload:s}}(e,t),n=h.Zc.generateHistoryItem(s);if(!n)throw new Error('[Bridge]: "generateHistoryItem" failed');return o.setHistory(),n},async signEvmTransactionSoraToEvm(e,t){const{getters:o,rootState:s,rootGetters:n}=Tt(e),a=h.Zc.getHistory(t);if(!a?.hash)throw new Error("TX ID cannot be empty!");if(!a.amount)throw new Error("TX amount cannot be empty!");if(!a.assetAddress)throw new Error("TX assetAddress cannot be empty!");const r=n.assets.assetDataByAddress(a.assetAddress);if(!r?.externalAddress)throw new Error(`Asset not registered: ${a.assetAddress}`);wt(e);const i=await(0,h.z2)(a);if(!o.isTxEvmAccount)throw new Error(`Change account in MetaMask to ${i.to}`);const c=await m.ZP.getEthersInstance(),d=r.symbol,l=s.web3.evmAddress,u=[m.HR.XOR,m.HR.VAL].includes(d)&&s.web3.evmNetwork===p.BridgeNetworks.ETH_NETWORK_ID,g=u?d:m.HR.Other,f={[m.HR.XOR]:n.web3.contractAbi(m.HR.XOR),[m.HR.VAL]:n.web3.contractAbi(m.HR.VAL),[m.HR.Other]:n.web3.contractAbi(m.HR.Other)}[g],y=f[m.Gg.Bridge]?.abi??f.abi,b=n.web3.contractAddress(g),w=new C.CH(b,y,c.getSigner()),v=u?"mintTokensByPeers":i.currencyType===p.BridgeCurrencyType.TokenAddress?"receiveByEthereumAssetAddress":"receiveBySidechainAssetId",S=[u||i.currencyType===p.BridgeCurrencyType.TokenAddress?r.externalAddress:r.address,new p.FPNumber(a.amount,r.externalDecimals).toCodecString(),l];S.push(...u?[a.hash,i.v,i.r,i.s,i.from]:[i.from,a.hash,i.v,i.r,i.s]),wt(e);const k=await w[v](...S),T=k.gasPrice?m.ZP.calcEvmFee(k.gasPrice.toNumber(),k.gasLimit.toNumber()):void 0;return{hash:k.hash,fee:T}},async signEvmTransactionEvmToSora(e,t){const{commit:o,rootState:s,rootGetters:n,rootDispatch:a}=Tt(e),r=h.Zc.getHistory(t);if(!r?.id)throw new Error("TX cannot be empty!");if(!r.amount)throw new Error("TX amount cannot be empty!");if(!r.assetAddress)throw new Error("TX assetAddress cannot be empty!");const i=n.assets.assetDataByAddress(r.assetAddress);if(!i?.externalAddress)throw new Error(`Asset not registered: ${r.assetAddress}`);wt(e);try{const t=n.web3.contractAbi(m.HR.Other),c=s.web3.evmAddress;if(!await m.ZP.checkAccountIsConnected(c))throw new Error("Connect account in Metamask");const d=await m.ZP.getEthersInstance(),l=n.web3.contractAddress(m.HR.Other),u=(0,T.uc)(i.externalAddress);if(!u){const s=await a.web3.getAllowanceByEvmAddress(i.externalAddress);if(p.FPNumber.lte(new p.FPNumber(s),new p.FPNumber(r.amount))){o.addTxIdInApprove(r.id);const s=new C.CH(i.externalAddress,t[m.Gg.ERC20].abi,d.getSigner()),n=[l,g.Bz];wt(e);const a=await s.approve(...n);o.removeTxIdFromApprove(r.id),await(0,h.pM)(a.hash)}}const f=s.wallet.account.address,y=await m.ZP.accountAddressToHex(f),b=new C.CH(l,t[m.Gg.Bridge].abi,d.getSigner()),w=u?void 0:await(async()=>{const e=new C.CH(i.externalAddress,m.dL.balance,d.getSigner());return+await e.decimals()})(),v=new p.FPNumber(r.amount,w).toCodecString(),S=u?"sendEthToSidechain":"sendERC20ToSidechain",k=u?[y]:[y,v,i.externalAddress],A=u?{value:v}:{};wt(e);const E=await b[S](...k,A),N=E.gasPrice?m.ZP.calcEvmFee(E.gasPrice.toNumber(),E.gasLimit.toNumber()):void 0;return{hash:E.hash,fee:N}}catch(e){throw o.removeTxIdFromApprove(r.id),yt.error(e),e}},async handleBridgeTx(e,t){const{commit:o}=Tt(e);o.addTxIdInProgress(t),await h.je.handleTransaction(t),o.removeTxIdFromProgress(t)}});var St=vt;const Ct=(0,a.b7)({namespaced:!0,state:pt,mutations:ut,getters:ht,actions:St}),kt=e=>Go(e,u.Y.Bridge,Ct),Tt=e=>Wo(e,u.Y.Bridge,Ct);var At=Ct;const Et=(0,a.e9)()({setFocusedField(e,t){e.focusedField=t},setFirstTokenAddress(e,t){e.firstTokenAddress=t||""},setSecondTokenAddress(e,t){e.secondTokenAddress=t||""},setFirstTokenValue(e,t){e.firstTokenValue=t||""},setSecondTokenValue(e,t){e.secondTokenValue=t||""},setFirstTokenBalance(e,t){e.firstTokenBalance=t??null},setSecondTokenBalance(e,t){e.secondTokenBalance=t??null},setReserve(e,t){e.reserve=t},setReserveSubscription(e,t){e.reserveSubscription=t},resetReserveSubscription(e){e.reserveSubscription?.unsubscribe(),e.reserveSubscription=null},setAvailability(e,t){e.isAvailable=t},setAvailabilitySubscription(e,t){e.availabilitySubscription=t},resetAvailabilitySubscription(e){e.availabilitySubscription?.unsubscribe(),e.availabilitySubscription=null},setTotalSupply(e,t){e.totalSupply=t},setTotalSupplySubscription(e,t){e.totalSupplySubscription=t},resetTotalSupplySubscription(e){e.totalSupplySubscription?.unsubscribe(),e.totalSupplySubscription=null}});var Nt=Et;var Pt={firstTokenAddress:"",secondTokenAddress:"",firstTokenValue:"",secondTokenValue:"",firstTokenBalance:null,secondTokenBalance:null,focusedField:null,minted:g.m8,reserve:null,reserveSubscription:null,totalSupply:g.m8,totalSupplySubscription:null,isAvailable:!1,availabilitySubscription:null};const xt=(0,a.h)()({firstToken(...e){const{state:t,rootGetters:o}=Ot(e),s=o.assets.assetDataByAddress(t.firstTokenAddress),n=t.firstTokenBalance;return n?{...s,balance:n}:s},secondToken(...e){const{state:t,rootGetters:o}=Ot(e),s=o.assets.assetDataByAddress(t.secondTokenAddress),n=t.secondTokenBalance;return n?{...s,balance:n}:s},liquidityInfo(...e){const{state:t,rootState:o}=Ot(e),{firstTokenAddress:s,secondTokenAddress:n}=t;if(s&&n)return o.pool.accountLiquidity.find((e=>e.firstAddress===s&&e.secondAddress===n))},reserveA(...e){const{state:t}=Ot(e);return t.reserve?t.reserve[0]:g.m8},reserveB(...e){const{state:t}=Ot(e);return t.reserve?t.reserve[1]:g.m8},isAvailable(...e){const{state:t}=Ot(e);return t.isAvailable&&!!t.reserve?.length},isNotFirstLiquidityProvider(...e){const{state:t,getters:o}=Ot(e);return!!t.reserve?.length&&0!=+o.reserveA&&0!=+o.reserveB},minted(...e){const{state:t,getters:o}=Ot(e);if(!o.firstToken||!o.secondToken)return g.m8;const[s]=r.hi.poolXyk.estimatePoolTokensMinted(o.firstToken,o.secondToken,t.firstTokenValue,t.secondTokenValue,o.reserveA,o.reserveB,t.totalSupply);return s},totalSupply(...e){const{state:t}=Ot(e);return t.totalSupply||g.m8},shareOfPool(...e){const{getters:t}=Ot(e),o=p.FPNumber.HUNDRED,s=p.FPNumber.fromCodecValue(t.minted),n=p.FPNumber.fromCodecValue(t.totalSupply),a=p.FPNumber.fromCodecValue(t.liquidityInfo?.balance??0);return n.isZero()&&s.isZero()?o.toLocaleString():s.add(a).div(n.add(s)).mul(o).toLocaleString()||g.m8},price(...e){const{state:t,getters:o}=Ot(e),{firstToken:s,secondToken:n}=o;return s&&n?r.hi.divideAssets(s,n,t.firstTokenValue,t.secondTokenValue,!1):g.m8},priceReversed(...e){const{state:t,getters:o}=Ot(e),{firstToken:s,secondToken:n}=o;return s&&n?r.hi.divideAssets(s,n,t.firstTokenValue,t.secondTokenValue,!0):g.m8}});var Rt=xt,Bt=o(93034);const Dt=new Ee;function Ft(e,t){const{getters:o,commit:s,rootGetters:n}=Mt(e),{firstToken:a,secondToken:r}=o,{setFirstTokenBalance:i,setSecondTokenBalance:c}=s,d=t===Bt.G.First,l=d?a:r,u=d?i:c,p=e=>u(e);Dt.remove(t),n.wallet.account.isLoggedIn&&l?.address&&!(l.address in n.wallet.account.accountAssetsAddressTable)&&Dt.add(t,{updateBalance:p,token:l})}const _t=(0,a.y2)({async setFirstTokenAddress(e,t){const{commit:o,dispatch:s}=Mt(e);o.setFirstTokenAddress(t),o.setFirstTokenValue(),o.setSecondTokenValue(),Ft(e,Bt.G.First),s.subscribeOnAvailability(),s.subscribeOnReserves(),s.subscribeOnTotalSupply()},async setSecondTokenAddress(e,t){const{commit:o,dispatch:s}=Mt(e);o.setSecondTokenAddress(t),o.setFirstTokenValue(),o.setSecondTokenValue(),Ft(e,Bt.G.Second),s.subscribeOnAvailability(),s.subscribeOnReserves(),s.subscribeOnTotalSupply()},async setFirstTokenValue(e,t){const{commit:o,dispatch:s}=Mt(e);o.setFocusedField(Bt.G.First),o.setFirstTokenValue(t),s.updateValues()},async setSecondTokenValue(e,t){const{commit:o,dispatch:s}=Mt(e);o.setFocusedField(Bt.G.Second),o.setSecondTokenValue(t),s.updateValues()},async addLiquidity(e){const{getters:t,state:o,rootState:s}=Mt(e),{firstToken:n,secondToken:a}=t,{isAvailable:i,firstTokenValue:c,secondTokenValue:d}=o;n&&a&&(i?await r.hi.poolXyk.add(n,a,c,d,s.settings.slippageTolerance):await r.hi.poolXyk.create(n,a,c,d,s.settings.slippageTolerance))},async setDataFromLiquidity(e,{firstAddress:t,secondAddress:o}){const{dispatch:s}=Mt(e),n=async e=>(await r.hi.assets.getAssetInfo(e))?.address??"";let[a,i]=await Promise.all([n(t),n(o)]);a===L.XSTUSD.address&&i===L.XOR.address&&(a=L.XOR.address,i=L.XSTUSD.address),await s.setFirstTokenAddress(a),await s.setSecondTokenAddress(i)},async updateSubscriptions(e){const{dispatch:t}=Mt(e);Ft(e,Bt.G.First),Ft(e,Bt.G.Second),t.subscribeOnAvailability(),t.subscribeOnReserves(),t.subscribeOnTotalSupply()},async resetSubscriptions(e){const{commit:t}=Mt(e);Dt.remove(Bt.G.First),Dt.remove(Bt.G.Second),t.resetAvailabilitySubscription(),t.resetReserveSubscription(),t.resetTotalSupplySubscription()},async resetData(e){const{commit:t,dispatch:o}=Mt(e);o.resetSubscriptions(),t.setFirstTokenAddress(),t.setSecondTokenAddress(),t.setFirstTokenValue(),t.setSecondTokenValue()},subscribeOnAvailability(e){const{commit:t,getters:o}=Mt(e),{firstToken:s,secondToken:n}=o;if(t.resetAvailabilitySubscription(),s&&n){const e=r.hi.poolXyk.getPoolPropertiesObservable(s.address,n.address).subscribe((e=>{t.setAvailability(!!e)}));t.setAvailabilitySubscription(e)}},subscribeOnReserves(e){const{commit:t,dispatch:o,getters:s}=Mt(e),{firstToken:n,secondToken:a}=s;if(t.resetReserveSubscription(),n&&a){const e=r.hi.poolXyk.getReservesObservable(n.address,a.address).subscribe((e=>{t.setReserve(e),o.updateValues()}));t.setReserveSubscription(e)}},subscribeOnTotalSupply(e){const{commit:t,getters:o}=Mt(e),{firstToken:s,secondToken:n}=o;if(t.resetTotalSupplySubscription(),s&&n){const e=r.hi.poolXyk.getTotalSupplyObservable(s.address,n.address).subscribe((e=>{t.setTotalSupply(e??g.m8)}));t.setTotalSupplySubscription(e)}},updateValues(e){const{state:t}=Mt(e);t.focusedField===Bt.G.Second?function(e){const{getters:t,commit:o,state:s}=Mt(e),n=s.secondTokenValue;t.isNotFirstLiquidityProvider&&(n?o.setFirstTokenValue(new p.FPNumber(n).mul(p.FPNumber.fromCodecValue(t.reserveA)).div(p.FPNumber.fromCodecValue(t.reserveB)).toString()):o.setFirstTokenValue())}(e):function(e){const{getters:t,commit:o,state:s}=Mt(e),n=s.firstTokenValue;t.isNotFirstLiquidityProvider&&(n?o.setSecondTokenValue(new p.FPNumber(n).mul(p.FPNumber.fromCodecValue(t.reserveB)).div(p.FPNumber.fromCodecValue(t.reserveA)).toString()):o.setSecondTokenValue())}(e)}});var It=_t;const Lt=(0,a.b7)({namespaced:!0,state:Pt,mutations:Nt,getters:Rt,actions:It}),Ot=e=>Go(e,u.Y.AddLiquidity,Lt),Mt=e=>Wo(e,u.Y.AddLiquidity,Lt);var Zt=Lt;const Ht=(0,a.e9)()({setAddresses(e,{firstAddress:t,secondAddress:o}){e.firstTokenAddress=t,e.secondTokenAddress=o},setRemovePart(e,t){e.removePart=t||""},setLiquidityAmount(e,t){e.liquidityAmount=t||""},setFirstTokenAmount(e,t){e.firstTokenAmount=t||""},setSecondTokenAmount(e,t){e.secondTokenAmount=t||""},setFocusedField(e,t){e.focusedField=t},resetFocusedField(e){e.focusedField=null}});var qt=Ht;var Vt={firstTokenAddress:"",secondTokenAddress:"",removePart:"",liquidityAmount:"",firstTokenAmount:"",secondTokenAmount:"",focusedField:null};const jt=(0,a.h)()({liquidity(...e){const{state:t,rootState:o}=Yt(e),{firstTokenAddress:s,secondTokenAddress:n}=t;if(s&&n)return o.pool.accountLiquidity.find((e=>e.firstAddress===s&&e.secondAddress===n))},totalSupply(...e){const{getters:t}=Yt(e);return t.liquidity?.totalSupply??g.m8},reserveA(...e){const{getters:t}=Yt(e);return t.liquidity?.reserveA??g.m8},reserveB(...e){const{getters:t}=Yt(e);return t.liquidity?.reserveB??g.m8},liquidityBalanceFull(...e){const{getters:t}=Yt(e);return t.liquidity?.balance?p.FPNumber.fromCodecValue(t.liquidity.balance):p.FPNumber.ZERO},demeterLockedBalance(...e){const{getters:t,rootGetters:o}=Yt(e);if(!t.liquidity||!o.demeterFarming)return p.FPNumber.ZERO;const s=t.liquidity.firstAddress,n=t.liquidity.secondAddress,a=t.liquidityBalanceFull,r=o.demeterFarming.getLockedAmount(s,n,!0);return p.FPNumber.min(a,r)},ceresLockedBalance(...e){const{getters:t,rootGetters:o}=Yt(e);if(!t.liquidity)return p.FPNumber.ZERO;const s=t.liquidity.firstAddress,n=t.liquidity.secondAddress,a=t.liquidityBalanceFull,r=o.pool.getLockedAmount(s,n);return p.FPNumber.min(a,r)},liquidityBalance(...e){const{getters:t}=Yt(e),o=t.liquidityBalanceFull,s=t.demeterLockedBalance,n=t.ceresLockedBalance,a=p.FPNumber.max(s,n);return o.sub(a)},firstToken(...e){const{getters:t,rootGetters:o}=Yt(e),s=t.liquidity?.firstAddress;return s?o.assets.assetDataByAddress(s):null},secondToken(...e){const{getters:t,rootGetters:o}=Yt(e),s=t.liquidity?.secondAddress;return s?o.assets.assetDataByAddress(s):null},firstTokenBalance(...e){const{getters:t}=Yt(e);if(!t.liquidity?.firstBalance)return p.FPNumber.ZERO;return p.FPNumber.fromCodecValue(t.liquidity.firstBalance,t.firstToken?.decimals).mul(t.liquidityBalance).div(t.liquidityBalanceFull)},secondTokenBalance(...e){const{getters:t}=Yt(e);if(!t.liquidity?.secondBalance)return p.FPNumber.ZERO;return p.FPNumber.fromCodecValue(t.liquidity.secondBalance,t.secondToken?.decimals).mul(t.liquidityBalance).div(t.liquidityBalanceFull)},shareOfPool(...e){const{state:t,getters:o}=Yt(e),s=o.liquidityBalanceFull,n=new p.FPNumber(t.liquidityAmount??0),a=p.FPNumber.fromCodecValue(o.totalSupply),r=a.sub(n);return s.isZero()||a.isZero()||r.isZero()?g.m8:s.sub(n).div(r).mul(p.FPNumber.HUNDRED).toLocaleString()||g.m8},price(...e){const{getters:t}=Yt(e),{firstToken:o,secondToken:s,liquidity:n}=t;return n&&o&&s?r.hi.divideAssets(o,s,n.firstBalance,n.secondBalance,!1):g.m8},priceReversed(...e){const{getters:t}=Yt(e),{firstToken:o,secondToken:s,liquidity:n}=t;return n&&o&&s?r.hi.divideAssets(o,s,n.firstBalance,n.secondBalance,!0):g.m8}});var Ut=jt,Wt=o(42140);const Gt=(0,a.y2)({async setRemovePart(e,t){const{commit:o}=$t(e);o.setFocusedField(Wt.G.Percent),o.setRemovePart(t),function(e){const{state:t,commit:o,getters:s}=$t(e),n=new p.FPNumber(t.removePart).div(p.FPNumber.HUNDRED);n.isZero()?(o.setLiquidityAmount(),o.setFirstTokenAmount(),o.setSecondTokenAmount()):(o.setLiquidityAmount(n.mul(s.liquidityBalance).toString()),o.setFirstTokenAmount(n.mul(s.firstTokenBalance).toString()),o.setSecondTokenAmount(n.mul(s.secondTokenBalance).toString()))}(e)},async setFirstTokenAmount(e,t){const{commit:o}=$t(e);o.setFocusedField(Wt.G.First),o.setFirstTokenAmount(t),function(e){const{state:t,commit:o,getters:s}=$t(e),n=t.firstTokenAmount;if(n&&Number.isFinite(+n)){const e=Number.isFinite(+n)?new p.FPNumber(n).div(s.firstTokenBalance):p.FPNumber.ZERO;o.setRemovePart(Math.round(e.mul(p.FPNumber.HUNDRED).toNumber()).toString()),o.setLiquidityAmount(e.mul(s.liquidityBalance).toString()),o.setSecondTokenAmount(e.mul(s.secondTokenBalance).toString())}else o.setRemovePart(),o.setLiquidityAmount(),o.setSecondTokenAmount()}(e)},async setSecondTokenAmount(e,t){const{commit:o}=$t(e);o.setFocusedField(Wt.G.Second),o.setSecondTokenAmount(t),function(e){const{state:t,commit:o,getters:s}=$t(e),n=t.secondTokenAmount;if(n&&Number.isFinite(+n)){const e=new p.FPNumber(n).div(s.secondTokenBalance);o.setRemovePart(Math.round(e.mul(p.FPNumber.HUNDRED).toNumber()).toString()),o.setLiquidityAmount(e.mul(s.liquidityBalance).toString()),o.setFirstTokenAmount(e.mul(s.firstTokenBalance).toString())}else o.setRemovePart(),o.setLiquidityAmount(),o.setFirstTokenAmount()}(e)},async removeLiquidity(e){const{state:t,getters:o,rootState:s}=$t(e),{firstToken:n,secondToken:a}=o;n&&a&&await r.hi.poolXyk.remove(n,a,t.liquidityAmount,o.reserveA,o.reserveB,o.totalSupply,s.settings.slippageTolerance)},async resetData(e){const{commit:t}=$t(e);t.setRemovePart(),t.setLiquidityAmount(),t.setFirstTokenAmount(),t.setSecondTokenAmount(),t.resetFocusedField()}});var Kt=Gt;const Xt=(0,a.b7)({namespaced:!0,state:Vt,mutations:qt,getters:Ut,actions:Kt}),Yt=e=>Go(e,u.Y.RemoveLiquidity,Xt),$t=e=>Wo(e,u.Y.RemoveLiquidity,Xt);var zt=Xt;var Qt={fee:"",feeFetching:!1,externalRewards:[],internalRewards:null,vestedRewards:null,crowdloanRewards:{},selectedInternal:null,selectedExternal:[],selectedVested:null,selectedCrowdloan:{},rewardsFetching:!1,rewardsClaiming:!1,receivedRewards:[],transactionError:!1,transactionStep:1,signature:"",liquidityProvisionRewardsSubscription:null,vestedRewardsSubscription:null,crowdloanRewardsSubscription:null};const Jt=(0,a.e9)()({reset(e){const t=pe()(["liquidityProvisionRewardsSubscription","vestedRewardsSubscription","crowdloanRewardsSubscription"],{fee:"",feeFetching:!1,externalRewards:[],internalRewards:null,vestedRewards:null,crowdloanRewards:{},selectedInternal:null,selectedExternal:[],selectedVested:null,selectedCrowdloan:{},rewardsFetching:!1,rewardsClaiming:!1,receivedRewards:[],transactionError:!1,transactionStep:1,signature:"",liquidityProvisionRewardsSubscription:null,vestedRewardsSubscription:null,crowdloanRewardsSubscription:null});Object.keys(t).forEach((o=>{e[o]=t[o]}))},setTxStep(e,t){e.transactionStep=t},setRewardsClaiming(e,t){e.rewardsClaiming=t},setTxError(e,t){e.transactionError=t},setRewardsReceived(e,t){e.receivedRewards=t},setSignature(e,t){e.signature=t},setRewards(e,t){Object.assign(e,t)},setSelectedRewards(e,t){Object.assign(e,t)},getFeeRequest(e){e.feeFetching=!0},getFeeSuccess(e,t){e.fee=t,e.feeFetching=!1},getFeeFailure(e){e.feeFetching=!1},setLiquidityProvisionRewardsUpdates(e,t){e.liquidityProvisionRewardsSubscription=t},resetLiquidityProvisionRewardsUpdates(e){e.liquidityProvisionRewardsSubscription?.unsubscribe(),e.liquidityProvisionRewardsSubscription=null,e.internalRewards=null},setVestedRewardsUpdates(e,t){e.vestedRewardsSubscription=t},resetVestedRewardsUpdates(e){e.vestedRewardsSubscription?.unsubscribe(),e.vestedRewardsSubscription=null,e.vestedRewards=null},setCrowdloanRewardsUpdates(e,t){e.crowdloanRewardsSubscription=t},resetCrowdloanRewardsUpdates(e){e.crowdloanRewardsSubscription?.unsubscribe(),e.crowdloanRewardsSubscription=null,e.crowdloanRewards={}}});var eo=Jt;const to=(0,a.h)()({claimableRewards(...e){const{state:t}=mo(e),o=[...t.selectedExternal,...Object.values(t.selectedCrowdloan).flat(1)];return t.selectedInternal&&o.push(t.selectedInternal),t.selectedVested&&o.push(t.selectedVested),o},rewardsAvailable(...e){const{getters:t}=mo(e);return 0!==t.claimableRewards.length},internalRewardsAvailable(...e){const{state:t}=mo(e);return!(0,T.yA)(t.internalRewards?.amount)},vestedRewardsAvailable(...e){const{state:t}=mo(e);return!(0,T.yA)(t.vestedRewards?.limit)},externalRewardsAvailable(...e){const{state:t}=mo(e);return 0!==t.externalRewards.length},crowdloanRewardsAvailable(...e){const{state:t}=mo(e);return Object.entries(t.crowdloanRewards).reduce(((e,[t,o])=>(o.some((e=>!(0,T.yA)(e.amount)))&&e.push(t),e)),[])},externalRewardsSelected(...e){const{state:t}=mo(e);return 0!==t.selectedExternal.length},rewardsByAssetsList(...e){const{getters:t}=mo(e);return t.rewardsAvailable?(0,r.fG)([...t.claimableRewards]):[{asset:L.KnownAssets.get(L.KnownSymbols.PSWAP),symbol:L.KnownSymbols.PSWAP,amount:""}]}});var oo=to,so=o(38197),no=o(93286),ao=o(25108);async function ro(e){const{commit:t,dispatch:o,getters:s}=ho(e),n=await r.hi.rewards.getCrowdloanRewardsSubscription();let a;return await new Promise((e=>{a=n.subscribe((n=>{if(t.setRewards({crowdloanRewards:n}),!Qt.crowdloanRewardsSubscription&&s.crowdloanRewardsAvailable.length){const e=s.crowdloanRewardsAvailable.reduce(((e,t)=>(e[t]=Qt.crowdloanRewards[t],e)),{});o.setSelectedRewards({selectedCrowdloan:e})}if(Object.keys(Qt.selectedCrowdloan)){const e=Object.entries(Qt.selectedCrowdloan).reduce(((e,[t,o])=>(s.crowdloanRewardsAvailable.includes(t)&&(e[t]=o),e)),{});o.setSelectedRewards({selectedCrowdloan:e})}e()}))})),a}async function io(e){const{commit:t,dispatch:o,getters:s}=ho(e);let n;return await new Promise((e=>{n=r.hi.rewards.getVestedRewardsSubscription().subscribe((n=>{t.setRewards({vestedRewards:n}),!Qt.vestedRewardsSubscription&&s.vestedRewardsAvailable&&o.setSelectedRewards({selectedVested:n}),Qt.selectedVested&&!s.vestedRewardsAvailable&&o.setSelectedRewards({selectedVested:null}),e()}))})),n}async function co(e){const{commit:t,dispatch:o,getters:s}=ho(e);let n;return await new Promise((e=>{n=r.hi.rewards.getLiquidityProvisionRewardsSubscription().subscribe((n=>{t.setRewards({internalRewards:n}),!Qt.liquidityProvisionRewardsSubscription&&s.internalRewardsAvailable&&o.setSelectedRewards({selectedInternal:n}),Qt.selectedInternal&&!s.internalRewardsAvailable&&o.setSelectedRewards({selectedInternal:null}),e()}))})),n}const lo=(0,a.y2)({async subscribeOnRewards(e){const{commit:t,dispatch:o,rootGetters:s}=ho(e);o.unsubscribeFromRewards(),s.wallet.account.isLoggedIn&&await(0,T.BV)((async()=>{const[o,s,n]=await Promise.all([co(e),io(e),ro(e)]);t.setLiquidityProvisionRewardsUpdates(o),t.setVestedRewardsUpdates(s),t.setCrowdloanRewardsUpdates(n)}))},unsubscribeFromRewards(e){const{commit:t}=ho(e);t.resetLiquidityProvisionRewardsUpdates(),t.resetVestedRewardsUpdates(),t.resetCrowdloanRewardsUpdates()},async getNetworkFee(e){const{commit:t,getters:o}=ho(e);t.getFeeRequest();try{const e=o.claimableRewards,s=await r.hi.rewards.getNetworkFee(e);t.getFeeSuccess(s)}catch(e){ao.error(e),t.getFeeFailure()}},async setSelectedRewards(e,t){const{commit:o,dispatch:s}=ho(e);o.setSelectedRewards(t),await s.getNetworkFee()},async getExternalRewards(e,t){const{commit:o,dispatch:s}=ho(e);try{const e=t?await r.hi.rewards.checkForExternalAccount(t):[];o.setRewards({externalRewards:e}),await s.setSelectedRewards({selectedExternal:e})}catch(e){ao.error(e),o.setRewards({externalRewards:[]})}},async claimRewards(e,{internalAddress:t="",externalAddress:o=""}={}){const{commit:s,getters:n,state:a,rootState:i}=ho(e);if(t)try{const{externalRewardsSelected:e,claimableRewards:c,rewardsByAssetsList:d}=n,l=[...d];if(e&&!o)return;if(s.setRewardsClaiming(!0),s.setTxError(!1),e&&1===a.transactionStep){const e=await m.ZP.getEthersInstance(),o=await m.ZP.accountAddressToHex(t),n=so.w(o),a=no.lE(n),r=await e.getSigner().signMessage(a);s.setSignature(r),s.setTxStep(2)}(!e||2===a.transactionStep&&a.signature)&&(await r.hi.rewards.claim(c,a.signature,a.fee,o),i.web3.evmAddress===o&&(s.setTxStep(1),s.setRewardsReceived(l),s.setRewardsClaiming(!1)))}catch(e){throw s.setTxError(!0),s.setRewardsClaiming(!1),e}}});var uo=lo;const po=(0,a.b7)({namespaced:!0,state:Qt,mutations:eo,getters:oo,actions:uo}),mo=e=>Go(e,u.Y.Rewards,po),ho=e=>Wo(e,u.Y.Rewards,po);var go=po;const fo=(0,a.e9)()({setPools(e,t){e.pools=Object.freeze([...t])},setPoolsUpdates(e,t){e.poolsUpdates=t},resetPoolsUpdates(e){e.poolsUpdates?.unsubscribe(),e.poolsUpdates=null},setTokens(e,t){e.tokens=Object.freeze([...t])},setTokensUpdates(e,t){e.tokensUpdates=t},resetTokensUpdates(e){e.tokensUpdates?.unsubscribe(),e.tokensUpdates=null},setAccountPools(e,t){e.accountPools=Object.freeze([...t])},setAccountPoolsUpdates(e,t){e.accountPoolsUpdates=t},resetAccountPoolsUpdates(e){e.accountPoolsUpdates?.unsubscribe(),e.accountPoolsUpdates=null}});var yo=fo;var bo={pools:[],poolsUpdates:null,tokens:[],tokensUpdates:null,accountPools:[],accountPoolsUpdates:null};const wo=(0,a.y2)({async subscribeOnPools(e){const{commit:t}=Ao(e);t.resetPoolsUpdates();const o=await r.hi.demeterFarming.getPoolsObservable();if(!o)return;let s;await new Promise((e=>{s=o.subscribe((o=>{t.setPools(o),e()}))})),t.setPoolsUpdates(s)},async subscribeOnTokens(e){const{commit:t}=Ao(e);t.resetTokensUpdates();const o=await r.hi.demeterFarming.getTokenInfosObservable();if(!o)return;let s;await new Promise((e=>{s=o.subscribe((o=>{t.setTokens(o),e()}))})),t.setTokensUpdates(s)},async subscribeOnAccountPools(e){const{commit:t,rootGetters:o}=Ao(e);if(t.resetAccountPoolsUpdates(),!o.wallet.account.isLoggedIn)return;await(0,T.BV)();const s=r.hi.demeterFarming.getAccountPoolsObservable();let n;await new Promise((e=>{n=s.subscribe((o=>{t.setAccountPools(o),e()}))})),t.setAccountPoolsUpdates(n)},unsubscribeUpdates(e){const{commit:t}=Ao(e);t.resetPoolsUpdates(),t.resetTokensUpdates(),t.resetAccountPoolsUpdates(),t.setPools([]),t.setTokens([]),t.setAccountPools([])},async deposit(e,t){const{rootGetters:o}=Ao(e),{assetsDataTable:s}=o.assets,{baseAsset:n,poolAsset:a,rewardAsset:i,isFarm:c}=t.pool,d=s[n],l=s[a],u=s[i],p=t.value.toString();c?await r.hi.demeterFarming.depositLiquidity(p,l,u,d):await r.hi.demeterFarming.stake(l,u,p)},async withdraw(e,t){const{rootGetters:o}=Ao(e),{assetsDataTable:s}=o.assets,{baseAsset:n,poolAsset:a,rewardAsset:i,isFarm:c}=t.pool,d=s[n],l=s[a],u=s[i],p=t.value.toString();c?await r.hi.demeterFarming.withdrawLiquidity(p,l,u,d):await r.hi.demeterFarming.unstake(l,u,p)},async claimRewards(e,t){const{rootGetters:o}=Ao(e),{assetsDataTable:s}=o.assets,{baseAsset:n,poolAsset:a,rewardAsset:i,isFarm:c,rewards:d}=t,l=s[n],u=s[a],p=s[i],m=d.toString();await r.hi.demeterFarming.getRewards(c,u,p,l,m)}});var vo=wo;const So=(0,a.h)()({getLockedAmount(...e){const{state:t}=To(e);return(e,o,s=!0)=>t.accountPools.reduce(((t,n)=>n.baseAsset===e&&n.poolAsset===o&&n.isFarm===s?Ke.FPNumber.max(t,n.pooledTokens):t),Ke.FPNumber.ZERO)}});var Co=So;const ko=(0,a.b7)({namespaced:!0,state:bo,mutations:yo,actions:vo,getters:Co}),To=e=>Go(e,u.Y.DemeterFarming,ko),Ao=e=>Wo(e,u.Y.DemeterFarming,ko);var Eo=ko;const No=(0,a.e9)()({setXorPriceToDeposit(e,t){e.xorToDeposit=t},setEuroBalance(e,t){e.euroBalance=t},setEuroBalanceLoaded(e,t){e.wasEuroBalanceLoaded=t},setTotalXorBalance(e,t){e.totalXorBalance=t},setTotalXorBalanceUpdates(e,t){e.totalXorBalanceUpdates=t},resetTotalXorBalanceUpdates(e){e.totalXorBalanceUpdates?.unsubscribe(),e.totalXorBalanceUpdates=null},setKycStatus(e,t){e.kycStatus=t},setVerificationStatus(e,t){e.verificationStatus=t},setPayWingsAuthSdk(e,t){e.authLogin=t},setHasKycAttempts(e,t){e.hasFreeAttempts=t},setWillToPassKycAgain(e,t){e.wantsToPassKycAgain=t},setRejectReason(e,t){e.rejectReason=t}});var Po=No;var xo={kycStatus:void 0,verificationStatus:void 0,euroBalance:g.m8,wasEuroBalanceLoaded:!1,totalXorBalance:p.FPNumber.ZERO,xorToDeposit:p.FPNumber.ZERO,totalXorBalanceUpdates:null,authLogin:null,hasFreeAttempts:null,wantsToPassKycAgain:!1,rejectReason:null},Ro=o(21251);const Bo=(0,a.h)()({accountAddress(...e){const{rootState:t}=Mo(e);return t.wallet.account.address},isEuroBalanceEnough(...e){const{state:t}=Mo(e);return parseInt(t.euroBalance,10)>=95},currentStatus(...e){const{state:t}=Mo(e),{kycStatus:o,verificationStatus:s}=t;return[o,s].includes(Ro.$.Rejected)?Ro.$.Rejected:o&&s?o===Ro.a.Started?null:[Ro.a.Completed,Ro.a.Successful].includes(o)&&s===Ro.$.Pending?Ro.$.Pending:[Ro.a.Completed,Ro.a.Successful].includes(o)&&s===Ro.$.Accepted?Ro.$.Accepted:void 0:null}});var Do=Bo,Fo=o(43479),_o=o(18139);const Io=(0,a.y2)({calculateXorRestPrice(e,t){const{state:o,commit:s}=Zo(e),{totalXorBalance:n}=o,a=p.FPNumber.HUNDRED.add(p.FPNumber.ONE).sub(n.mul(t)).div(t);s.setXorPriceToDeposit(a.dp(3))},async calculateXorBalanceInEuros(e,{xorPerEuro:t,xorTotalBalance:o}){const{commit:s,dispatch:n}=Zo(e);try{const e=p.FPNumber.fromNatural(t),a=o.mul(e).toNumber();s.setEuroBalance(a.toString()),a<100&&n.calculateXorRestPrice(e)}catch{}},async subscribeToTotalXorBalance(e){const{commit:t,rootGetters:o,dispatch:s}=Zo(e);if(t.resetTotalXorBalanceUpdates(),!o.wallet.account.isLoggedIn)return;const n=await(0,Fo.id)();await(0,T.BV)((async()=>{await new Promise((e=>{const o=r.hi.assets.getTotalXorBalanceObservable().subscribe((async o=>{t.setTotalXorBalance(o),await s.calculateXorBalanceInEuros({xorPerEuro:n,xorTotalBalance:o}),e()}));t.setTotalXorBalanceUpdates(o)})),t.setEuroBalanceLoaded(!0)}))},async unsubscribeFromTotalXorBalance(e){const{commit:t}=Zo(e);t.resetTotalXorBalanceUpdates()},async getUserStatus(e){const{commit:t}=Zo(e),{kycStatus:o,verificationStatus:s,rejectReason:n}=await(0,Fo.C8)();t.setKycStatus(o),t.setVerificationStatus(s),n&&t.setRejectReason(n)},async initPayWingsAuthSdk(e){const{commit:t,rootState:o}=Zo(e),s=o.wallet.settings.soraNetwork||r.it.SoraNetwork.Test,{authService:n}=(0,Fo.It)(s);await(0,_o.td)(n.sdkURL).catch((()=>{})),await(0,_o.ve)(n.sdkURL).then((()=>{const e=Paywings.WebSDK.create({Domain:"soracard.com",UnifiedLoginApiKey:n.apiKey,env:n.env,AccessTokenTypeID:1,UserTypeID:2,ClientDescription:"Auth"});t.setPayWingsAuthSdk(e)}))},async getUserKycAttempt(e){const{commit:t}=Zo(e),o=await(0,Fo.MJ)();t.setHasKycAttempts(o)}});var Lo=Io;const Oo=(0,a.b7)({namespaced:!0,state:xo,getters:Do,mutations:Po,actions:Lo}),Mo=e=>Go(e,u.Y.SoraCard,Oo),Zo=e=>Wo(e,u.Y.SoraCard,Oo);var Ho=Oo;s.default.use(n.ZP);const qo={wallet:r.cZ.walletModules.wallet,router:l,web3:D,assets:W,settings:le,swap:_e,referrals:Ve,pool:Je,moonpay:dt,bridge:At,addLiquidity:Zt,removeLiquidity:zt,rewards:go,demeterFarming:Eo,soraCard:Ho},{store:Vo,rootGetterContext:jo,rootActionContext:Uo}=(0,a.yZ)({modules:qo,strict:!1}),Wo=(e,t,o)=>{const{rootCommit:s,rootDispatch:n,rootGetters:a,rootState:r}=Uo(e);return{state:r[t],getters:a[t],commit:s[t],dispatch:n[t],rootState:r,rootGetters:a,rootCommit:s,rootDispatch:n}},Go=(e,t,o)=>{const[,,s,n]=e,{rootGetters:a,rootState:r}=jo([s,n]);return{state:r[t],getters:a[t],rootState:r,rootGetters:a}};var Ko=Vo},42140:function(e,t,o){"use strict";var s;o.d(t,{G:function(){return s}}),function(e){e.First="firstTokenAmount",e.Second="secondTokenAmount",e.Percent="removePart"}(s||(s={}))},21251:function(e,t,o){"use strict";var s,n;o.d(t,{a:function(){return s},$:function(){return n}}),function(e){e.Started="Started",e.Completed="Completed",e.Failed="Failed",e.Rejected="Rejected",e.Successful="Successful"}(s||(s={})),function(e){e.Pending="Pending",e.Accepted="Accepted",e.Rejected="Rejected",e.None="None"}(n||(n={}))},28335:function(e,t,o){"use strict";o.d(t,{He:function(){return x},PO:function(){return u},je:function(){return F},Zc:function(){return l},mW:function(){return b},gR:function(){return h},rz:function(){return g},z2:function(){return w},pM:function(){return S}});var s=o(77057),n=o(52612),a=o.n(n),r=o(36930),i=o(80711),c=o(80472),d=o(8755);const l=d.hi.bridge;var u;!function(e){e.INITIAL="INITIAL",e.SORA_SUBMITTED="SORA_SUBMITTED",e.SORA_PENDING="SORA_PENDING",e.SORA_REJECTED="SORA_REJECTED",e.SORA_COMMITED="SORA_COMMITED",e.EVM_SUBMITTED="EVM_SUBMITTED",e.EVM_PENDING="EVM_PENDING",e.EVM_REJECTED="EVM_REJECTED",e.EVM_COMMITED="EVM_COMMITED"}(u||(u={}));var p=o(85530),m=o(63471);const h=e=>e.type===r.Operation.EthBridgeOutgoing?!e.blockId&&!e.txId:e.type!==r.Operation.EthBridgeIncoming||!e.ethereumHash,g=e=>e.type===r.Operation.EthBridgeOutgoing?!e.ethereumHash:e.type!==r.Operation.EthBridgeIncoming,f=e=>{const t=l.getHistory(e);if(!t)throw new Error(`[Bridge]: Transaction is not exists: ${e}`);return t},y=async(e,t={})=>{const o=f(e);l.saveHistory({...o,...t})},b=e=>e?.type===r.Operation.EthBridgeOutgoing,w=async e=>{if(!e.hash)throw new Error("[Bridge]: Tx hash cannot be empty");if(!Number.isFinite(e.externalNetwork))throw new Error(`[Bridge]: Tx externalNetwork should be a number, ${e.externalNetwork} received`);let t;return await new Promise(((o,s)=>{t=l.subscribeOnRequestStatus(e.hash).subscribe((e=>{switch(e){case r.BridgeTxStatus.Failed:case r.BridgeTxStatus.Frozen:s(new Error("[Bridge]: Transaction was failed or canceled"));break;case r.BridgeTxStatus.Ready:o()}}))})),t.unsubscribe(),l.getApprovedRequest(e.hash)},v=async e=>{const t=f(e);if(t.hash)return t.hash;const o=t.blockId,s=await d.hi.system.getExtrinsicsFromBlock(o);if(s.length){const e=await d.hi.system.getBlockEvents(o),n=s.findIndex((e=>{const{signer:o,method:{method:s,section:n}}=e;return o.toString()===t.from&&"transferToSidechain"===s&&"ethBridge"===n}));if(!Number.isFinite(n))throw new Error("[Bridge]: Transaction was failed");const a=e.find((({phase:e,event:t})=>e.isApplyExtrinsic&&e.asApplyExtrinsic.eq(n)&&"ethBridge"===t.section&&"RequestRegistered"===t.method));if(!a)throw new Error("[Bridge]: Transaction was failed");return a.event.data[0].toString()}return await(0,p.gw)(6e3),await v(e)},S=async(e,t)=>{if(!e)throw new Error("[Bridge]: evm hash cannot be empty!");await(async(e,t,o)=>{const s=await m.ZP.getEthersInstance();try{const t=1,o=0,n=await s.getBlockNumber()-20,{data:a,from:r,nonce:i,to:c,value:d}=await s.getTransaction(e);await s._waitForTransaction(e,t,o,{data:a,from:r,nonce:i,to:c??"",value:d,startBlock:n})}catch(e){e.code===i.jK.TRANSACTION_REPLACED&&("repriced"===e.reason||"replaced"===e.reason?t(e.replacement.hash):"canceled"===e.reason&&o(e.replacement.hash))}})(e,(async e=>{t?.(e),await S(e,t)}),(e=>{throw new Error(`[Bridge]: The transaction was canceled by the user [${e}]`)}))},C=async e=>{try{const{from:t,effectiveGasPrice:o,gasUsed:s,blockNumber:n}=await m.ZP.getEvmTransactionReceipt(e);return{ethereumNetworkFee:m.ZP.calcEvmFee(o.toNumber(),s.toNumber()),blockHeight:n,from:t}}catch(e){return null}};var k=o(23902),T=o.n(k),A=o(52151),E=o.n(A),N=o(52490),P=o(16546);class x{constructor(e){(0,s.Z)(this,"externalNetwork",r.BridgeNetworks.ETH_NETWORK_ID),(0,s.Z)(this,"ethAccountTransactionsMap",{}),(0,s.Z)(this,"ethBlockLogsMap",{}),(0,s.Z)(this,"ethStartBlock",{}),(0,s.Z)(this,"etherscanApiKey",void 0),(0,s.Z)(this,"etherscanInstance",void 0),(0,s.Z)(this,"outgoingTopic","0x0ce781a18c10c8289803c7c4cfd532d797113c4b41c9701ffad7d0a632ac555b"),this.etherscanApiKey=e}get historySyncTimestamp(){return+(l.accountStorage.get("bridgeHistorySyncTimestamp")||0)}set historySyncTimestamp(e){l.accountStorage.set("bridgeHistorySyncTimestamp",e)}async init(){const e=await m.ZP.getEthersInstance(),t=await e.getNetwork();this.etherscanInstance=new N.A(t,this.etherscanApiKey)}async getEthStartBlock(e){const t=Math.round(e/1e3);return this.ethStartBlock[t]||(this.ethStartBlock[t]=+await this.etherscanInstance.fetch("block",{action:"getblocknobytime",closest:"before",timestamp:t})),this.ethStartBlock[t]}async getEthAccountTransactions(e,t,o){const s=e.toLowerCase(),n=(o||[]).map((e=>e.toLowerCase()));if(!this.ethAccountTransactionsMap[s]){const a=await this.getEthStartBlock(t),r=(await this.etherscanInstance.getHistory(e,a)).reduce(((e,t)=>((!o||t.to&&n.includes(t.to.toLowerCase()))&&(e[t.hash]=t),e)),{});this.ethAccountTransactionsMap[s]=r}return this.ethAccountTransactionsMap[s]}async getBlockLogsMap(e,t){return this.ethBlockLogsMap[e]||(this.ethBlockLogsMap[e]=this.getLogsMap([t],this.outgoingTopic,e)),await this.ethBlockLogsMap[e]}async getLogsMap(e,t,o){const s=await m.ZP.getEthersInstance();return T()(await Promise.all(e.map((e=>{return n=e,s.getLogs({topics:[t],blockHash:o,address:n});var n})))).reduce(((e,{data:t})=>(e[t]=!0,e)),{})}async getFromTimestamp(e){const t=E()(e);if(t.module===d.OY.ModuleNames.BridgeMultisig){const e=await d.hi.system.getBlockHash(1);return await d.hi.system.getBlockTimestamp(e)}return 1e3*t.timestamp}async findEthTxBySoraHash(e,t,o,s){if(!e||!t)return null;const n=await this.getEthAccountTransactions(e,o,s);try{return await Promise.any(Object.values(n).map((async e=>{const o=await this.getBlockLogsMap(e.blockHash,e.to);if(t in o)return e;throw new Error})))}catch(e){return null}}async findEthTxByEthereumHash(e){for(const t in this.ethAccountTransactionsMap)if(e in this.ethAccountTransactionsMap[t])return this.ethAccountTransactionsMap[t][e];return await m.ZP.getEvmTransaction(e)}async fetchHistoryElements(e,t=0,o){const s=[r.Operation.EthBridgeOutgoing,r.Operation.EthBridgeIncoming],n=(0,d.ir)({address:e,operations:s,timestamp:t,ids:o}),a=[];let i=!0,c="";do{const e={after:c,filter:n,first:100},t=await d.m5.account.getHistory(e);if(!t)return a;i=!!t.pageInfo?.hasNextPage,c=t.pageInfo?.endCursor??"",a.push(...t.nodes)}while(i);return a}async clearHistory(e){this.historySyncTimestamp=0,l.clearHistory(),await(e?.())}async updateAccountHistory(e,t,o,s,n){const i=l.historyList,c=await this.fetchHistoryElements(e,this.historySyncTimestamp);if(!c.length)return;const{externalNetwork:p}=this,h=await this.getFromTimestamp(c),g=a()(c)?.timestamp;for(const a of c){const c=a.module===d.OY.ModuleNames.BridgeMultisig?r.Operation.EthBridgeIncoming:r.Operation.EthBridgeOutgoing,g=b({type:c}),f=a.data,y=f.requestHash,w=i.find((e=>e.txId===a.id||(g?e.hash===y:e.ethereumHash===y)));if(w?.status===r.BridgeTxStatus.Done)continue;const v=g?y:await l.getSoraHashByEthereumHash(y),S=f.amount,k=f.assetId,T=e,A=t[k]?.symbol,E=a.blockHash,N=a.id,x=g?o[r.Operation.EthBridgeOutgoing]:P.m8,R=1e3*a.timestamp,B=!g||(!!v&&await l.getRequestStatus(v))===r.BridgeTxStatus.Ready,D=B?2:1,F=g?B?await this.findEthTxBySoraHash(f.sidechainAddress,v,h,s):null:await this.findEthTxByEthereumHash(y),_=F?.hash??"",I=_?await C(_):null,L=g?f.sidechainAddress:I?.from,O=I?.ethereumNetworkFee,M=F?String(F.blockNumber):void 0,Z=F?.timestamp?1e3*F.timestamp:F?.blockNumber?1e3*(await m.ZP.getBlock(F.blockNumber)).timestamp:Date.now(),[H,q]=g?[R,Z]:[Z,R],V=g?_?u.EVM_COMMITED:B?u.EVM_REJECTED:v?u.SORA_PENDING:u.SORA_REJECTED:u.SORA_COMMITED,j={txId:N,type:c,blockId:E,blockHeight:M,from:T,amount:S,symbol:A,assetAddress:k,startTime:H,endTime:q,status:g?_?r.BridgeTxStatus.Done:B?r.BridgeTxStatus.Failed:v?r.BridgeTxStatus.Pending:r.BridgeTxStatus.Failed:r.BridgeTxStatus.Done,transactionStep:D,hash:v,ethereumHash:_,soraNetworkFee:x,ethereumNetworkFee:O,transactionState:V,externalNetwork:p,to:L};w?l.saveHistory({...w,...j}):l.generateHistoryItem(j),await(n?.())}this.historySyncTimestamp=g}}var R=o(25108);class B{constructor({signEvm:e,updateHistory:t,showNotification:o,getAssetByAddress:n,getActiveHistoryItem:a,getBridgeHistoryInstance:r}){(0,s.Z)(this,"signEvm",void 0),(0,s.Z)(this,"updateHistory",void 0),(0,s.Z)(this,"showNotification",void 0),(0,s.Z)(this,"getAssetByAddress",void 0),(0,s.Z)(this,"getActiveHistoryItem",void 0),(0,s.Z)(this,"getBridgeHistoryInstance",void 0),this.signEvm=e,this.updateHistory=t,this.showNotification=o,this.getAssetByAddress=n,this.getActiveHistoryItem=a,this.getBridgeHistoryInstance=r}async handleState(e,{status:t,nextState:o,rejectState:s,handler:n}){try{const s=f(e);if(s.status===r.BridgeTxStatus.Done)return;t&&s.status!==t&&this.updateTransactionParams(e,{status:t}),"function"==typeof n&&await n(e),this.updateTransactionParams(e,{transactionState:o})}catch(t){R.error(t);const o=f(e),n=o.status===r.BridgeTxStatus.Failed;this.updateTransactionParams(e,{status:r.BridgeTxStatus.Failed,transactionState:s,endTime:n?o.endTime:Date.now()})}}updateTransactionParams(e,t={}){y(e,t),this.updateHistory()}onComplete(e){this.updateTransactionParams(e,{endTime:Date.now()});const t=f(e),{type:o,assetAddress:s}=t;if(o===r.Operation.EthBridgeIncoming&&s){c.ZP.getters.wallet.account.accountAssetsAddressTable[s]||c.ZP.dispatch.wallet.account.addAsset(s)}this.showNotification(t)}updateTransactionStep(e){this.updateTransactionParams(e,{transactionStep:2})}async beforeSubmit(e){const t=this.getActiveHistoryItem();if(!t||t.id!==e)throw new Error(`[Bridge]: Transaction ${e} stopped, user should sign transaction in ui`)}async onEvmPending(e){await(async e=>{const t=f(e);await S(t.ethereumHash,(t=>y(e,{ethereumHash:t})))})(e);const t=f(e),{ethereumNetworkFee:o,blockHeight:s}=await C(t.ethereumHash)||{};if(!o||!s)throw this.updateTransactionParams(e,{ethereumHash:void 0,ethereumNetworkFee:void 0}),new Error(`[Bridge]: Ethereum transaction not found, hash: ${t.ethereumHash}. 'ethereumHash' is reset`);this.updateTransactionParams(e,{ethereumNetworkFee:o,blockHeight:s})}async onEvmSubmitted(e){this.updateTransactionParams(e,{transactionState:u.EVM_PENDING});const t=f(e);if(!t.ethereumHash){await this.beforeSubmit(e);try{const{hash:o,fee:s}=await this.signEvm(e);this.updateTransactionParams(e,{ethereumHash:o,ethereumNetworkFee:s??t.ethereumNetworkFee})}catch(o){if(o.code===i.jK.UNPREDICTABLE_GAS_LIMIT){const{to:o,hash:s,startTime:n}=t,a=await this.getBridgeHistoryInstance(),r=await a.findEthTxBySoraHash(o,s,n);if(r)return void this.updateTransactionParams(e,{ethereumHash:r.hash})}throw o}}}}class D{constructor({sign:e,...t}){(0,s.Z)(this,"reducers",void 0),this.reducers=Object.entries(D.OPERATION_REDUCERS).reduce(((o,[s,n])=>{if(!(s in o)){const a=new n({...t,signEvm:e[s]});o[s]=a}return o}),{})}async handleTransaction(e){const t=f(e),{type:o}=t;if(!(o in this.reducers))throw new Error(`[Bridge]: Unsupported operation '${o}'`);const s=this.reducers[o];await this.process(t,s)}async process(e,t){await t.changeState(e);const o=f(e.id);[r.BridgeTxStatus.Done,r.BridgeTxStatus.Failed].includes(o.status)||await this.process(o,t)}}(0,s.Z)(D,"OPERATION_REDUCERS",{[r.Operation.EthBridgeOutgoing]:class extends B{async changeState(e){if(!e.id)throw new Error("[Bridge]: TX ID cannot be empty");switch(e.transactionState){case u.INITIAL:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.SORA_SUBMITTED,rejectState:u.SORA_REJECTED});case u.SORA_SUBMITTED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.SORA_PENDING,rejectState:u.SORA_REJECTED,handler:async e=>{await this.beforeSubmit(e),this.updateTransactionParams(e,{transactionState:u.SORA_PENDING});const{txId:t,blockId:o,to:s,amount:n,assetAddress:r}=f(e);if(!n)throw new Error('[Bridge]: TX "amount" cannot be empty');if(!r)throw new Error('[Bridge]: TX "assetAddress" cannot be empty');if(!s)throw new Error('[Bridge]: TX "to" cannot be empty');const i=this.getAssetByAddress(r);if(!i||!i.externalAddress)throw new Error(`[Bridge]: TX asset is not registered: ${r}`);if(t||await l.transferToEth(i,s,n,e),t&&!o){const o=l.formatAddress(l.account.pair.address),s=await this.getBridgeHistoryInstance(),n=a()(await s.fetchHistoryElements(o,0,[t]));if(!n)throw new Error(`[Bridge]: Can not restore TX from Subquery: ${t}`);this.updateTransactionParams(e,{blockId:n.blockHash,hash:n.data.requestHash})}}});case u.SORA_PENDING:return await this.handleState(e.id,{nextState:u.SORA_COMMITED,rejectState:u.SORA_REJECTED,handler:async e=>{const t=await v(e);this.updateTransactionParams(e,{hash:t});const o=f(e),{to:s}=await w(o);this.updateTransactionParams(e,{to:s})}});case u.SORA_COMMITED:return await this.handleState(e.id,{nextState:u.EVM_SUBMITTED,rejectState:u.SORA_REJECTED,handler:async e=>this.updateTransactionStep(e)});case u.SORA_REJECTED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.SORA_SUBMITTED,rejectState:u.SORA_REJECTED});case u.EVM_SUBMITTED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.EVM_PENDING,rejectState:u.EVM_REJECTED,handler:async e=>await this.onEvmSubmitted(e)});case u.EVM_PENDING:return await this.handleState(e.id,{nextState:u.EVM_COMMITED,rejectState:u.EVM_REJECTED,handler:async e=>await this.onEvmPending(e)});case u.EVM_COMMITED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Done,nextState:u.EVM_COMMITED,rejectState:u.EVM_REJECTED,handler:async e=>this.onComplete(e)});case u.EVM_REJECTED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.EVM_SUBMITTED,rejectState:u.EVM_REJECTED})}}},[r.Operation.EthBridgeIncoming]:class extends B{async changeState(e){if(!e.id)throw new Error("[Bridge]: TX ID cannot be empty");switch(e.transactionState){case u.INITIAL:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.EVM_SUBMITTED,rejectState:u.EVM_REJECTED});case u.EVM_SUBMITTED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.EVM_PENDING,rejectState:u.EVM_REJECTED,handler:async e=>await this.onEvmSubmitted(e)});case u.EVM_PENDING:return await this.handleState(e.id,{nextState:u.EVM_COMMITED,rejectState:u.EVM_REJECTED,handler:async e=>await this.onEvmPending(e)});case u.EVM_COMMITED:return await this.handleState(e.id,{nextState:u.SORA_SUBMITTED,rejectState:u.EVM_REJECTED,handler:async e=>this.updateTransactionStep(e)});case u.EVM_REJECTED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.EVM_SUBMITTED,rejectState:u.EVM_REJECTED});case u.SORA_SUBMITTED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.SORA_PENDING,rejectState:u.SORA_REJECTED});case u.SORA_PENDING:return await this.handleState(e.id,{nextState:u.SORA_COMMITED,rejectState:u.SORA_REJECTED,handler:async e=>{const t=f(e),{hash:o,blockId:s}=await(async e=>{if(!e.ethereumHash)throw new Error("[Bridge]: ethereumHash cannot be empty!");if(!Number.isFinite(e.externalNetwork))throw new Error(`[Bridge]: Tx externalNetwork should be a number, ${e.externalNetwork} received`);let t;return await new Promise(((o,s)=>{t=l.subscribeOnRequest(e.ethereumHash).subscribe((e=>{if(e)switch(e.status){case r.BridgeTxStatus.Failed:case r.BridgeTxStatus.Frozen:s(new Error("[Bridge]: Transaction was failed or canceled"));break;case r.BridgeTxStatus.Done:o()}}))})),t.unsubscribe(),{hash:await l.getSoraHashByEthereumHash(e.ethereumHash),blockId:await l.getSoraBlockHashByRequestHash(e.ethereumHash)}})(t);this.updateTransactionParams(e,{hash:o,blockId:s})}});case u.SORA_COMMITED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Done,nextState:u.SORA_COMMITED,rejectState:u.SORA_REJECTED,handler:async e=>this.onComplete(e)});case u.SORA_REJECTED:return await this.handleState(e.id,{status:r.BridgeTxStatus.Pending,nextState:u.SORA_SUBMITTED,rejectState:u.SORA_REJECTED})}}}});const F=new D({sign:{[r.Operation.EthBridgeIncoming]:e=>c.ZP.dispatch.bridge.signEvmTransactionEvmToSora(e),[r.Operation.EthBridgeOutgoing]:e=>c.ZP.dispatch.bridge.signEvmTransactionSoraToEvm(e)},updateHistory:()=>c.ZP.commit.bridge.setHistory(),showNotification:e=>c.ZP.commit.bridge.setNotificationData(e),getAssetByAddress:e=>c.ZP.getters.assets.assetDataByAddress(e),getActiveHistoryItem:()=>c.ZP.getters.bridge.historyItem,getBridgeHistoryInstance:()=>c.ZP.dispatch.bridge.getBridgeHistoryInstance()})},43479:function(e,t,o){"use strict";o.d(t,{C8:function(){return l},id:function(){return m},MJ:function(){return h},G5:function(){return g},ZR:function(){return f},It:function(){return b}});var s=o(96245),n=o(8755),a=o(80472),r=o(21251),i=o(48764).Buffer,c=o(25108);const d=e=>e===n.it.SoraNetwork.Prod?{referenceNumberEndpoint:"",lastKycStatusEndpoint:"",kycAttemptCountEndpoint:"",newAccessTokenEndpoint:""}:{referenceNumberEndpoint:"https://backend.dev.sora-card.tachi.soramitsu.co.jp/get-reference-number",lastKycStatusEndpoint:"https://backend.dev.sora-card.tachi.soramitsu.co.jp/kyc-last-status",kycAttemptCountEndpoint:"https://backend.dev.sora-card.tachi.soramitsu.co.jp/kyc-attempt-count",newAccessTokenEndpoint:"https://api-auth-test.soracard.com/RequestNewAccessToken"};async function l(){const e=localStorage.getItem("PW-refresh-token");let t=localStorage.getItem("PW-token");if(!t||!e)return y();if(p(t)){const o=await u(e);if(!o)return y();t=o}const{kycStatus:o,verificationStatus:s,rejectReason:i}=await async function(e){if(!e)return y();const t=a.ZP.state.wallet.settings.soraNetwork||n.it.SoraNetwork.Test;try{const o=await fetch(d(t).lastKycStatusEndpoint,{method:"GET",headers:{Authorization:`Bearer ${e}`}}),s=await o.json();if(!s)return y();const n=s.verification_status,a=s.kyc_status,i=s.additional_description;return Object.keys(r.$).includes(n)&&Object.keys(r.a).includes(a)?{verificationStatus:n,kycStatus:a,rejectReason:i}:y()}catch(e){return c.error("[SoraCard]: Error while getting KYC and verification statuses",e),y()}}(t);return{kycStatus:o,verificationStatus:s,rejectReason:i}}async function u(e){const t=a.ZP.state.wallet.settings.soraNetwork||n.it.SoraNetwork.Test,{apiKey:o}=b(t).authService,s=i.from(o);try{const o=await fetch(d(t).newAccessTokenEndpoint,{method:"POST",headers:{Authorization:`Basic ${s.toString("base64")}, Bearer ${e}`}});if(200===o.status&&!0===o.ok){const e=o.headers.get("accesstoken");return e&&localStorage.setItem("PW-token",e),e}}catch(e){c.error("[SoraCard]: Error while getting new JWT pair",e)}return null}const p=e=>{try{const t=(0,s.Z)(e);return!(t.exp&&Date.now()<=1e3*t.exp)}catch{return!0}},m=async()=>{try{const e=await fetch("https://backend.dev.sora-card.tachi.soramitsu.co.jp/prices/xor_euro");return(await e.json()).price}catch(e){c.error(e)}},h=async()=>{const e=localStorage.getItem("PW-refresh-token");let t=localStorage.getItem("PW-token");if(!t||!e)return null;if(p(t)){const o=await u(e);if(!o)return null;t=o}const o=a.ZP.state.wallet.settings.soraNetwork||n.it.SoraNetwork.Test;try{const e=await fetch(d(o).kycAttemptCountEndpoint,{method:"GET",headers:{Authorization:`Bearer ${t}`}}),{free_attempt:s}=await e.json();return s}catch(e){c.error("[SoraCard]: Error while getting KYC attempt",e)}},g=()=>{localStorage.removeItem("PW-token"),localStorage.removeItem("PW-refresh-token")},f=()=>{localStorage.removeItem("PW-ProcessID"),localStorage.removeItem("PW-conf"),localStorage.removeItem("PW-Country"),localStorage.removeItem("PW-PhoneNumber"),localStorage.removeItem("PW-PhoneNumberValid"),localStorage.removeItem("PW-Email"),localStorage.removeItem("PW-AuthUserID"),localStorage.removeItem("PW-DocumentSubtype"),localStorage.removeItem("PW-KycReferenceID"),localStorage.removeItem("PW-KycStart"),localStorage.removeItem("PW-otpID"),localStorage.removeItem("PW-OTPLength"),localStorage.removeItem("PW-FirstName"),localStorage.removeItem("PW-MiddleName"),localStorage.removeItem("PW-LastName"),localStorage.removeItem("PW-Check"),localStorage.removeItem("PW-WhitelabelReferenceID"),localStorage.removeItem("PW-KycReferenceID"),localStorage.removeItem("PW-documents"),localStorage.removeItem("PW-document"),localStorage.removeItem("PW-VideoID"),localStorage.removeItem("PW-Authorization"),localStorage.removeItem("PW-retry"),localStorage.removeItem("PW-AppReferenceID")},y=()=>({verificationStatus:void 0,kycStatus:void 0});function b(e){const t=(e=>{const t={sdkURL:"https://auth-test.soracard.com/WebSDK/WebSDK.js",apiKey:"6974528a-ee11-4509-b549-a8d02c1aec0d",env:n.it.SoraNetwork.Test},o={sdkURL:"",apiKey:"",env:n.it.SoraNetwork.Prod};return e===n.it.SoraNetwork.Prod?o:t})(e),o=(e=>{const t={sdkURL:"https://kyc-test.soracard.com/web/v2/webkyc.js",username:"E7A6CB83-630E-4D24-88C5-18AAF96032A4",pass:"75A55B7E-A18F-4498-9092-58C7D6BDB333",env:n.it.SoraNetwork.Test,unifiedApiKey:"6974528a-ee11-4509-b549-a8d02c1aec0d"},o={sdkURL:"",username:"",pass:"",env:n.it.SoraNetwork.Prod,unifiedApiKey:""};return e===n.it.SoraNetwork.Prod?o:t})(e);return{authService:t,kycService:o,soraProxy:d(e)}}},54643:function(e,t,o){"use strict";o.d(t,{x:function(){return n}});var s=o(77057);class n extends Error{constructor({key:e="",payload:t={}}={},...o){super(...o),(0,s.Z)(this,"translationKey",void 0),(0,s.Z)(this,"translationPayload",void 0),this.name="AppHandledError",this.translationKey=e,this.translationPayload=t}}},63471:function(e,t,o){"use strict";o.d(t,{HR:function(){return v},dL:function(){return C},qc:function(){return E},LB:function(){return N},CH:function(){return P},Gg:function(){return x},zt:function(){return R},O:function(){return B}});var s=o(15166),n=o(93286),a=o(97363),r=o(92003),i=o.n(r),c=o(87632),d=o(36930),l=o(82753),u=o(20439),p=o(6029),m=o(25108);const h=7e4,g=86e3,f=5e4,y=255e3,b=25e4,w=255e3;var v;!function(e){e.VAL="VAL",e.XOR="XOR",e.Other="OTHER"}(v||(v={}));const S=[{[l.XOR.address]:h+g,[l.KnownAssets.get(l.KnownSymbols.VAL).address]:h+g,[l.KnownAssets.get(l.KnownSymbols.PSWAP).address]:h+g,[l.KnownAssets.get(l.KnownSymbols.ETH).address]:f,[v.Other]:h+g},{[l.XOR.address]:y,[l.KnownAssets.get(l.KnownSymbols.VAL).address]:y,[l.KnownAssets.get(l.KnownSymbols.PSWAP).address]:w,[l.KnownAssets.get(l.KnownSymbols.ETH).address]:b,[v.Other]:b}],C={balance:[{constant:!0,inputs:[{internalType:"address",name:"who",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],type:"function"}],allowance:[{constant:!0,inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}]};let k=null,T=null;var A,E,N,P,x,R;!function(e){e.Ethereum="ethereum",e.Energy="energy"}(A||(A={})),function(e){e.Mainnet="main",e.Ropsten="ropsten",e.Kovan="kovan",e.Rinkeby="rinkeby",e.Goerli="goerli",e.Private="private",e.EWC="EWC",e.Sepolia="sepolia"}(E||(E={})),function(e){e.Ethereum="ethereum",e.Other="other"}(N||(N={})),function(e){e.Internal="internal",e.Other="other"}(P||(P={})),function(e){e.Bridge="BRIDGE",e.ERC20="ERC20"}(x||(x={})),function(e){e[e.Metamask=0]="Metamask",e[e.WalletConnect=1]="WalletConnect"}(R||(R={}));const B={"0x1":E.Mainnet,"0x3":E.Ropsten,"0x2a":E.Kovan,"0x4":E.Rinkeby,"0x5":E.Goerli,"0x12047":E.Private,"0xaa36a7":E.Sepolia};async function D(){const e=await _();await e.send("eth_requestAccounts",[]);return e.getSigner().getAddress()}function F(e,t){return e.toLowerCase()===t.toLowerCase()}async function _(){if(k||(k=await i()({timeout:0})),!k)throw new Error("No ethereum provider instance!");return T||(T=new s.Q(k,"any")),T}function I(e,t){return d.FPNumber.fromCodecValue(e).mul(new d.FPNumber(t)).toCodecString()}t.ZP={onConnect:async function(e){return e.provider===R.Metamask?async function(){if(k=await i()({timeout:0}),!k)throw new Error("provider.messages.installExtension");return D()}():async function(e="https://cloudflare-eth.com"){return k=new a.Z({rpc:{1:e}}),await k.enable(),D()}(e.url)},getAccount:D,checkAccountIsConnected:async function(e){if(!e)return!1;const t=await D();return!!t&&F(t,e)},storeEvmUserAddress:function(e){p.Z.set("evmAddress",e)},getEvmUserAddress:function(){return p.Z.get("evmAddress")||""},fetchEvmNetworkType:async function(){const e=await _(),t=await e.getNetwork(),o=n.$P(t.chainId);return B[o]},getEthersInstance:_,removeEvmUserAddress:function(){p.Z.remove("evmAddress")},watchEthereum:async function(e){await _();const t=window.ethereum;return t&&(t.on("accountsChanged",e.onAccountChange),t.on("chainChanged",e.onNetworkChange),t.on("disconnect",e.onDisconnect)),function(){t&&(t.removeListener("accountsChanged",e.onAccountChange),t.removeListener("chainChanged",e.onNetworkChange),t.removeListener("disconnect",e.onDisconnect))}},readSmartContract:async function(e,t){try{const{data:o}=await u.ZP.get(`/abi/${e}/${t}`);return o}catch(e){m.error(e)}},accountAddressToHex:async function(e){return n.Dv(Array.from((0,c.m)(e).values()))},addressesAreEqual:F,fetchEvmNetworkFee:async function(e,t){try{const o=await _(),s=(await o.getGasPrice()).toNumber(),n=S[+t],a=n[e in n?e:v.Other];return I(s,a)}catch(e){throw m.error(e),e}},calcEvmFee:I,getEvmTransaction:async function(e){const t=await _();return await t.getTransaction(e)},getEvmTransactionReceipt:async function(e){const t=await _();return await t.getTransactionReceipt(e)},getBlock:async function(e){const t=await _();return await t.getBlock(e)},addToken:async function(e,t,o,s){const n=window.ethereum;try{await n.request({method:"wallet_watchAsset",params:{type:"ERC20",options:{address:e,symbol:t,decimals:o,image:s}}})}catch(e){m.error(e)}}}},85530:function(e,t,o){"use strict";o.d(t,{Tg:function(){return m},AN:function(){return h},uc:function(){return g},oI:function(){return f},MN:function(){return b},Vl:function(){return w},LG:function(){return v},lV:function(){return S},Tu:function(){return C},gw:function(){return k},yA:function(){return T},rh:function(){return A},SL:function(){return E},U8:function(){return N},_1:function(){return P},RA:function(){return x},ue:function(){return R},lk:function(){return B},y_:function(){return D},UK:function(){return F},BV:function(){return _},mY:function(){return I},_Q:function(){return L},kF:function(){return O},Gc:function(){return M}});var s=o(23279),n=o.n(s),a=o(8755),r=o(36930),i=o(82753),c=o(80710),d=o(66926),l=o(16546),u=o(6029),p=o(25108);const m=(e,t=e.length/2)=>`${e.slice(0,t/2)}...${e.slice(-t/2)}`,h=e=>!!e&&e.address===i.XOR.address,g=e=>{const t=e.replace(/^0x/,"");return 0===parseInt(t,16)},f=(e,t,o,s,n,a=!1,i=!1)=>{if(!t||!e||!n||T(A(t,{parseAsLiquidity:a})))return!1;const c=new r.FPNumber(o,t.decimals),d=y(t,s,!1,a);return!r.FPNumber.eq(d,c)&&!v(n,s,i)},y=(e,t,o=!1,s=!1,n=!1)=>{const a=A(e,{internal:!o,parseAsLiquidity:s,isBondedBalance:n}),i=e[o?"externalDecimals":"decimals"];if(T(a))return r.FPNumber.ZERO;let c=r.FPNumber.fromCodecValue(a,i);if(!T(t)&&(!o&&h(e)||o&&g(e.externalAddress))&&!n){const e=r.FPNumber.fromCodecValue(t);c=c.sub(e)}return r.FPNumber.lt(c,r.FPNumber.ZERO)?r.FPNumber.ZERO:c},b=(e,t,o=!1,s=!1)=>y(e,t,o,!1,s).toString(),w=(e,t,o,s=!1,n=!1)=>{const a=new r.FPNumber(t,e.decimals),i=y(e,o,s,!1,n);return r.FPNumber.lt(i,a)},v=(e,t,o=!1)=>{if(!e)return!0;if(T(t))return!1;const s=e.decimals,n=A(e),a=r.FPNumber.fromCodecValue(n,s),i=r.FPNumber.fromCodecValue(t,s);return r.FPNumber.lt(a,i)&&!o},S=(e,t)=>{if(!t)return!1;const o=r.FPNumber.fromCodecValue(e),s=r.FPNumber.fromCodecValue(t);return r.FPNumber.lt(o,s)},C=()=>u.Z.get("address");async function k(e=50){await new Promise((t=>setTimeout(t,e)))}const T=e=>!Number.isFinite(+e)||0==+e,A=(e,{internal:t=!0,parseAsLiquidity:o=!1,isBondedBalance:s=!1}={})=>e?t?o?e?.balance:s?e?.balance?.bonded:e?.balance?.transferable:e?.externalBalance:l.m8,E=(e,{internal:t=!0,parseAsLiquidity:o=!1,formattedZero:s="",showZeroBalance:n=!0,isBondedBalance:a=!1}={})=>{if(!e)return s;const i=A(e,{internal:t,parseAsLiquidity:o,isBondedBalance:a});if(!i||!n&&T(i))return s;const c=((e,{internal:t=!0}={})=>{if(e)return t?e.decimals:e.externalDecimals})(e,{internal:t});return r.FPNumber.fromCodecValue(i,c).toLocaleString()},N=(e,t)=>{if(Array.isArray(t)&&e?.address)return t.find((t=>t.address===e.address))},P=(e,t=500,o={leading:!0})=>n()(e,t,o),x=e=>{"0"!==Number(1e4).toLocaleString(e).substring(2,3)&&(r.FPNumber.DELIMITERS_CONFIG.thousand=Number(12345).toLocaleString(e).substring(2,3)),r.FPNumber.DELIMITERS_CONFIG.decimal=Number(1.2).toLocaleString(e).substring(1,2)},R=e=>{const t=(e??c.ZP.currentRoute)?.name;t&&d.ZP.te(`pageTitle.${t}`)?document.title=`${d.ZP.t(`pageTitle.${t}`)} - ${l.l2.name}`:document.title=l.l2.title},B=async e=>{try{await document.fonts.load(`1em ${e}`)}catch(e){p.error(e)}},D=e=>getComputedStyle(document.documentElement).getPropertyValue(e).trim(),F=e=>Object.entries(e).map((([e,t])=>`${e}=${encodeURIComponent(t)}`)).join("&"),_=async e=>a.hi.accountPair?e?.():(await k(),await _(e)),I=(e,t="Sora",o=10)=>{const s=document.createElement("canvas").getContext("2d");if(!s)return 0;s.font=`${o}px ${t}`;return Math.ceil(s.measureText(e).width)},L=(e,t)=>t.isZero()?r.FPNumber.gt(e,r.FPNumber.ZERO)?r.FPNumber.HUNDRED:r.FPNumber.ZERO:e.sub(t).div(t).mul(r.FPNumber.HUNDRED),O=(e,t=2)=>{const o=e.toNumber(),s=e=>new r.FPNumber(e).toLocaleString();if(Math.trunc(o/1e9)>0){return{amount:s((o/1e9).toFixed(t)),suffix:"B"}}if(Math.trunc(o/1e6)>0){return{amount:s((o/1e6).toFixed(t)),suffix:"M"}}if(Math.trunc(o/1e3)>0){return{amount:s((o/1e3).toFixed(t)),suffix:"K"}}return{amount:s(o.toFixed(t)),suffix:""}},M=(e,t=!1)=>`${new r.FPNumber(e.toFixed(2)).toLocaleString()}${t?"%":""}`},82344:function(e,t,o){"use strict";o.d(t,{D:function(){return s},u:function(){return c}});var s,n=o(77057),a=o(20439),r=o(8755),i=o(85530);!function(e){e.Completed="completed",e.Failed="failed"}(s||(s={}));class c{constructor(){(0,n.Z)(this,"publicKey",""),(0,n.Z)(this,"soraNetwork","")}static getWidgetBaseUrl(e){return e===r.it.SoraNetwork.Prod?"https://buy.moonpay.com":"https://buy-staging.moonpay.com"}get requiredParams(){return{apiKey:this.publicKey}}createWidgetUrl(e,t){const o=t||c.getWidgetBaseUrl(this.soraNetwork),s={...this.requiredParams,...e};return`${o}?${(0,i.UK)(s)}`}async getTransactionsByExtId(e){try{const t=`${c.apiUrl}/v1/transactions/ext/${e}`;return await this.apiRequest(t)}catch(e){return[]}}async getCurrencies(){try{const e=`${c.apiUrl}/v3/currencies`;return await this.apiRequest(e)}catch(e){return[]}}async apiRequest(e,t={}){const o={params:{...this.requiredParams,...t}},{data:s}=await a.ZP.get(e,o);return s}}(0,n.Z)(c,"apiUrl","https://api.moonpay.com")},6029:function(e,t,o){"use strict";o.d(t,{d:function(){return s.d5}});var s=o(8755);t.Z=s.tO},14924:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return b}});var s=o(77057),n=o(70655),a=o(53545),r=o(8755),i=o(36930),c=o(48243),d=o(32806),l=o(75882),u=o(75794),p=o(64645),m=o(74614),h=o(80710),g=o(16546);let f=class extends((0,a.Wr)(d.Z)){constructor(...e){super(...e),(0,s.Z)(this,"soraNetwork",void 0),(0,s.Z)(this,"blockNumber",void 0),(0,s.Z)(this,"isNodeConnecting",void 0),(0,s.Z)(this,"isNodeConnected",void 0),(0,s.Z)(this,"node",void 0),(0,s.Z)(this,"setSelectNodeDialogVisibility",void 0),(0,s.Z)(this,"setEnabled",void 0),(0,s.Z)(this,"setDisabled",void 0),(0,s.Z)(this,"setSpeedMb",void 0),(0,s.Z)(this,"isInternetConnectionEnabled",void 0),(0,s.Z)(this,"isInternetConnectionStable",void 0),(0,s.Z)(this,"internetConnectionSpeedMb",void 0),(0,s.Z)(this,"subqueryStatus",void 0),(0,s.Z)(this,"showStatisticsDialog",!1)}get blockExplorerLink(){const e=(0,r.$_)(this.soraNetwork);return e.length?e[0].value:null}get blockNumberFormatted(){return new i.FPNumber(this.blockNumber).toLocaleString()}get nodeConnectionStatusKey(){return this.isNodeConnected?"connected":this.isNodeConnecting?"loading":"disconnected"}get nodeConnectionClass(){return this.isNodeConnected?c.qb.SUCCESS:this.isNodeConnecting?c.qb.DEFAULT:c.qb.ERROR}get nodeConnectionText(){return this.t(`footer.node.title.${this.nodeConnectionStatusKey}`)}get formattedNodeLocation(){return this.node?.location?(0,p.T)(this.node.location):null}openNodeSelectionDialog(){this.setSelectNodeDialogVisibility(!0)}get internetStatusKey(){return this.isInternetConnectionEnabled?this.isInternetConnectionStable?"stable":"unstable":"disabled"}get internetConnectionClass(){return this.isInternetConnectionEnabled?this.isInternetConnectionStable?c.qb.SUCCESS:c.qb.WARNING:c.qb.ERROR}get internetConnectionText(){return this.t(`footer.internet.title.${this.internetStatusKey}`)}get internetConnectionDesc(){return this.t(`footer.internet.desc.${this.internetStatusKey}`)}get internetConnectionSpeedMbText(){if(!this.internetConnectionSpeedMb)return"";return`${10===this.internetConnectionSpeedMb?"≥ ":""}${this.internetConnectionSpeedMb} ${this.TranslationConsts.mbps}`}refreshPage(){window.location.reload()}get statisticsConnectionClass(){switch(this.subqueryStatus){case r.uQ.ConnectionStatus.Unavailable:return c.qb.ERROR;case r.uQ.ConnectionStatus.Loading:return c.qb.DEFAULT;case r.uQ.ConnectionStatus.Available:return c.qb.SUCCESS;default:return c.qb.DEFAULT}}get statisticsStatusKey(){switch(this.subqueryStatus){case r.uQ.ConnectionStatus.Unavailable:return"unavailable";case r.uQ.ConnectionStatus.Loading:return"loading";case r.uQ.ConnectionStatus.Available:return"available";default:return"loading"}}get statisticsConnectionText(){return this.t(`footer.statistics.title.${this.statisticsStatusKey}`)}get statisticsConnectionDesc(){return this.t(`footer.statistics.desc.${this.statisticsStatusKey}`)}openStatisticsDialog(){this.showStatisticsDialog=!0}created(){window.addEventListener("offline",this.setDisabled),window.addEventListener("online",this.setEnabled),navigator?.connection?.addEventListener("change",this.setSpeedMb)}beforeDestroy(){window.removeEventListener("offline",this.setDisabled),window.removeEventListener("online",this.setEnabled),navigator?.connection?.removeEventListener("change",this.setSpeedMb)}};(0,n.__decorate)([m.SB.wallet.settings.soraNetwork],f.prototype,"soraNetwork",void 0),(0,n.__decorate)([m.SB.settings.blockNumber],f.prototype,"blockNumber",void 0),(0,n.__decorate)([m.Yn.settings.nodeIsConnecting],f.prototype,"isNodeConnecting",void 0),(0,n.__decorate)([m.Yn.settings.nodeIsConnected],f.prototype,"isNodeConnected",void 0),(0,n.__decorate)([m.SB.settings.node],f.prototype,"node",void 0),(0,n.__decorate)([m.QF.settings.setSelectNodeDialogVisibility],f.prototype,"setSelectNodeDialogVisibility",void 0),(0,n.__decorate)([m.QF.settings.setInternetConnectionEnabled],f.prototype,"setEnabled",void 0),(0,n.__decorate)([m.QF.settings.setInternetConnectionDisabled],f.prototype,"setDisabled",void 0),(0,n.__decorate)([m.QF.settings.setInternetConnectionSpeed],f.prototype,"setSpeedMb",void 0),(0,n.__decorate)([m.Yn.settings.isInternetConnectionEnabled],f.prototype,"isInternetConnectionEnabled",void 0),(0,n.__decorate)([m.Yn.settings.isInternetConnectionStable],f.prototype,"isInternetConnectionStable",void 0),(0,n.__decorate)([m.Yn.settings.internetConnectionSpeedMb],f.prototype,"internetConnectionSpeedMb",void 0),(0,n.__decorate)([m.SB.wallet.settings.subqueryStatus],f.prototype,"subqueryStatus",void 0),f=(0,n.__decorate)([(0,a.wA)({components:{FooterPopper:l.default,NoInternetDialog:u.default,StatisticsDialog:(0,h.kF)(g.z8.StatisticsDialog),SelectNodeDialog:(0,h.kF)(g.z8.SelectNodeDialog)}})],f);var y=f,b=(0,o(1001).Z)(y,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"app-status s-flex"},[e.blockNumber?o("a",{staticClass:"block-number s-flex",attrs:{href:e.blockExplorerLink,target:"_blank",rel:"nofollow noopener"}},[o("span",{staticClass:"block-number-icon"}),o("span",[e._v(e._s(e.blockNumberFormatted))])]):e._e(),o("footer-popper",{attrs:{icon:"globe-16","panel-class":"node","panel-text":e.nodeConnectionText,status:e.nodeConnectionClass,"action-text":e.t("selectNodeText")},on:{action:e.openNodeSelectionDialog},scopedSlots:e._u([{key:"label",fn:function(){return[o("span",[e._v(e._s(e.t("selectNodeConnected")))]),o("span",[e._v(e._s(e.node.chain))])]},proxy:!0}])},[[o("span",[e._v(e._s(e.node.address))]),e.formattedNodeLocation?o("span",[e._v(" "+e._s(e.formattedNodeLocation.name)+" "),o("span",{staticClass:"flag-emodji"},[e._v(e._s(e.formattedNodeLocation.flag))])]):e._e()]],2),o("footer-popper",{attrs:{icon:"wi-fi-16","panel-class":"internet","panel-text":e.internetConnectionText,status:e.internetConnectionClass,"action-text":e.t("footer.internet.action")},on:{action:e.refreshPage},scopedSlots:e._u([{key:"label",fn:function(){return[o("span",[e._v(e._s(e.t("footer.internet.label")))]),o("span",[e._v(e._s(e.internetConnectionSpeedMbText))])]},proxy:!0}])},[[o("span",[e._v(e._s(e.internetConnectionDesc))])]],2),o("footer-popper",{attrs:{icon:"software-cloud-24","panel-class":"statistics","panel-text":e.statisticsConnectionText,status:e.statisticsConnectionClass,"action-text":e.t("footer.statistics.action")},on:{action:e.openStatisticsDialog},scopedSlots:e._u([{key:"label",fn:function(){return[o("span",[e._v(e._s(e.t("footer.statistics.label")))]),o("span",[e._v(e._s(e.statisticsConnectionDesc))])]},proxy:!0}])}),o("select-node-dialog"),o("no-internet-dialog"),o("statistics-dialog",{attrs:{visible:e.showStatisticsDialog},on:{"update:visible":function(t){e.showStatisticsDialog=t}}})],1)}),[],!1,null,"775dd673",null).exports},75882:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return p}});var s=o(77057),n=o(70655),a=o(53545),r=o(48243),i=o(85530);const c="app-status__tooltip";let d=class extends a.w3{constructor(...e){super(...e),(0,s.Z)(this,"status",void 0),(0,s.Z)(this,"icon",void 0),(0,s.Z)(this,"panelClass",void 0),(0,s.Z)(this,"actionText",void 0),(0,s.Z)(this,"panelText",void 0),(0,s.Z)(this,"popover",void 0)}async handleShow(){await(0,i.gw)(100);const e=this.popover?.popperElm?.style?.getPropertyValue("left");e&&e.includes("-")&&this.popover?.popperElm.style.setProperty("left","0")}get computedPopperClass(){return[c,this.status].filter((e=>!!e)).join(" ")}get computedClass(){return[this.panelClass,this.status].filter((e=>!!e)).join(" ")}get loading(){return this.status===r.qb.DEFAULT}get tabindex(){return this.loading?-1:0}handleActionClick(){this.$emit("action")}handleEnterClick(){this.popover?.doToggle()}handleBlur(e){const t=this.popover.popperElm,o=e.relatedTarget;t&&o&&(t===o||t.contains(o)||this.popover?.doClose())}};(0,n.__decorate)([(0,a.fI)({required:!0,type:String})],d.prototype,"status",void 0),(0,n.__decorate)([(0,a.fI)({required:!0,type:String})],d.prototype,"icon",void 0),(0,n.__decorate)([(0,a.fI)({type:String,default:""})],d.prototype,"panelClass",void 0),(0,n.__decorate)([(0,a.fI)({type:String,default:""})],d.prototype,"actionText",void 0),(0,n.__decorate)([(0,a.fI)({required:!0,type:String})],d.prototype,"panelText",void 0),(0,n.__decorate)([(0,a.Rl)("popover")],d.prototype,"popover",void 0),d=(0,n.__decorate)([a.wA],d);var l=d,u=(0,o(1001).Z)(l,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("el-popover",{ref:"popover",attrs:{placement:"top",trigger:"click","popper-class":e.computedPopperClass,disabled:e.loading,tabindex:e.tabindex},on:{show:e.handleShow}},[o("div",{staticClass:"app-status__item s-flex",class:e.computedClass,attrs:{slot:"reference"},on:{keypress:function(t){return!t.type.indexOf("key")&&e._k(t.keyCode,"enter",13,t.key,"Enter")?null:e.handleEnterClick.apply(null,arguments)},blur:e.handleBlur},slot:"reference"},[e.loading?o("span",{staticClass:"app-status__loading"}):o("s-icon",{attrs:{name:e.icon,size:"16"}}),o("span",{staticClass:"app-status__text"},[e._v(e._s(e.panelText))])],1),o("div",{staticClass:"item s-flex"},[o("div",{staticClass:"item__title s-flex"},[o("div",{staticClass:"item__label s-flex"},[e._t("label")],2),e.actionText?o("s-button",{staticClass:"item__action",attrs:{size:"small",type:"secondary"},on:{click:e.handleActionClick}},[e._v(" "+e._s(e.actionText)+" ")]):e._e()],1),o("div",{staticClass:"item__desc s-flex"},[e._t("default")],2)])])}),[],!1,null,"2bdc5357",null),p=u.exports},75794:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return l}});var s=o(77057),n=o(70655),a=o(53545),r=o(32806),i=o(74614);let c=class extends((0,a.Wr)(r.Z)){constructor(...e){super(...e),(0,s.Z)(this,"isInternetConnectionEnabled",void 0)}refreshPage(){window.location.reload()}};(0,n.__decorate)([i.Yn.settings.isInternetConnectionEnabled],c.prototype,"isInternetConnectionEnabled",void 0),c=(0,n.__decorate)([a.wA],c);var d=c,l=(0,o(1001).Z)(d,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("s-dialog",{staticClass:"no-internet",attrs:{width:"466px",visible:!e.isInternetConnectionEnabled,"show-close":!1,"close-on-click-modal":!1,"close-on-esc":!1}},[o("div",{staticClass:"no-internet__content s-flex"},[o("div",{staticClass:"no-internet__icon s-flex"},[o("s-icon",{attrs:{name:"wi-fi-16",size:"32"}})],1),o("span",{staticClass:"no-internet__title"},[e._v(e._s(e.t("footer.internet.dialogTitle")))]),o("span",{staticClass:"no-internet__desc"},[e._v(e._s(e.t("footer.internet.dialogDesc")))])]),o("s-button",{staticClass:"no-internet__action",attrs:{slot:"footer"},on:{click:e.refreshPage},slot:"footer"},[e._v(e._s(e.t("footer.internet.action")))])],1)}),[],!1,null,"0f1dd8bb",null).exports},21509:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return p}});var s=o(77057),n=o(70655),a=o(53545),r=o(8755),i=o(32806),c=o(85530),d=o(74614);let l=class extends((0,a.Wr)(i.Z)){constructor(...e){super(...e),(0,s.Z)(this,"account",void 0),(0,s.Z)(this,"isLoggedIn",void 0)}get accountTooltip(){return this.isLoggedIn?this.t("connectedAccount"):this.t("connectWalletTextTooltip")}get accountInfo(){return this.isLoggedIn?this.account.name||(0,c.Tg)(this.account.address,8):this.t("connectWalletText")}};(0,n.__decorate)([d.Yn.wallet.account.account],l.prototype,"account",void 0),(0,n.__decorate)([d.Yn.wallet.account.isLoggedIn],l.prototype,"isLoggedIn",void 0),l=(0,n.__decorate)([(0,a.wA)({components:{WalletAvatar:r.wx.WalletAvatar}})],l);var u=l,p=(0,o(1001).Z)(u,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("s-button",e._g(e._b({class:["account-control",{"s-pressed":e.isLoggedIn}],attrs:{type:"tertiary",size:"medium",tooltip:e.accountTooltip}},"s-button",e.$attrs,!1),e.$listeners),[o("div",{staticClass:"account-control-icon"},[e.isLoggedIn?o("WalletAvatar",{attrs:{address:e.account.address}}):o("s-icon",{attrs:{name:"finance-wallet-24",size:"28"}})],1),o("div",{class:["account-control-title",{name:e.isLoggedIn}]},[e._v(e._s(e.accountInfo))])])}),[],!1,null,null,null).exports},56535:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return b}});var s=o(77057),n=o(70655),a=o(53545),r=o(82753),i=o(8755),c=o(10909),d=o(22041),l=o(21509),u=o(77874),p=o(98122),m=o(80710),h=o(16546),g=o(74614);let f=class extends((0,a.Wr)(c.Z)){constructor(...e){super(...e),(0,s.Z)(this,"PageNames",h.sn),(0,s.Z)(this,"loading",void 0),(0,s.Z)(this,"libraryTheme",void 0),(0,s.Z)(this,"isLoggedIn",void 0),(0,s.Z)(this,"moonpayEnabled",void 0),(0,s.Z)(this,"setMoonpayVisibility",void 0),(0,s.Z)(this,"goTo",m.WF)}get nodeLogo(){return{size:i.it.LogoSize.MEDIUM,tokenSymbol:r.XOR.symbol}}get areMoonpayButtonsVisible(){return this.moonpayEnabled&&this.isLoggedIn}async openMoonpayDialog(){if(!this.isSoraAccountConnected)return this.connectInternalWallet();await this.checkConnectionToExternalAccount((async()=>{this.setMoonpayVisibility(!0)}))}toggleMenu(){this.$emit("toggle-menu")}};(0,n.__decorate)([(0,a.fI)({type:Boolean,default:!1})],f.prototype,"loading",void 0),(0,n.__decorate)([g.Yn.libraryTheme],f.prototype,"libraryTheme",void 0),(0,n.__decorate)([g.Yn.wallet.account.isLoggedIn],f.prototype,"isLoggedIn",void 0),(0,n.__decorate)([g.Yn.settings.moonpayEnabled],f.prototype,"moonpayEnabled",void 0),(0,n.__decorate)([g.QF.moonpay.setDialogVisibility],f.prototype,"setMoonpayVisibility",void 0),f=(0,n.__decorate)([(0,a.wA)({components:{PolkaswapLogo:d.default,AppAccountButton:l.default,AppHeaderMenu:u.default,AppLogoButton:p.default,SelectLanguageDialog:(0,m.kF)(h.z8.SelectLanguageDialog),Moonpay:(0,m.kF)(h.z8.Moonpay),MoonpayNotification:(0,m.kF)(h.z8.MoonpayNotification),MoonpayHistoryButton:(0,m.kF)(h.z8.MoonpayHistoryButton),MoonpayConfirmation:(0,m.kF)(h.z8.MoonpayConfirmation),TokenLogo:i.wx.TokenLogo,WalletAvatar:i.wx.WalletAvatar}})],f);var y=f,b=(0,o(1001).Z)(y,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("header",{staticClass:"header"},[o("s-button",{staticClass:"app-menu-button",attrs:{type:"action",primary:"",icon:"basic-more-horizontal-24"},on:{click:e.toggleMenu}}),o("app-logo-button",{staticClass:"app-logo--header",attrs:{responsive:"",theme:e.libraryTheme},on:{click:function(t){return e.goTo(e.PageNames.Swap)}}}),e.areMoonpayButtonsVisible?o("div",{staticClass:"app-controls app-controls--moonpay s-flex"},[o("s-button",{staticClass:"moonpay-button moonpay-button--buy",attrs:{type:"tertiary",size:"medium",icon:"various-atom-24"},on:{click:e.openMoonpayDialog}},[o("span",{staticClass:"moonpay-button-text"},[e._v(e._s(e.t("moonpay.buttons.buy")))])]),o("moonpay-history-button",{staticClass:"moonpay-button moonpay-button--history"})],1):e._e(),o("div",{staticClass:"app-controls s-flex",class:{"without-moonpay":!e.areMoonpayButtonsVisible}},[o("app-account-button",{attrs:{disabled:e.loading},on:{click:function(t){return e.goTo(e.PageNames.Wallet)}}}),o("app-header-menu")],1),o("select-language-dialog"),e.moonpayEnabled?[o("moonpay"),o("moonpay-notification"),o("moonpay-confirmation")]:e._e()],2)}),[],!1,null,"4cb3a678",null).exports},77874:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return g}});var s,n=o(77057),a=o(70655),r=o(53545),i=o(72305),c=o(59832),d=o(44539),l=o.n(d),u=o(32806),p=o(74614);!function(e){e.HideBalances="hide-balances",e.Theme="theme",e.Language="language",e.Notification="notification",e.Disclaimer="disclaimer"}(s||(s={}));let m=class extends((0,r.Wr)(u.Z)){constructor(...e){super(...e),(0,n.Z)(this,"iconSize",28),(0,n.Z)(this,"HeaderMenuType",s),(0,n.Z)(this,"disclaimerVisibility",void 0),(0,n.Z)(this,"userDisclaimerApprove",void 0),(0,n.Z)(this,"shouldBalanceBeHidden",void 0),(0,n.Z)(this,"isBrowserNotificationApiAvailable",void 0),(0,n.Z)(this,"libraryTheme",void 0),(0,n.Z)(this,"notificationActivated",void 0),(0,n.Z)(this,"toggleHideBalance",void 0),(0,n.Z)(this,"setBrowserNotifsPopupEnabled",void 0),(0,n.Z)(this,"setBrowserNotifsPopupBlocked",void 0),(0,n.Z)(this,"setLanguageDialogVisibility",void 0),(0,n.Z)(this,"toggleDisclaimerDialogVisibility",void 0),(0,n.Z)(this,"isLargeDesktop",window.innerWidth>=1440)}updateLargeDesktopFlag(e){this.isLargeDesktop=e.matches}get mediaQueryList(){return window.matchMedia("(min-width: 1440px)")}get isNotificationOptionShown(){return!this.notificationActivated&&this.isBrowserNotificationApiAvailable}getThemeIcon(e=!1){return e?this.libraryTheme===i.Z.LIGHT?"various-moon-24":"various-brightness-low-24":this.libraryTheme===i.Z.LIGHT?"various-brightness-low-24":"various-moon-24"}get themeTitle(){return this.libraryTheme===i.Z.LIGHT?i.Z.DARK:i.Z.LIGHT}get themeText(){const e=this.t(this.themeTitle);return this.t("headerMenu.switchTheme",{theme:e})}get disclaimerText(){return this.disclaimerVisibility?this.t("headerMenu.hideDisclaimer"):this.t("headerMenu.showDisclaimer")}getHideBalancesIcon(e=!1){return e?this.shouldBalanceBeHidden?"basic-eye-no-24":"basic-filterlist-24":this.shouldBalanceBeHidden?"basic-filterlist-24":"basic-eye-no-24"}get hideBalancesText(){return this.t("headerMenu."+(this.shouldBalanceBeHidden?"showBalances":"hideBalances"))}getHeaderMenuItems(e=!1){return[{value:s.HideBalances,icon:this.getHideBalancesIcon(e),text:this.hideBalancesText},{value:s.Theme,icon:this.getThemeIcon(e),text:this.themeText},{value:s.Language,icon:"basic-globe-24",text:this.t("headerMenu.switchLanguage")},{value:s.Disclaimer,icon:"info-16",text:this.disclaimerText,disabled:this.discalimerDisabled}]}get headerMenuItems(){return this.getHeaderMenuItems()}get dropdownHeaderMenuItems(){return this.getHeaderMenuItems(!0)}get discalimerDisabled(){return this.disclaimerVisibility&&!this.userDisclaimerApprove}mounted(){this.mediaQueryList.addEventListener("change",this.updateLargeDesktopFlag)}beforeDestroy(){this.mediaQueryList.removeEventListener("change",this.updateLargeDesktopFlag)}openNotificationDialog(){this.isBrowserNotificationApiAvailable&&("denied"===Notification.permission?this.setBrowserNotifsPopupBlocked(!0):"default"===Notification.permission&&this.setBrowserNotifsPopupEnabled(!0))}handleClickHeaderMenu(){const e=this.$refs.headerMenu.dropdown;e.visible?e.hide():e.show()}handleSelectHeaderMenu(e){switch(e){case s.HideBalances:this.toggleHideBalance();break;case s.Theme:(0,c.tj)();break;case s.Language:this.setLanguageDialogVisibility(!0);break;case s.Disclaimer:if(this.discalimerDisabled)return;this.toggleDisclaimerDialogVisibility()}}};(0,a.__decorate)([p.SB.settings.disclaimerVisibility],m.prototype,"disclaimerVisibility",void 0),(0,a.__decorate)([p.SB.settings.userDisclaimerApprove],m.prototype,"userDisclaimerApprove",void 0),(0,a.__decorate)([p.SB.wallet.settings.shouldBalanceBeHidden],m.prototype,"shouldBalanceBeHidden",void 0),(0,a.__decorate)([p.SB.settings.isBrowserNotificationApiAvailable],m.prototype,"isBrowserNotificationApiAvailable",void 0),(0,a.__decorate)([p.Yn.libraryTheme],m.prototype,"libraryTheme",void 0),(0,a.__decorate)([p.Yn.settings.notificationActivated],m.prototype,"notificationActivated",void 0),(0,a.__decorate)([p.QF.wallet.settings.toggleHideBalance],m.prototype,"toggleHideBalance",void 0),(0,a.__decorate)([p.QF.settings.setBrowserNotifsPopupEnabled],m.prototype,"setBrowserNotifsPopupEnabled",void 0),(0,a.__decorate)([p.QF.settings.setBrowserNotifsPopupBlocked],m.prototype,"setBrowserNotifsPopupBlocked",void 0),(0,a.__decorate)([p.QF.settings.setSelectLanguageDialogVisibility],m.prototype,"setLanguageDialogVisibility",void 0),(0,a.__decorate)([p.QF.settings.toggleDisclaimerDialogVisibility],m.prototype,"toggleDisclaimerDialogVisibility",void 0),m=(0,a.__decorate)([(0,r.wA)({components:{BellIcon:l()}})],m);var h=m,g=(0,o(1001).Z)(h,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"app-header-menu"},[e.isLargeDesktop?[e._l(e.headerMenuItems,(function(t){var s=t.value,n=t.icon,a=t.text,r=t.disabled;return o("s-button",{key:s,staticClass:"s-pressed",attrs:{type:"action",tooltip:a,disabled:r},on:{click:function(t){return e.handleSelectHeaderMenu(s)}}},[o("s-icon",{attrs:{name:n,size:e.iconSize}})],1)})),e.isNotificationOptionShown?o("s-button",{staticClass:"notif-option s-pressed el-dropdown-menu__item header-menu__item",attrs:{type:"action",tooltip:e.t("browserNotificationDialog.button")},on:{click:e.openNotificationDialog}},[o("bell-icon",{staticClass:"notif-option__bell notif-option__bell--large"})],1):e._e()]:o("s-button",{staticClass:"settings-control s-pressed",attrs:{type:"action",tooltip:e.t("headerMenu.settings")},on:{click:e.handleClickHeaderMenu}},[o("s-dropdown",{ref:"headerMenu",staticClass:"header-menu__button",attrs:{"popper-class":"header-menu",icon:"grid-block-align-left-24",type:"ellipsis",placement:"bottom-start"},on:{select:e.handleSelectHeaderMenu},scopedSlots:e._u([{key:"menu",fn:function(){return[e._l(e.dropdownHeaderMenuItems,(function(t){var s=t.value,n=t.icon,a=t.text,r=t.disabled;return o("s-dropdown-item",{key:s,staticClass:"header-menu__item",attrs:{icon:n,value:s,disabled:r}},[e._v(" "+e._s(a)+" ")])})),e.isNotificationOptionShown?o("div",{staticClass:"notif-option el-dropdown-menu__item header-menu__item",on:{click:e.openNotificationDialog}},[o("bell-icon",{staticClass:"notif-option__bell notif-option__bell--dropdown"}),o("span",{staticClass:"notif-option__text"},[e._v(e._s(e.t("browserNotificationDialog.title")))])],1):e._e()]},proxy:!0}],null,!1,3112740339)})],1)],2)}),[],!1,null,null,null).exports},98122:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return l}});var s=o(77057),n=o(70655),a=o(53545),r=o(72305),i=o(22041);let c=class extends a.w3{constructor(...e){super(...e),(0,s.Z)(this,"theme",void 0),(0,s.Z)(this,"responsive",void 0)}};(0,n.__decorate)([(0,a.fI)({default:r.Z.LIGHT,type:String})],c.prototype,"theme",void 0),(0,n.__decorate)([(0,a.fI)({default:!1,type:Boolean})],c.prototype,"responsive",void 0),c=(0,n.__decorate)([(0,a.wA)({components:{PolkaswapLogo:i.default}})],c);var d=c,l=(0,o(1001).Z)(d,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("s-button",e._g({class:["app-logo",{responsive:e.responsive}],attrs:{type:"link",size:"large"}},e.$listeners),[o("polkaswap-logo",{staticClass:"app-logo__image",attrs:{theme:e.theme}})],1)}),[],!1,null,"21d3b320",null).exports},75673:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return u}});var s=o(77057),n=o(70655),a=o(53545),r=o(8755),i=o(32806),c=o(16546);let d=class extends((0,a.Wr)(i.Z,r.tA.LoadingMixin)){constructor(...e){super(...e),(0,s.Z)(this,"SocialNetworkLinks",c.DM),(0,s.Z)(this,"app",c.l2),(0,s.Z)(this,"specVersion",null)}created(){this.withApi((()=>{this.specVersion=r.hi.system.specVersion}))}get textLinks(){return[{title:this.t("footerMenu.privacy"),href:c.yX.privacy},{title:this.t("releaseNotesText"),href:c.yX.releaseNotes},{title:this.t("helpDialog.termsOfService"),href:c.yX.terms}]}get sortedTextLinks(){return this.textLinks.sort(((e,t)=>{const o=e.title.toUpperCase(),s=t.title.toUpperCase();return o<s?-1:o>s?1:0}))}};d=(0,n.__decorate)([a.wA],d);var l=d,u=(0,o(1001).Z)(l,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("el-popover",{attrs:{"visible-arrow":!1,placement:"top-start","popper-class":"app-info-popper",trigger:"click"},scopedSlots:e._u([{key:"reference",fn:function(){return[e._t("default")]},proxy:!0}],null,!0)},[o("div",{staticClass:"app-info"},[o("div",e._l(e.SocialNetworkLinks,(function(t){return o("a",{key:t.title,staticClass:"app-info-link app-info-link--social",attrs:{target:"_blank",rel:"nofollow noopener",href:t.href}},[o("s-icon",{attrs:{name:t.icon,size:"20"}}),o("span",[e._v(e._s(e.t("social."+t.title)))])],1)})),0),o("s-divider"),o("div",e._l(e.sortedTextLinks,(function(t,s){return o("a",{key:s,staticClass:"app-info-link app-info-link--text",attrs:{target:"_blank",rel:"nofollow noopener",href:t.href}},[o("span",[e._v(e._s(t.title))])])})),0),o("div",{staticClass:"app-info__versions"},[o("div",[e._v(e._s(e.app.name)+" v"+e._s(e.app.version))]),e.specVersion?o("div",[e._v(e._s(e.TranslationConsts.Sora)+" v"+e._s(e.specVersion))]):e._e()])],1)])}),[],!1,null,"b5b36686",null).exports},20366:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return f}});var s=o(77057),n=o(70655),a=o(53545),r=o(72305),i=o(32806),c=o(28729),d=o(75673),l=o(16546),u=o(74614),p=o(52859);let m=class extends((0,a.Wr)(i.Z)){constructor(...e){super(...e),(0,s.Z)(this,"visible",void 0),(0,s.Z)(this,"isAboutPageOpened",void 0),(0,s.Z)(this,"onSelect",void 0),(0,s.Z)(this,"faucetUrl",void 0),(0,s.Z)(this,"pageLoading",void 0),(0,s.Z)(this,"soraCardEnabled",void 0),(0,s.Z)(this,"libraryTheme",void 0),(0,s.Z)(this,"SidebarMenuGroups",l.by),(0,s.Z)(this,"FaucetLink",l.XQ)}get mainMenuActiveColor(){return this.libraryTheme===r.Z.LIGHT?"var(--s-color-theme-accent)":"var(--s-color-theme-accent-focused)"}get sidebarMenuItems(){return this.soraCardEnabled?l.by:l.by.filter((e=>e.title!==l.sn.SoraCard))}get currentPath(){const e=this.$route.name;return l.id.includes(e)?l.sn.Pool:l.ju.includes(e)?l.sn.Bridge:l.Bq.includes(e)?l.sn.Rewards:l.CX.includes(e)?p.p.Staking:l.cj.includes(e)?l.sn.ExploreFarming:e}openSoraDownloadDialog(){this.$emit("open-download-dialog")}preventAnchorNavigation(e){e?.preventDefault()}};(0,n.__decorate)([(0,a.fI)({default:!1,type:Boolean})],m.prototype,"visible",void 0),(0,n.__decorate)([(0,a.fI)({default:!1,type:Boolean})],m.prototype,"isAboutPageOpened",void 0),(0,n.__decorate)([(0,a.fI)({default:()=>{},type:Function})],m.prototype,"onSelect",void 0),(0,n.__decorate)([u.SB.settings.faucetUrl],m.prototype,"faucetUrl",void 0),(0,n.__decorate)([u.SB.router.loading],m.prototype,"pageLoading",void 0),(0,n.__decorate)([u.Yn.settings.soraCardEnabled],m.prototype,"soraCardEnabled",void 0),(0,n.__decorate)([u.Yn.libraryTheme],m.prototype,"libraryTheme",void 0),m=(0,n.__decorate)([(0,a.wA)({components:{AppInfoPopper:d.default,AppSidebarItemContent:c.default}})],m);var h=m,g=(0,o(1001).Z)(h,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("s-scrollbar",{staticClass:"app-menu app-sidebar-scrollbar",class:{visible:e.visible,"app-menu__about":e.isAboutPageOpened,"app-menu__loading":e.pageLoading}},[o("aside",{staticClass:"app-sidebar"},[e._t("head"),o("div",{staticClass:"app-sidebar-menu"},[o("s-menu",{staticClass:"menu",attrs:{mode:"vertical","background-color":"transparent","box-shadow":"none","text-color":"var(--s-color-base-content-primary)","active-text-color":e.mainMenuActiveColor,"active-hover-color":"transparent","default-active":e.currentPath},on:{select:e.onSelect}},e._l(e.sidebarMenuItems,(function(t,s){return o("s-menu-item-group",{key:s},[o("s-menu-item",{directives:[{name:"button",rawName:"v-button"}],key:t.title,staticClass:"menu-item",attrs:{index:t.index||t.title,disabled:t.disabled,tabindex:"0"}},[o("app-sidebar-item-content",{attrs:{tag:"a",rel:"nofollow noopener",tabindex:"-1",href:t.href,icon:t.icon,title:e.t("mainMenu."+t.title)},nativeOn:{click:function(t){return e.preventAnchorNavigation.apply(null,arguments)}}})],1)],1)})),1),o("s-menu",{staticClass:"menu",attrs:{mode:"vertical","background-color":"transparent","box-shadow":"none","text-color":"var(--s-color-base-content-tertiary)","active-text-color":"var(--s-color-base-content-tertiary)","active-hover-color":"transparent"}},[e._e(),o("app-sidebar-item-content",{directives:[{name:"button",rawName:"v-button"}],staticClass:"el-menu-item menu-item--small",attrs:{icon:"symbols-24",title:e.t("mobilePopup.sideMenu"),tabindex:"0"},nativeOn:{click:function(t){return e.openSoraDownloadDialog.apply(null,arguments)}}}),o("app-info-popper",[o("app-sidebar-item-content",{directives:[{name:"button",rawName:"v-button"}],staticClass:"el-menu-item menu-item--small",attrs:{icon:"info-16",title:e.t("footerMenu.info"),tabindex:"0"}})],1),e.faucetUrl?o("app-sidebar-item-content",{staticClass:"el-menu-item menu-item--small",attrs:{icon:e.FaucetLink.icon,title:e.t("footerMenu."+e.FaucetLink.title),href:e.faucetUrl,tag:"a",target:"_blank",rel:"nofollow noopener"}}):e._e()],1)],1)],2)])}),[],!1,null,"558d882f",null),f=g.exports},28729:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return u}});var s=o(77057),n=o(70655),a=o(53545),r=o(32806),i=o(45605),c=o.n(i);let d=class extends((0,a.Wr)(r.Z)){constructor(...e){super(...e),(0,s.Z)(this,"icon",void 0),(0,s.Z)(this,"title",void 0),(0,s.Z)(this,"tag",void 0),(0,s.Z)(this,"tabindex",void 0)}get classes(){const e="sidebar-item-content",t=[e];return"a"===this.tag&&t.push(`${e}--link`),t}};(0,n.__decorate)([(0,a.fI)({default:"",type:String})],d.prototype,"icon",void 0),(0,n.__decorate)([(0,a.fI)({default:"",type:String})],d.prototype,"title",void 0),(0,n.__decorate)([(0,a.fI)({default:"div",type:String})],d.prototype,"tag",void 0),(0,n.__decorate)([(0,a.fI)()],d.prototype,"tabindex",void 0),d=(0,n.__decorate)([(0,a.wA)({components:{SideMenuCard:c()}})],d);var l=d,u=(0,o(1001).Z)(l,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o(e.tag,{tag:"component",class:e.classes,attrs:{tabindex:e.tabindex}},["sora-card"===e.icon?o("div",{staticClass:"icon-container"},[o("side-menu-card",{staticClass:"sora-card-sidebar-icon"})],1):e.icon?o("div",{staticClass:"icon-container"},[o("s-icon",{attrs:{name:e.icon,size:"28"}})],1):e._e(),o("span",[e._v(e._s(e.title))])])}),[],!1,null,"4cec47d6",null).exports},22041:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return d}});var s=o(77057),n=o(70655),a=o(53545),r=o(72305);let i=class extends a.w3{constructor(...e){super(...e),(0,s.Z)(this,"theme",void 0)}get textColor(){return this.theme===r.Z.DARK?"var(--s-color-base-content-primary)":"#0D0248"}};(0,n.__decorate)([(0,a.fI)({default:r.Z.LIGHT,type:String})],i.prototype,"theme",void 0),i=(0,n.__decorate)([a.wA],i);var c=i,d=(0,o(1001).Z)(c,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("svg",{attrs:{width:"172",height:"46",viewBox:"0 0 172 46",fill:"none",xmlns:"http://www.w3.org/2000/svg"}},[o("path",{attrs:{d:"M22.8742 38.551C21.7043 38.551 20.6971 38.282 19.8703 37.7439C19.039 37.2059 18.4233 36.4296 18.0362 35.4417C17.6536 34.4715 17.5216 33.2454 17.6448 31.8032C17.7107 30.9961 17.8955 30.1317 18.1945 29.2364C18.498 28.3366 18.9642 27.4722 19.5756 26.6739C20.1913 25.8757 20.9786 25.1832 21.9154 24.6187C22.8655 24.0498 23.9518 23.7366 25.1481 23.6925C25.2361 23.6881 25.3197 23.6881 25.4032 23.6881C26.6875 23.6881 27.7387 24.0277 28.5347 24.7025C29.3748 25.4126 29.9334 26.3608 30.1973 27.5207C30.5447 29.0555 30.3952 30.3566 30.2501 31.2034C30.0829 32.1737 29.6563 33.4041 29.0757 34.5817C28.8998 34.9478 28.5655 35.4153 28.2972 35.7946L28.1257 36.0371C27.3604 37.0074 26.3664 37.7307 25.2493 38.1409C24.1497 38.551 23.1909 38.551 22.8742 38.551ZM25.3021 26.18C25.2493 26.18 25.1921 26.18 25.1349 26.1844C24.6159 26.2064 24.053 26.4446 23.4592 26.8945C22.8567 27.3531 22.3069 28.0764 21.8363 29.0511C21.3569 30.0302 21.0754 31.0226 20.9918 31.9972C20.9038 33.36 21.0534 34.4141 21.4404 35.1198C21.8055 35.7813 22.3421 36.0989 23.0898 36.0989C23.7143 36.0989 24.1541 35.8607 24.4444 35.7019C24.8886 35.4594 25.2757 35.1242 25.5923 34.7096C25.8167 34.4759 25.9882 34.2333 26.1245 33.9731C26.34 33.5453 26.45 33.263 26.5072 33.0866C26.7403 32.4118 26.9778 31.3489 27.1361 30.2419C27.2417 29.501 27.2417 28.8438 27.1405 28.1073C27.0613 27.534 26.8458 27.0488 26.4984 26.6651C26.1993 26.3388 25.8079 26.18 25.3021 26.18Z",fill:e.textColor}}),o("path",{attrs:{d:"M7.99505 20.2744C8.25455 20.2788 8.90988 20.345 9.24414 20.764C9.61359 21.2271 9.53442 21.9459 9.50364 22.1929C9.47285 22.4399 9.40248 22.7089 9.30572 23.0838C9.22655 23.3925 8.92747 25.0861 8.8571 25.4919C8.76034 26.0696 8.89228 26.5459 9.28812 27.0267C9.67077 27.4853 10.2997 27.7191 10.8671 27.7367C10.9638 27.7411 11.0342 27.7411 11.1046 27.7411C11.8831 27.7411 12.6264 27.6926 13.3257 27.4589C14.113 27.1943 14.8387 26.7841 15.3357 26.0167C15.8327 25.2493 16.2593 24.0056 16.2945 22.7619C16.3253 21.699 15.7755 20.4905 15.2873 19.6746C14.7991 18.8587 13.915 18.1795 12.987 17.6547C12.0546 17.1298 10.9638 16.8299 9.73674 16.7682C9.57841 16.7594 9.42447 16.755 9.27053 16.755C7.72236 16.755 6.31053 17.1431 5.07024 17.9149C3.72438 18.7484 2.98988 19.8157 2.73039 21.0374C2.47089 22.2591 2.98109 23.6395 3.9399 24.7862C4.11583 25.0508 4.12902 25.3375 3.99268 25.6594C3.86953 25.9549 3.61003 26.1975 3.22299 26.3739C3.02507 26.4666 2.83155 26.5107 2.65562 26.5107C2.4577 26.5107 2.27297 26.4577 2.11024 26.3475C1.37574 25.7829 0.927122 25.0464 0.579663 24.3937C0.197018 23.6704 0.0958583 22.8236 0.0254869 22.0209C-0.0712738 20.9007 0.104654 19.9569 0.601652 18.9601C1.08106 17.9987 1.42852 17.3195 2.49288 16.4065C3.36373 15.6612 4.28296 15.0525 5.50566 14.6909C6.65359 14.3469 7.8719 14.1749 9.12979 14.1749H9.3585C10.2645 14.1969 11.2629 14.3425 12.3405 14.6027C13.4268 14.8673 14.4164 15.2863 15.2873 15.842C16.1581 16.3977 16.8047 17.0681 17.3676 17.7517C17.935 18.4397 18.4672 19.2865 18.7443 20.1774C19.0214 21.0595 19.2545 22.1665 19.2061 23.15C19.1357 24.6142 18.7795 25.8182 18.1373 26.8855C17.4952 27.9573 16.4924 28.8658 15.45 29.4347C14.412 30.0037 13.2025 30.3036 11.8611 30.3256H11.6851C11.0826 30.3256 10.4712 30.2727 9.85989 30.1712C9.74994 30.1536 9.63558 30.1448 9.52563 30.1448C8.90988 30.1448 8.32931 30.4756 8.02144 30.9563C7.84551 31.2341 7.70037 31.5296 7.70037 31.6619L6.82072 37.0514C6.81633 37.1661 6.75475 37.9996 6.08183 38.3745C5.73877 38.5641 5.4001 38.5465 5.33413 38.5421C4.84153 38.5112 4.40611 38.2157 4.1686 37.8894C3.78156 37.3601 3.88272 36.6986 3.9223 36.4516L6.3853 22.1576C6.50405 21.205 7.1418 20.2656 7.99505 20.2744Z",fill:e.textColor}}),o("path",{attrs:{d:"M120.387 46.0002C120.022 46.0002 119.705 45.8635 119.472 45.6077C119.151 45.2505 119.024 44.6859 119.103 44.0156C119.604 40.5049 119.758 39.9448 120.286 36.4959C120.295 36.4297 120.281 36.3724 120.237 36.3239C120.193 36.271 120.123 36.2401 120.062 36.2401C120.013 36.2401 119.965 36.2622 119.93 36.3018C118.768 37.55 117.511 38.1851 116.191 38.1851C115.782 38.1851 115.342 38.0484 114.885 37.7705C114.41 37.4882 114.032 36.9766 113.759 36.2489C113.68 36.0416 113.618 35.8167 113.574 35.5874C113.548 35.4551 113.438 35.3933 113.35 35.3933C113.306 35.3933 113.244 35.4065 113.196 35.4815C112.629 36.3856 112.07 37.0516 111.533 37.4574C110.729 38.0704 109.849 38.3924 108.93 38.4188H108.798C107.993 38.4188 107.272 38.2071 106.66 37.7925C106.018 37.3559 105.499 36.6811 105.125 35.7858C105.002 35.4992 104.91 35.1816 104.839 34.8464C104.813 34.7229 104.712 34.6568 104.624 34.6568C104.584 34.6568 104.545 34.67 104.509 34.6965C104.259 34.8949 103.99 35.067 103.709 35.2081C103.252 35.4374 102.821 35.6359 102.398 35.8255C101.488 36.2401 100.63 36.6282 99.6098 37.3118L99.5394 37.3603C98.695 37.9249 97.9693 38.4144 96.0473 38.4144H95.9153C94.8817 38.3879 94.0637 38.0042 93.4787 37.2721C93.1576 36.8708 92.9289 36.3945 92.7926 35.8608C92.7618 35.7329 92.6562 35.68 92.5727 35.68C92.5155 35.68 92.4715 35.702 92.4319 35.7505C92.1856 36.0637 91.9173 36.368 91.6271 36.6459C91.0157 37.2412 90.3252 37.6867 89.5731 37.9778C88.8738 38.2468 88.1789 38.3835 87.5015 38.3835C87.4488 38.3835 87.3916 38.3835 87.3388 38.3791C86.2569 38.3306 85.4168 37.9072 84.8406 37.1266C84.37 36.4871 84.1193 35.6359 84.0929 34.595C83.7411 34.9258 83.376 35.1772 82.9274 35.4903L82.6987 35.6491C82.0565 36.099 81.3484 36.4077 80.6623 36.7032C80.3369 36.8443 80.0026 36.9899 79.6727 37.1486C79.6156 37.1795 79.5496 37.2192 79.4616 37.2765C79.2725 37.3956 78.9822 37.5809 78.4544 37.8499C77.6715 38.2512 76.8271 38.4541 75.943 38.4541H75.7935C75.2701 38.4541 74.7247 38.3306 74.1794 38.0924C73.6252 37.8499 73.1502 37.5015 72.7587 37.0516C72.3673 36.6018 72.0858 36.0505 71.9231 35.411C71.7603 34.7847 71.7295 34.0967 71.8307 33.369C71.9055 33.0955 72.0682 32.8926 72.3145 32.7251C72.508 32.5972 72.7367 32.531 73.0006 32.531C73.0842 32.531 73.1722 32.5354 73.2601 32.5486C73.3305 32.5575 73.3965 32.5707 73.4581 32.5883C73.8231 32.6898 74.0738 33.0558 74.043 33.4439C73.9814 34.1805 74.109 34.7759 74.4257 35.2169C74.7643 35.6844 75.2041 35.9137 75.7803 35.9137C76.2289 35.9137 76.5324 35.7197 76.7523 35.5741C76.8315 35.5212 76.8843 35.4903 76.9326 35.4639C77.0998 35.3624 77.1262 35.3492 77.456 34.8729C77.8695 34.2731 77.8079 33.2675 77.7595 32.8618L77.7287 32.6016C77.6891 32.2531 77.6759 32.1473 77.6012 31.7768C77.4472 31.0579 77.2581 30.6301 76.8799 29.7833C76.7699 29.5408 76.6512 29.2629 76.5104 28.9366C75.8683 27.4459 75.4812 26.4182 75.3317 25.7876C75.3009 25.6508 75.2701 25.5229 75.2437 25.4039C75.2173 25.2848 75.1162 25.223 75.0238 25.223C74.9666 25.223 74.9183 25.2451 74.8875 25.2936C74.5312 25.7743 74.1662 26.3433 73.8099 26.9916C73.3525 27.8207 72.7983 29.0733 72.1694 30.7183C72.165 30.7492 72.1562 30.7845 72.143 30.8242C72.011 31.1903 71.8703 31.5475 71.7296 31.8915L71.668 32.0591C71.6592 32.0767 71.646 32.1076 71.6284 32.1297C70.8763 33.9158 70.0362 35.3227 69.1214 36.3018C67.9603 37.55 66.7024 38.1807 65.3829 38.1807C64.9739 38.1807 64.5341 38.0439 64.0767 37.7661C63.6017 37.4838 63.2234 36.9722 62.9507 36.2445C62.8716 36.0372 62.81 35.8123 62.766 35.583C62.7396 35.4506 62.6297 35.3889 62.5417 35.3889C62.4977 35.3889 62.4361 35.4021 62.3877 35.4771C61.8204 36.3812 61.2618 37.0472 60.7252 37.453C59.9203 38.066 59.0451 38.3879 58.1215 38.4144H57.9895C57.1847 38.4144 56.4634 38.2027 55.852 37.7881C55.2099 37.3515 54.6909 36.6767 54.317 35.7814C54.2203 35.5477 54.1367 35.3007 54.0751 35.0361C53.3626 36.0725 52.5797 36.8884 51.7573 37.4706C50.8424 38.1145 49.888 38.4409 48.9204 38.4409C47.9088 38.4409 47.0512 38.1145 46.3651 37.4706C45.2303 36.3989 44.5926 34.5024 44.4167 31.6798C44.3991 31.3755 44.5618 31.1065 44.8389 30.9918C45.7757 30.6037 46.5806 30.1582 47.2403 29.6731C47.9616 29.1438 48.4982 28.6146 48.8369 28.103C49.1623 27.6134 49.3207 27.1768 49.3075 26.8064C49.2943 26.4844 49.1711 26.2639 48.9116 26.1139C48.7225 25.9993 48.5202 25.9419 48.2783 25.9419C48.0804 25.9419 47.8561 25.9816 47.6186 26.0566C47.0424 26.2374 46.4442 26.5903 45.8373 27.1063C45.2259 27.6267 44.6761 28.275 44.2143 29.0336C43.7525 29.7878 43.4446 30.586 43.3039 31.4019C42.9081 33.7659 42.609 35.7682 42.4155 37.3515C42.3671 37.6073 42.1912 37.8058 41.8745 37.9778C41.593 38.1321 41.2104 38.2115 40.7441 38.2115C40.2647 38.2115 39.8909 38.1321 39.605 37.969C39.4335 37.8719 39.3059 37.744 39.2268 37.5941C39.1256 37.6647 39.02 37.7264 38.9189 37.7881C38.1536 38.238 37.274 38.4629 36.3019 38.4629C36.0249 38.4629 35.739 38.4453 35.4487 38.41C33.6102 38.1939 32.3655 37.0781 31.7498 35.0978C31.1604 33.2014 31.1868 30.2773 31.8158 26.4138C32.2072 23.9396 32.7966 21.633 33.5707 19.5601C34.3535 17.4608 35.2904 15.9745 36.3459 15.141C36.8781 14.7132 37.4499 14.4397 38.0524 14.3339C38.2284 14.303 38.4131 14.2854 38.589 14.2854C39.0288 14.2854 39.4731 14.3824 39.9129 14.572C40.5462 14.8455 41.0564 15.3483 41.4259 16.0627C41.7821 16.7508 41.98 17.5137 42.0152 18.3385C42.0504 19.15 41.9361 20.0276 41.6722 20.9494C41.3071 22.246 40.7309 23.525 39.9525 24.7511C39.174 25.9772 38.2767 27.0269 37.2828 27.8693C36.3635 28.6499 35.4751 29.2938 34.6438 29.7789C34.6086 29.7966 34.5691 29.8363 34.5603 29.9024C34.4723 30.6831 34.4283 31.5431 34.4283 32.4604C34.4283 33.4219 34.591 34.2554 34.9121 34.9302C35.2068 35.5477 35.651 35.8785 36.2624 35.9358C36.3723 35.949 36.4735 35.9578 36.5746 35.9578C36.9529 35.9578 37.3575 35.8652 37.771 35.6888C38.3075 35.4595 38.8529 35.0273 39.3983 34.4054C39.4599 34.3348 39.517 34.2599 39.5786 34.1893L39.6006 34.1628C39.8249 32.7912 40.0712 31.3402 40.3351 29.8495C40.8057 27.1812 41.4215 24.0499 42.1604 20.5437C42.9037 17.0154 43.3083 14.9822 43.3743 14.6911C43.3787 14.6779 43.3831 14.6602 43.3875 14.647C43.5106 14.3471 43.9109 14.2633 44.2011 14.228C44.2803 14.2192 44.3595 14.2148 44.443 14.2148C44.7861 14.2148 45.1731 14.2986 45.5998 14.4662C46.3783 14.7705 46.5146 15.1895 46.497 15.4894C46.4882 15.5776 46.4618 15.8687 46.3387 16.4112C46.2507 16.8037 45.8901 18.4311 45.2523 21.2934C44.9136 22.8238 44.6366 24.1204 44.4298 25.1392C44.4167 25.2054 44.4298 25.2583 44.4694 25.3068C44.5134 25.3598 44.5794 25.3906 44.641 25.3906C44.6893 25.3906 44.7333 25.373 44.7685 25.3333C44.8389 25.2583 44.9093 25.1878 44.984 25.1128C45.5822 24.5218 46.3123 24.0367 47.1567 23.6794C47.8209 23.3972 48.4674 23.256 49.0788 23.256C49.2591 23.256 49.4394 23.2692 49.6153 23.2913C50.3982 23.4016 51.0052 23.6485 51.4142 24.0278C51.8188 24.4027 52.1223 24.9055 52.3246 25.5229C52.527 26.1492 52.4874 26.9343 52.2147 27.856C51.942 28.7734 51.3306 29.651 50.3938 30.467C49.545 31.2035 48.5422 31.7945 47.4074 32.2179C47.3283 32.2487 47.2755 32.3237 47.2843 32.4075C47.3635 33.4219 47.579 34.2687 47.922 34.9214C48.2695 35.583 48.7489 35.9181 49.3778 35.9358C50.3191 35.9358 51.2647 35.4242 52.1839 34.4186C52.936 33.5939 53.6045 32.456 54.1719 31.0359C54.5457 29.457 55.289 27.9751 56.3798 26.6167C57.8268 24.8129 59.5333 23.7235 61.4597 23.3795C61.9303 23.3001 62.4273 23.2516 62.9419 23.2604C64.3538 23.2825 65.2334 23.7456 65.6908 24.1646C65.704 24.1734 65.7128 24.1866 65.726 24.1998C65.9327 24.46 65.9063 24.8129 65.6512 25.2407C65.4313 25.6112 65.1894 25.8537 64.9211 25.9904C64.7584 26.0698 64.6132 26.1095 64.4769 26.1095C64.3406 26.1095 64.2306 26.0345 64.1074 25.9904C63.351 25.7214 62.656 25.7964 62.4141 25.8405C62.0183 25.9022 61.5565 26.0875 61.0287 26.383C60.5009 26.6829 59.9687 27.1548 59.4453 27.7899C58.9176 28.4294 58.4733 29.1527 58.1303 29.9377C57.6377 31.0271 57.3826 32.1649 57.365 33.3205C57.3474 34.4319 57.5541 35.2037 57.9763 35.6094C58.1435 35.7726 58.3414 35.852 58.5833 35.852C58.6976 35.852 58.8208 35.8344 58.9527 35.7991C59.4146 35.68 59.9555 35.2566 60.5581 34.5465C61.1782 33.8144 61.794 32.7824 62.379 31.4725C62.9683 30.1626 63.3817 28.9454 63.6192 27.3621C63.6236 27.34 63.628 27.3224 63.6368 27.3003C63.7336 27.0666 63.9799 26.7887 64.6088 26.7887C64.666 26.7887 64.7232 26.7887 64.7804 26.7931C65.3126 26.8284 65.7524 26.9607 66.0779 27.1812C66.2098 27.2694 66.3154 27.3576 66.4033 27.4414C66.5924 27.6311 66.676 27.9045 66.6276 28.1603C66.113 30.8992 65.8271 32.2708 65.77 32.7251C65.7128 33.1837 65.6776 33.5057 65.6732 33.6777C65.6116 34.4319 65.6424 34.992 65.7612 35.3404C65.8535 35.6138 65.9943 35.7241 66.2494 35.7241C66.61 35.7241 67.0323 35.5124 67.5161 35.0934C68.0263 34.6524 68.5716 33.9688 69.1346 33.0602C69.5041 32.4648 69.8427 31.7857 70.1418 31.0447C71.5316 27.0004 73.0402 24.1954 74.628 22.7224C75.0942 22.2902 75.5824 22.0123 76.0794 21.8888C76.2905 21.8359 76.4928 21.8094 76.6819 21.8094C76.959 21.8094 77.2185 21.8668 77.4472 21.977C77.8563 22.1755 78.1246 22.4974 78.2169 22.912C78.2961 23.2648 78.2257 23.6309 78.0014 23.997C77.9838 24.0278 77.9618 24.0764 77.9662 24.1249C78.0234 24.4556 78.107 24.8305 78.2169 25.2407C78.3445 25.7214 78.4896 26.1757 78.6479 26.5947C78.8063 27.0181 79.2725 28.1118 80.0334 29.8451C80.6227 31.1903 80.8822 32.6898 80.7679 34.0658C80.7635 34.1364 80.7943 34.1893 80.8207 34.2158C80.8646 34.2643 80.9262 34.2907 80.9834 34.2907C81.0098 34.2907 81.0406 34.2863 81.067 34.2731C82.4524 33.6556 83.8422 31.9841 84.6119 30.0171C84.7834 29.1394 85.0078 28.1647 85.276 27.0842C85.6543 25.5803 85.8874 24.6321 85.9666 24.2616C85.9798 24.2042 85.9974 24.1293 86.0457 24.0543C86.1909 23.825 86.4504 23.6618 86.8374 23.5515C87.0001 23.5074 87.1761 23.481 87.3652 23.481C87.6423 23.481 87.9546 23.5339 88.28 23.6397C89.1465 23.9132 89.208 24.363 89.1685 24.61C88.2712 28.1295 87.6951 30.9874 87.462 33.1176C87.2904 34.4936 87.418 35.0758 87.5499 35.3227C87.7259 35.6491 87.9853 35.8167 88.3636 35.852C88.3812 35.852 88.4384 35.852 88.4384 35.852C89.0805 35.852 89.8194 35.4242 90.6419 34.5774C91.5215 33.6689 92.1944 32.3899 92.6431 30.7757L94.1824 24.2175C94.1868 24.2042 94.1912 24.191 94.1956 24.1778C94.2704 23.9881 94.4287 23.8294 94.6706 23.6882C94.9037 23.5515 95.2072 23.4854 95.5942 23.4854C95.9637 23.4854 96.3288 23.5559 96.685 23.6882C97.2832 23.9132 97.3711 24.3101 97.3667 24.5262C97.3667 24.5527 97.3623 24.5747 97.3579 24.5968C97.3227 24.7203 97.16 25.3289 96.5927 27.5208C96.1352 29.2717 95.8142 31.0271 95.6294 32.7383C95.4931 33.8894 95.4975 34.7229 95.6426 35.2213C95.7966 35.7417 96.078 35.8079 96.3331 35.8079C96.7642 35.8079 97.2084 35.6624 97.6658 35.3757C98.0836 35.1111 98.4487 34.7715 98.7478 34.3613C98.8577 34.1937 98.9325 34.079 99.0073 33.9688C99.1524 33.7571 99.3019 33.5366 99.7726 32.7603C100.459 31.6269 101.004 30.0083 101.22 28.9807C101.514 27.5782 101.734 25.2274 101.765 24.1601C101.778 23.6618 102.429 23.5162 102.64 23.4677C102.834 23.4236 103.032 23.4016 103.225 23.4016C103.529 23.4016 103.832 23.4545 104.131 23.5603C104.83 23.8117 105.006 24.2219 105.033 24.5262C105.09 25.4656 105.015 26.4844 104.817 27.5605C104.399 29.8407 104.294 30.242 103.797 31.4813C103.683 31.768 103.542 32.0767 103.383 32.3987C103.348 32.4693 103.353 32.5354 103.392 32.5971C103.436 32.6633 103.511 32.7074 103.581 32.7074C103.625 32.7074 103.669 32.6898 103.709 32.6545C103.911 32.4737 104.092 32.2752 104.25 32.0635C104.597 31.596 104.826 31.0447 105.028 30.5552C105.121 30.3346 105.204 30.1362 105.288 29.9642C105.701 28.7778 106.343 27.6399 107.192 26.577C108.639 24.7732 110.346 23.6838 112.272 23.3398C112.743 23.2604 113.24 23.1855 113.754 23.2207C115.193 23.3178 116.112 23.4721 116.569 23.8955C116.583 23.9043 116.591 23.9176 116.6 23.9308C116.807 24.191 116.785 24.5438 116.525 24.9716C116.301 25.3421 116.064 25.5891 115.795 25.7214C115.632 25.8008 115.487 25.8537 115.351 25.8405C114.938 25.8008 114.7 25.7567 113.974 25.7346C113.715 25.7346 113.46 25.7567 113.222 25.8052C112.826 25.867 112.365 26.0522 111.837 26.3477C111.309 26.6476 110.777 27.1195 110.254 27.7546C109.721 28.3985 109.281 29.1218 108.938 29.9024C108.446 30.9918 108.191 32.1297 108.173 33.2852C108.156 34.3966 108.362 35.1684 108.785 35.5741C108.952 35.7373 109.15 35.8167 109.391 35.8167C109.506 35.8167 109.629 35.7991 109.761 35.7638C110.223 35.6447 110.764 35.2213 111.366 34.5112C111.986 33.7791 112.602 32.7471 113.187 31.4372C113.776 30.1273 114.19 28.9101 114.427 27.3268C114.432 27.3047 114.436 27.2871 114.445 27.265C114.542 27.0313 114.788 26.7534 115.417 26.7534C115.47 26.7534 115.531 26.7534 115.589 26.7578C116.121 26.7931 116.561 26.9254 116.886 27.146C117.018 27.2342 117.123 27.318 117.211 27.4062C117.401 27.5958 117.484 27.8693 117.44 28.1206C116.926 30.8595 116.635 32.2311 116.578 32.6854C116.521 33.144 116.486 33.466 116.481 33.638C116.42 34.3922 116.446 34.9479 116.569 35.3051C116.662 35.5741 116.802 35.6888 117.058 35.6888C117.418 35.6888 117.845 35.4771 118.324 35.0581C118.834 34.6171 119.38 33.9335 119.943 33.025C120.471 32.1782 120.915 31.2035 121.271 30.1318C121.592 28.1074 121.918 26.0786 122.252 24.0102C122.327 23.6618 122.643 23.4501 123.193 23.3663C123.321 23.3486 123.448 23.3354 123.576 23.3354C123.936 23.3354 124.293 23.4148 124.631 23.5736C125.282 23.8779 125.423 24.3013 125.427 24.6012C125.427 24.6232 125.423 24.6453 125.419 24.6673L125.357 24.9364C125.841 24.5306 126.36 24.266 126.997 24.0543C128.264 23.6265 129.179 23.7676 129.993 23.9617C130.806 24.1557 131.334 24.3851 132.108 24.9628C132.997 25.6244 133.568 26.4491 133.819 27.3003C134.096 28.2441 134.074 28.7822 133.999 29.7348C133.898 30.9918 133.643 31.9753 133.498 32.4516C133.318 33.047 132.983 33.96 132.632 34.573C132.333 35.0934 132.183 35.2698 131.932 35.5609L131.77 35.755C131.057 36.5973 130.301 37.228 129.518 37.6338C129.034 37.8852 128.225 38.2997 127.037 38.3527C126.949 38.3571 126.861 38.3571 126.778 38.3571C126.056 38.3571 125.357 38.2248 124.702 37.9601C124.262 37.7837 123.853 37.55 123.497 37.2721C123.457 37.2413 123.413 37.228 123.369 37.228C123.294 37.228 123.206 37.2765 123.193 37.3824C123.03 38.5644 122.876 39.6758 122.56 41.828C122.375 43.085 122.071 44.4389 122.067 44.4742C121.869 45.5195 121.319 46.0002 120.387 46.0002ZM126.606 26.7314C125.797 27.071 124.979 27.5164 124.798 28.1647C124.79 28.1956 124.768 28.2177 124.763 28.2485C124.407 30.2508 124.046 32.4031 123.694 34.6436C123.686 34.7097 123.699 34.7715 123.738 34.8156C124.112 35.239 124.618 35.5521 125.234 35.755C125.454 35.8255 125.678 35.874 125.902 35.9005C126.021 35.9137 126.135 35.9181 126.245 35.9181C126.769 35.9181 127.169 35.7858 127.358 35.7197C128.247 35.4198 128.576 35.1463 129.06 34.5201C129.557 33.8806 129.76 33.6115 130.006 32.9676C130.208 32.4384 130.468 31.6974 130.63 30.8639C130.864 29.6863 130.89 29.1835 130.85 28.7072C130.789 27.9927 130.648 27.5693 130.107 27.0798C129.073 26.1448 127.468 26.3697 126.606 26.7314ZM38.6858 16.9977C38.2987 16.9977 37.4807 17.5623 36.3547 21.3375C35.8489 23.0708 35.4399 24.6717 35.1364 26.0875C35.1232 26.1536 35.1364 26.211 35.176 26.2595C35.22 26.3124 35.2904 26.3477 35.3563 26.3477C35.4047 26.3477 35.4443 26.33 35.4839 26.2903C35.8973 25.8449 36.2887 25.3509 36.6582 24.8217C37.3399 23.847 37.8721 22.8282 38.2416 21.7962C38.7342 20.4113 39.02 19.2117 39.086 18.2282C39.1388 17.4476 39.0025 17.1697 38.9189 17.0771C38.8881 17.0418 38.8397 17.0021 38.7342 16.9977H38.6858Z",fill:e.textColor}}),o("path",{attrs:{d:"M163.239 24.5436C164.625 25.9329 164.625 28.191 163.239 29.5803C161.854 30.9695 159.602 30.9695 158.217 29.5803C156.831 28.191 153.955 20.27 153.955 20.27C153.955 20.27 161.854 23.1544 163.239 24.5436Z",fill:"#ED145B"}}),o("path",{attrs:{d:"M151.879 20.27C151.879 20.27 149.002 28.1866 147.617 29.5803C146.231 30.9695 143.98 30.9695 142.594 29.5803C141.209 28.191 141.209 25.9329 142.594 24.5436C143.98 23.1544 151.879 20.27 151.879 20.27Z",fill:"#ED145B"}}),o("path",{attrs:{d:"M163.239 8.87815C164.625 10.2674 164.625 12.5255 163.239 13.9148C161.854 15.304 153.955 18.1884 153.955 18.1884C153.955 18.1884 156.831 10.2718 158.217 8.87815C159.606 7.48448 161.854 7.48448 163.239 8.87815Z",fill:"#ED145B"}}),o("path",{attrs:{d:"M147.617 8.87815C149.002 10.2674 151.879 18.1884 151.879 18.1884C151.879 18.1884 143.984 15.304 142.594 13.9148C141.209 12.5255 141.209 10.2674 142.594 8.87815C143.98 7.48448 146.231 7.48448 147.617 8.87815Z",fill:"#ED145B"}}),o("path",{attrs:{d:"M172.001 19.229C172.001 21.196 170.413 22.7881 168.451 22.7881C166.49 22.7881 154.958 19.229 154.958 19.229C154.958 19.229 166.49 15.6698 168.451 15.6698C170.413 15.6698 172.001 17.262 172.001 19.229Z",fill:"#ED145B"}}),o("path",{attrs:{d:"M150.696 19.229C150.696 19.229 139.164 22.7881 137.202 22.7881C135.24 22.7881 133.653 21.196 133.653 19.229C133.653 17.262 135.24 15.6698 137.202 15.6698C139.164 15.6698 150.696 19.229 150.696 19.229Z",fill:"#ED145B"}}),o("path",{attrs:{d:"M152.824 38.4583C150.862 38.4583 149.275 36.8662 149.275 34.8992C149.275 32.9322 152.824 21.3682 152.824 21.3682C152.824 21.3682 156.373 32.9322 156.373 34.8992C156.373 36.8662 154.786 38.4583 152.824 38.4583Z",fill:"#ED145B"}}),o("path",{attrs:{d:"M152.824 17.0901C152.824 17.0901 149.275 5.52618 149.275 3.55916C149.275 1.59214 150.862 0 152.824 0C154.786 0 156.373 1.59214 156.373 3.55916C156.373 5.52618 152.824 17.0901 152.824 17.0901Z",fill:"#ED145B"}})])}),[],!1,null,null,null).exports},26711:function(e,t,o){"use strict";o.r(t),o.d(t,{default:function(){return d}});var s=o(77057),n=o(70655),a=o(53545),r=o(72305);let i=class extends a.w3{constructor(...e){super(...e),(0,s.Z)(this,"theme",void 0)}get textColor(){return this.theme===r.Z.DARK?"var(--s-color-base-content-tertiary)":"#E3232C"}};(0,n.__decorate)([(0,a.fI)({default:r.Z.LIGHT,type:String})],i.prototype,"theme",void 0),i=(0,n.__decorate)([a.wA],i);var c=i,d=(0,o(1001).Z)(c,(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("svg",{attrs:{width:"174",height:"36",viewBox:"0 0 174 36",fill:"none",xmlns:"http://www.w3.org/2000/svg"}},[o("path",{attrs:{d:"M103.478 19.8651H105.913V18.7374H103.478V19.8651ZM151.13 24.0289L153.043 23.3349C152.348 21.6 151.565 19.9518 150.696 18.2169L148.87 18.9976C149.739 20.906 150.522 22.5542 151.13 24.0289ZM158.609 18.0434C158.522 19.6916 158.435 21.0795 158.087 22.2072C157.826 23.3349 157.304 24.2024 156.696 24.9831C156.087 25.7639 155.304 26.2843 154.348 26.7181C153.391 27.1518 152.174 27.412 150.696 27.5855L151.043 29.4072C153.304 29.147 155.13 28.5398 156.435 27.759C157.739 26.9783 158.783 25.7639 159.391 24.2024C160 22.641 160.435 20.6458 160.435 18.0434H158.609ZM162.348 23.6819H171.826C171.565 25.0699 170.783 26.1108 169.565 26.8048C168.348 27.4988 166.609 27.8458 164.522 28.0193L164.783 29.7542C167.913 29.5807 170.261 28.8867 171.739 27.6723C173.217 26.4578 174 24.6361 174 22.294V21.947H162.435L162.348 23.6819ZM173.043 19.8651V18.1301H163.391V19.8651H173.043ZM9.47826 33.8313C12 35.2193 14.9565 36 18.087 36C21.2174 36 24.087 35.2193 26.6957 33.8313L18.087 21.0795L9.47826 33.8313ZM7.04348 17.9566V15.0072H16.6087V11.9711H7.04348V9.02169H29.1304V11.9711H19.5652V15.0072H29.1304V17.9566H19.5652L29.1304 32.1831C33.3913 28.8867 36.087 23.7687 36.087 17.9566C36.087 8.06747 28 0 18.087 0C8.08696 0 0 8.06747 0 17.9566C0 23.7687 2.69565 28.8867 6.95652 32.1831L16.5217 17.9566H7.04348ZM54 30.3614C59.5652 30.3614 63.2174 27.412 63.2174 23.0747C63.2174 19.0843 60 16.8289 55.1304 16.3952L52.9565 16.2217C50.6087 16.0482 49.4783 14.747 49.4783 13.2723C49.4783 11.3639 50.8696 9.71566 53.8261 9.71566C56.7826 9.71566 58.1739 11.5373 58.1739 13.4458H62.1739C62.1739 9.02169 58.8696 6.15904 53.8261 6.15904C48.7826 6.15904 45.5652 8.93494 45.5652 13.2723C45.5652 17.0024 48.3478 19.5181 52.6087 19.8651L54.7826 20.0386C57.7391 20.2988 59.2174 21.4265 59.2174 23.0747C59.2174 25.1566 57.5652 26.8048 54 26.8048C50.087 26.8048 48.6957 24.8096 48.6957 22.9012H44.6957C44.6957 27.2386 48.087 30.3614 54 30.3614ZM78.9565 30.3614C87.2174 30.3614 91.0435 23.6819 91.0435 18.5639V17.8699C91.0435 12.3181 87.0435 6.15904 78.9565 6.15904C70.8696 6.15904 66.8696 12.3181 66.8696 17.8699V18.5639C66.8696 23.6819 70.6956 30.3614 78.9565 30.3614ZM78.9565 26.6313C74.0869 26.6313 70.9565 22.7277 70.9565 18.3036C70.9565 13.6193 74 9.9759 78.9565 9.9759C83.8261 9.9759 86.8696 13.6193 86.8696 18.3036C86.8696 22.7277 83.8261 26.6313 78.9565 26.6313ZM110.87 29.7542H115.652L109.391 21.253C112.174 20.212 113.826 18.0434 113.826 14.5735V14.053C113.826 9.02169 110.435 6.67952 105.043 6.67952H96.8696V29.7542H100.957V21.947H105.13H105.391L110.87 29.7542ZM100.783 10.1494H105.478C108.087 10.1494 109.739 11.8843 109.739 14.3133C109.739 16.8289 108.087 18.4771 105.478 18.4771H100.783V10.1494ZM136.174 29.7542H140.348L132.174 6.85301H125.478L117.478 29.7542H121.565L123.739 23.4217H134L136.174 29.7542ZM124.87 20.0386L128.174 10.3229H129.304L132.696 20.0386H124.87Z",fill:e.textColor}})])}),[],!1,null,null,null).exports},85994:function(e,t,o){var s={"./cs.js":[98507,4998],"./de.js":[80790,4998],"./en.js":[25054,4998],"./es.js":[67763,4998],"./fr.js":[96023,4998],"./hr.js":[96257,4998],"./hu.js":[68562,4998],"./hy-am.js":[38242,4998],"./id.js":[83783,4998],"./it.js":[15551,4998],"./nl.js":[99182,4998],"./pl.js":[81987,4998],"./ru.js":[70600,4998],"./sk.js":[35627,4998],"./sr.js":[50617,4998],"./sv.js":[91876,4998],"./vi.js":[37553,4998],"./yo.js":[14724,4998],"./zh-cn.js":[33852,4998]};function n(e){if(!o.o(s,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=s[e],n=t[0];return o.e(t[1]).then((function(){return o.t(n,23)}))}n.keys=function(){return Object.keys(s)},n.id=85994,e.exports=n},3457:function(e,t,o){var s={"./App/BrowserNotification/BrowserNotifsBlockedDialog.vue":[67661,7661],"./App/BrowserNotification/BrowserNotifsEnableDialog.vue":[37436,7436],"./App/Footer/AppFooter.vue":[14924],"./App/Footer/FooterPopper.vue":[75882],"./App/Footer/NoInternetDialog.vue":[75794],"./App/Footer/Node/NodeInfo.vue":[61243,3064,1243],"./App/Footer/Node/SelectNode.vue":[92065,2065],"./App/Footer/SelectNodeDialog.vue":[82583,4998,3064,2583],"./App/Footer/StatisticsDialog.vue":[52578,2578],"./App/Header/AppAccountButton.vue":[21509],"./App/Header/AppDisclaimer.vue":[53019,3019],"./App/Header/AppHeader.vue":[56535],"./App/Header/AppHeaderMenu.vue":[77874],"./App/Header/AppLogoButton.vue":[98122],"./App/Menu/AppInfoPopper.vue":[75673],"./App/Menu/AppMenu.vue":[20366],"./App/Menu/SidebarItemContent.vue":[28729],"./App/MobilePopup.vue":[14137,4137],"./App/Settings/Language/SelectLanguageDialog.vue":[54249,4249],"./SoraCard/ConfirmationInfo.vue":[61150,1150],"./SoraCard/Paywings/PaywingsDialog.vue":[803,803],"./SoraCard/SoraCardIntroPage.vue":[13010,3010],"./SoraCard/SoraCardKYC.vue":[57722,7722],"./SoraCard/steps/Email.vue":[49896,4998,9896],"./SoraCard/steps/KycView.vue":[54675,4998,4675],"./SoraCard/steps/Phone.vue":[81504,1504],"./SoraCard/steps/RoadMap.vue":[6870,6870],"./SoraCard/steps/TermsAndConditions.vue":[84300,4300],"./SoraCard/steps/ToSDialog.vue":[58110,8110],"./X1/X1Dialog.vue":[29413,9413],"./pages/AddLiquidity/Confirm.vue":[84085,3064,4085],"./pages/AddLiquidity/TransactionDetails.vue":[2946,3064,2946],"./pages/Bridge/SelectAsset.vue":[28072,3064,8072],"./pages/Bridge/SelectNetwork.vue":[82683,2683],"./pages/Bridge/TransactionDetails.vue":[51485,1485],"./pages/Bridge/TransferNotification.vue":[66023,6023],"./pages/Moonpay/Confirmation.vue":[33983,3064,3983],"./pages/Moonpay/HistoryButton.vue":[9241,3064,9241],"./pages/Moonpay/Moonpay.vue":[1789,3064,1789],"./pages/Moonpay/Notification.vue":[92991,3064,2991],"./pages/Referrals/ConfirmBonding.vue":[85756,5756],"./pages/Referrals/ConfirmInviteUser.vue":[32107,2107],"./pages/RemoveLiquidity/Confirm.vue":[83342,3342],"./pages/RemoveLiquidity/TransactionDetails.vue":[18071,8071],"./pages/Rewards/AmountHeader.vue":[64864,4864],"./pages/Rewards/AmountTable.vue":[75570,3064,7622],"./pages/Rewards/GradientBox.vue":[47063,7063],"./pages/Rewards/ItemTooltip.vue":[8160,3064,2307],"./pages/Stats/BarChart.vue":[77693,4998,3064],"./pages/Stats/NetworkStats.vue":[30223,3064,6415],"./pages/Stats/SupplyChart.vue":[20863,4998,3064],"./pages/Stats/TvlChart.vue":[53967,4998,3064],"./pages/Swap/Chart.vue":[37319,4998,3064,7319],"./pages/Swap/Confirm.vue":[36795,6795],"./pages/Swap/Settings/MarketAlgorithm/Header.vue":[17270,3064,1926],"./pages/Swap/Settings/MarketAlgorithm/MarketAlgorithm.vue":[32337,3064,7146],"./pages/Swap/Settings/Settings.vue":[59554,3064,5915],"./pages/Swap/StatusActionBadge.vue":[21362,1362],"./pages/Swap/TransactionDetails.vue":[37201,7201],"./pages/Wallet/AboutNetworkDialog.vue":[34700,4700],"./shared/Button/SortButton.vue":[91987,1247],"./shared/Button/SvgIconButton/SvgIconButton.vue":[73031,3064,3031],"./shared/Chart/ChartSkeleton.vue":[95402,5402],"./shared/Dialog/ConfirmBridgeTransaction.vue":[14668,3064,4668],"./shared/Dialog/NetworkFeeWarning.vue":[22333,2333],"./shared/ExternalLink.vue":[60766,766],"./shared/GenericPageHeader.vue":[54935,9733],"./shared/Input/TokenInput.vue":[39314,9314],"./shared/Input/TokenSelectButton.vue":[37502,7502],"./shared/Input/TokenSelectDropdown.vue":[39453,9453],"./shared/Logo/Moonpay.vue":[34886,3064],"./shared/Logo/Polkaswap.vue":[22041],"./shared/Logo/Sora.vue":[26711],"./shared/Logo/Web3.vue":[92501,3064],"./shared/PairTokenLogo.vue":[72585,2585],"./shared/PoolInfo.vue":[30928,928],"./shared/PriceChange.vue":[53560,3560],"./shared/SelectAsset/List.vue":[95065,5065],"./shared/SelectAsset/SelectToken.vue":[87748,3064,7748],"./shared/Settings/SlippageTolerance.vue":[8167,8167],"./shared/Settings/Tabs.vue":[96712,6712],"./shared/Stats/StatsCard.vue":[4831,4831],"./shared/Stats/StatsFilter.vue":[502,502],"./shared/TokensRow.vue":[43988,3988],"./shared/TransactionDetails.vue":[25313,5313],"./shared/ValueStatusWrapper.vue":[20334,334],"./shared/Widget.vue":[37125,7125]};function n(e){if(!o.o(s,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=s[e],n=t[0];return Promise.all(t.slice(1).map(o.e)).then((function(){return o(n)}))}n.keys=function(){return Object.keys(s)},n.id=3457,e.exports=n},13081:function(e,t,o){var s={"./cs.json":[6202,9648],"./de.json":[89627,5548],"./en.json":[18979],"./es.json":[71809,6673],"./fr.json":[12241,9093],"./hr.json":[2052,330],"./hu.json":[84038,2066],"./hy.json":[48644,9137],"./id.json":[58843,7457],"./it.json":[51849,3192],"./nl.json":[80173,9026],"./no.json":[93695,8285],"./pl.json":[90168,2649],"./ru.json":[68810,7940],"./sk.json":[4064,6650],"./sr.json":[63503,6156],"./sv.json":[23,676],"./vi.json":[14196,9288],"./yo.json":[92097,6185],"./zh_CN.json":[15660,1896]};function n(e){if(!o.o(s,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=s[e],n=t[0];return Promise.all(t.slice(1).map(o.e)).then((function(){return o.t(n,19)}))}n.keys=function(){return Object.keys(s)},n.id=13081,e.exports=n},32086:function(e,t,o){var s={"./card/cs.json":[6202,9648],"./card/de.json":[89627,5548],"./card/en.json":[18979],"./card/es.json":[71809,6673],"./card/fr.json":[12241,9093],"./card/hr.json":[2052,330],"./card/hu.json":[84038,2066],"./card/hy.json":[48644,9137],"./card/id.json":[58843,7457],"./card/it.json":[51849,3192],"./card/nl.json":[80173,9026],"./card/no.json":[93695,8285],"./card/pl.json":[90168,2649],"./card/ru.json":[68810,7940],"./card/sk.json":[4064,6650],"./card/sr.json":[63503,6156],"./card/sv.json":[23,676],"./card/vi.json":[14196,9288],"./card/yo.json":[92097,6185],"./card/zh_CN.json":[15660,1896],"./cs.json":[34454,661],"./de.json":[78471,1987],"./en.json":[82007],"./es.json":[36905,1309],"./fr.json":[46863,3273],"./hr.json":[81387,4598],"./hu.json":[83426,2182],"./hy.json":[74721,4034],"./id.json":[70998,2763],"./it.json":[35866,4468],"./nl.json":[58391,9347],"./no.json":[71950,5274],"./pl.json":[13194,4018],"./ru.json":[52182,8116],"./sk.json":[39549,9789],"./sr.json":[80569,4724],"./sv.json":[22524,6914],"./vi.json":[19090,8763],"./yo.json":[56460,4572],"./zh_CN.json":[22044,4208]};function n(e){if(!o.o(s,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=s[e],n=t[0];return Promise.all(t.slice(1).map(o.e)).then((function(){return o.t(n,19)}))}n.keys=function(){return Object.keys(s)},n.id=32086,e.exports=n},12488:function(e,t,o){var s={"./CalculatorButton.vue":[30100,100],"./CalculatorDialog.vue":[47937,3064,7937],"./ClaimDialog.vue":[90546,3064,546],"./DialogTitle.vue":[32049,2049],"./PoolCard.vue":[36063,3064,6063],"./StakeDialog.vue":[35976,3064,5976],"./StatusBadge.vue":[58523,3064,8523]};function n(e){if(!o.o(s,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=s[e],n=t[0];return Promise.all(t.slice(1).map(o.e)).then((function(){return o(n)}))}n.keys=function(){return Object.keys(s)},n.id=12488,e.exports=n},89706:function(e,t,o){var s={"./DataContainer.vue":[21944,3064,1944],"./Pool.vue":[28650,3064,8650],"./Staking.vue":[90637,3064,637]};function n(e){if(!o.o(s,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=s[e],n=t[0];return Promise.all(t.slice(1).map(o.e)).then((function(){return o(n)}))}n.keys=function(){return Object.keys(s)},n.id=89706,e.exports=n},62513:function(e,t,o){var s={"./About.vue":[81950,3064,1950],"./AddLiquidity.vue":[98831,3064,8831],"./Bridge.vue":[60558,3064,558],"./BridgeContainer.vue":[26542,6542],"./BridgeTransaction.vue":[37565,3064,7565],"./BridgeTransactionsHistory.vue":[36455,3064,6455],"./Explore/Container.vue":[92658,2658],"./Explore/Demeter.vue":[90157,3064,157],"./Explore/Pools.vue":[94160,3064,4160],"./Explore/Tokens.vue":[84540,3064,4540],"./MoonpayHistory.vue":[6267,3064,6267],"./Pool.vue":[85551,3064,5551],"./PoolContainer.vue":[95296,3064,783],"./ReferralBonding.vue":[40836,836],"./ReferralProgram.vue":[59883,9883],"./RemoveLiquidity.vue":[38020,3064,8020],"./Rewards.vue":[75360,3064,5360],"./RewardsTabs.vue":[97117,7117],"./SoraCard.vue":[98895,3064,8895],"./StakingContainer.vue":[57198,7198],"./Stats.vue":[56708,4998,3064,8555],"./Swap.vue":[75003,3064,5003],"./Wallet.vue":[63221,3221]};function n(e){if(!o.o(s,e))return Promise.resolve().then((function(){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}));var t=s[e],n=t[0];return Promise.all(t.slice(1).map(o.e)).then((function(){return o(n)}))}n.keys=function(){return Object.keys(s)},n.id=62513,e.exports=n},88677:function(){},62808:function(){},69159:function(){},70573:function(){},36563:function(){},46601:function(){},89214:function(){},42480:function(){},52361:function(){},94616:function(){},55024:function(){},18979:function(e){"use strict";e.exports=JSON.parse('{"card":{"termsAndConditions":"Terms & Conditions","disclaimerCollectData":"The SORA community does not collect any personal data, to get the SORA Card and IBAN account you will need to complete a KYC process directly with the card issuer.","privacyPolicy":"Privacy Policy","acceptAndContinue":"Accept & Continue","emailPlaceholder":"Email","sendCodeBtn":"Send SMS code","firstNamePlaceholder":"First name","lastNamePlaceholder":"Last name","phonePlaceholder":"Phone Number","statusPendingTitle":"Verification in progress","sendEmailLinkBtn":"Send link","statusAcceptText":"Your KYC verification is successful and we are already preparing to send you the SORA card!","noFreeKycTitle":"No more free attempts","unsupportedCountries":"Unsupported Countries","getSoraCardTitle":"Get SORA Card","alreadyAppliedTip":"I already applied","getSoraCardBtn":"Get SORA Card for free","bridgeTokensBtn":"Bridge tokens","depositX1Btn":"Buy XOR","getSoraCardDesc":"Top up your SORA Card with fiat or crypto and pay online, in-store or withdraw from an ATM. Get a Euro IBAN account and a Mastercard Debit Card","reIssuanceFee":"€0 annual re-issuance fee","freeStartDesc":"{value} of XOR in your account for free start","completeKYC":"Complete KYC","phoneConfirmation":"Phone Confirmation","emailConfirmation":"Email Confirmation","roadmap":{"contactInfoTitle":"Verify contact info","contactInfoDesc":"Email and phone number","docsTitle":"Verify documents","docsDesc":"Selfie with a document","personalDataTitle":"Submit personal data","personalDataDesc":"Full name & proof of address"},"letsStartBtn":"let’s start","otpPlaceholder":"Verification code","confirmCodeBtn":"Confirm SMS code","enterCodeBtn":"Enter the verification code","phoneInputBeforeSendDesc":"We’ll send you an SMS code.","phoneInputAfterSendDesc":"We’ve sent you an SMS code. Check your messages!","infoMessageNoKYC":"KYC process has not been finished.","infoMessageWrongOtp":"Code incorrect. Please, try again.","emailInputBeforeSendDesc":"We’ll send you a verification email.","emailInputAfterSendDesc":"We’ve sent you the magic link. Check your email!","personalNameInputDesc":"Use your real name.","infoMessageTryAgain":"Something went wrong. Please, try again","blacklistedCountriesExcuse":"Unfortunately, at this moment we’re not able to support the following countries:","statusPendingText":"You have successfully completed your KYC application. The review is pending and you can expect a decision shortly.<br /><br />Usually the decision is made the same day and in some cases can take up to 3 days.","resendInBtn":"RESEND IN {value}","statusRejectTitle":"Application rejected","statusRejectText":"Your application has been rejected by internal audit, please check out our requirements and terms of service carefully before applying again","statusAcceptTitle":"Application approved","noFreeAttemptsDesc":"You have used your free attempt to pass the KYC process. We kindly ask you to wait until the next upgrade of the application to proceed with paid attempts.","retryKycBtn":"Try to complete KYC again","unsupportedCountriesLink":"See the list","unsupportedCountriesDisclaimer":"Residents from certain countries can not apply for SORA Card at this moment","statusRejectReason":"Rejection reason","userNotFound":"No mobile number found, please recheck it and try again.","code":"Code"}}')},82007:function(e){"use strict";e.exports=JSON.parse('{"closeText":"Close","backText":"Back","createWalletText":"Create wallet","nameText":"Name","nextText":"Next","importText":"Import","settingsText":"Settings","addAssetText":"Add asset","successText":"Success","warningText":"Warning","swapText":"Swap","searchText":"Search","cancelText":"Cancel","saveText":"Save","logoutText":"Log out","sendText":"Send","addressText":"Address","amountText":"Amount","errorText":"Error","insufficientBalanceText":"Insufficient {tokenSymbol} balance","unknownErrorText":"ERROR Something went wrong...","transactionSubmittedText":"Transaction was submitted","operations":{"Swap":"Swap","Transfer":"Transfer","AddLiquidity":"Add Liquidity","RemoveLiquidity":"Remove Liquidity","CreatePair":"Create Pair","RegisterAsset":"Register Asset","ClaimRewards":"Claim Rewards","andText":"and","finalized":{"Transfer":"{action} {amount} {symbol} {direction} {address}","Swap":"Swapped {amount} {symbol} for {amount2} {symbol2}","AddLiquidity":"Supplied {amount} {symbol} and {amount2} {symbol2}","RemoveLiquidity":"Removed {amount} {symbol} and {amount2} {symbol2}","CreatePair":"Supplied {amount} {symbol} and {amount2} {symbol2}","RegisterAsset":"Registered {symbol} asset","ClaimRewards":"Reward claimed successfully {rewards}","ReferralReserveXor":"Bonded XOR successfully","ReferralUnreserveXor":"Unbonded XOR successfully","ReferralSetInvitedUser":"{role} {address} is set successfully","SwapAndSend":"Swapped {amount} {symbol} for {amount2} {symbol2} and {action} {direction} {address}","DemeterFarmingDepositLiquidity":"Supplied {symbol} and {symbol2} {amount} LP tokens","DemeterFarmingWithdrawLiquidity":"Removed {symbol} and {symbol2} {amount} LP tokens","DemeterFarmingStakeToken":"Added {amount} {symbol}","DemeterFarmingUnstakeToken":"Removed {amount} {symbol}","DemeterFarmingGetRewards":"{amount} {symbol} claimed successfully","EthBridgeIncoming":"Transfered {amount} {symbol} from {Ethereum} to {Sora}","EthBridgeOutgoing":"Transfered {amount} {symbol} from {Sora} to {Ethereum}"},"error":{"Transfer":"Failed to {action} {amount} {symbol} {direction} {address}","Swap":"Failed to swap {amount} {symbol} for {amount2} {symbol2}","AddLiquidity":"Failed to supply {amount} {symbol} and {amount2} {symbol2}","RemoveLiquidity":"Failed to remove {amount} {symbol} and {amount2} {symbol2}","CreatePair":"Failed to supply {amount} {symbol} and {amount2} {symbol2}","RegisterAsset":"Failed to register {symbol} asset","ClaimRewards":"Failed to claim rewards {rewards}","ReferralReserveXor":"Failed to bond XOR","ReferralUnreserveXor":"Failed to unbond XOR","ReferralSetInvitedUser":"Failed to set {role} {address}","SwapAndSend":"Failed to swap {amount} {symbol} for {amount2} {symbol2} and {action} {direction} {address}","DemeterFarmingDepositLiquidity":"Failed to supply {amount} {symbol} and {symbol2} LP tokens","DemeterFarmingWithdrawLiquidity":"Failed to remove {amount} {symbol} and {symbol2} LP tokens","DemeterFarmingStakeToken":"Failed to add {amount} {symbol}","DemeterFarmingUnstakeToken":"Failed to remove {amount} {symbol}","DemeterFarmingGetRewards":"Failed to claim {symbol}","EthBridgeIncoming":"Failed to transfer {amount} {symbol} from {Ethereum} to {Sora}","EthBridgeOutgoing":"Failed to transfer {amount} {symbol} from {Sora} to {Ethereum}"},"ReferralReserveXor":"Bond XOR","ReferralUnreserveXor":"Unbond XOR","ReferralSetInvitedUser":"Set {role}","SwapAndSend":"Swap and Send","DemeterFarmingDepositLiquidity":"Stake Liquidity","DemeterFarmingWithdrawLiquidity":"Unstake Liquidity","DemeterFarmingStakeToken":"Stake Token","DemeterFarmingUnstakeToken":"Unstake Token","DemeterFarmingGetRewards":"Claim Rewards","EthBridgeIncoming":"@:hashiBridgeText","EthBridgeOutgoing":"@:hashiBridgeText"},"polkadotjs":{"noExtensions":"No {PolkadotJs} extension was found. Please install it and reload this page\\nhttps://polkadot.js.org/extension/","noAccounts":"There seems to be no accounts in your {extension} extension. Please add an account and try again.","noAccount":"{extension} account error. Please check your account in the {extension} extension","noExtension":"No {extension} extension was found. Please install it and reload this page","noSigner":"Access denied. Go to {extension} extension settings and open \\"Manage Website Access\\" to allow."},"connection":{"title":"{Sora} Network account","text":"Connect or create your {Sora} Network account with {extensions} extensions. These extensions allow you to securely sign transactions and manage assets in {Sora} Network.","noAccounts":"No account found in your {extension} browser extension. Please add an account and try again.","selectAccount":"Select account to work with","action":{"install":"Install extension","learnMore":"Learn more","connect":"Connect account","refresh":"Refresh"},"selectWallet":"Select a wallet to work with","wallet":{"install":"Install","connected":"Connected","notConnected":"Not connected"}},"wallet":{"title":"{Sora} Network account","WalletAssets":"Assets","WalletActivity":"Activity","createToken":"@:createTokenText"},"walletSend":{"title":"Send","address":"@:addressText","amount":"@:amountText","balance":"Balance","max":"MAX","fee":"@:networkFeeText","enterAddress":"Enter address","badAddress":"Incorrect address","enterAmount":"Enter amount","badAmount":"@:insufficientBalanceText","confirmTitle":"Confirm transaction","errorAddress":"Invalid address. Please check it and try again.","feeTooltip":"@:networkFeeTooltipText","tooltip":"Send tokens between {Sora} network accounts","addressWarning":"Tokens will be sent to the {Sora} address below. Make sure the recipient can access the {Sora} chain to use the tokens:","addressError":"You cannot send tokens to the same account that you are currently connected to.","confirm":"@:confirmText"},"account":{"successCopy":"Wallet address is copied to the clipboard","copy":"Copy address","switch":"Switch account","walletAddress":"Wallet address","delete":"Delete account","rename":"Rename account","export":"Export .json"},"history":{"clearHistory":"Clear history","filterPlaceholder":"Filter by Address, Symbol, Type or Block ID","empty":"Your transactions will appear here","emptySearch":"No transactions found","firstText":"First","lastText":"Last","prevText":"Previous","nextText":"Next"},"assets":{"empty":"There are no assets","swap":"@:swapText","send":"@:sendText","receive":"@:account.copy","liquidity":"Add liquidity","bridge":"Bridge","copy":"Copy Asset ID","successCopy":"{symbol} Asset ID is copied to the clipboard","copied":"Copied!","balance":{"transferable":"Transferable","frozen":"Frozen","locked":"- Locked","reserved":"- Reserved","total":"Total","bonded":"- Bonded"},"totalAssetsValue":"Total assets value:","details":"Details","assetId":"Asset ID"},"asset":{"remove":"Remove asset","select":"Select an asset","receive":"Receive {symbol}"},"addAsset":{"success":"Asset {symbol} was added successfully!","empty":"No tokens found","alreadyAttached":"Token was already attached","understand":"I understand","warningTitle":"Trade at your own risk!","warningMessage":"Anyone can create a token, including creating fake versions of existing tokens that claim to represent projects.\\nIf you purchase this token, you may not be able to sell it back.","approved":"Asset approved by community","unknown":"Unknown source","scam":"SCAM","next":"Next","AddAssetToken":{"title":"Currencies","switchBtn":"Verified assets only"},"searchInputText":"Search by Asset ID, Name or Ticker Symbol"},"createToken":{"desc":"Create and deploy custom asset on {Sora}","enterSymbol":"Enter token symbol","enterName":"Enter token name","enterSupply":"Enter token supply","success":{"title":"Transaction submitted","desc":"Create {symbol} token"},"tooltipValue":"@:networkFeeTooltipText","fee":"@:networkFeeText","insufficientBalance":"@:insufficientBalanceText","feeError":"Failed to get a fee for a transaction","error":"Failed to create {symbol} token","tokenSymbol":{"placeholder":"Token symbol","desc":"This is an identifier for the token. You can use from 1 to 7 characters for the selection."},"tokenName":{"placeholder":"Token name","desc":"This is a name for the token. You can use from 1 to 33 characters for the selection."},"tokenSupply":{"placeholder":"Token supply","desc":"You will receive these tokens upon creation."},"extensibleSupply":{"placeholder":"Extensible supply","desc":"Ability to mint more tokens."},"provideContent":"Provide content","selectLocalFile":"Select local file","CreateSimpleToken":"Token","nft":{"source":{"label":"Source","value":"Local files","limit":"Choose another file"},"link":{"placeholder":"IPFS link","copyLink":"Copy link","tooltip":"IPFS is a distributed system for storing and accessing files, making it possible to access files from many locations that aren\'t managed by one organization."},"image":{"placeholderNoImage":"Upload the file by either entering a link or choosing from local storage","placeholderBadSource":"The file failed to be processed","placeholderBadSourceAddition":"or it’s not uploaded to IPFS yet","placeholderFileLimit":"The file size exceeds the limit of {value}mb"},"supply":{"placeholder":"Token supply","desc":"Amount of NFTs you’re going to get.","quantity":"Quantity"},"description":{"placeholder":"Description"}},"enterTokenDescription":"Enter description","divisible":{"placeholder":"Divisible","desc":"Ability of NFT to divide into fractional parts. Liquidity provisioning only works with divisible assets"},"title":"@:createTokenText","action":"@:createTokenText","confirm":"@:confirmText","titleCommon":"Create","confirmTokenTitleCommon":"Create Token","confirmTokenTitleNFT":"Create NFT","actionNFT":"@:createTokenTextNFT"},"transaction":{"title":"Transaction details","blockId":"Block Id","status":"Status","statuses":{"pending":"Pending...","failed":"Transaction failed","complete":"Complete"},"errorMessage":"Error","startTime":"Date","amount":"@:amountText","amount2":"@:amountText 2","fee":"Transaction Fee","total":"Total","from":"From","to":"To","successCopy":"{value} is copied to the clipboard","copy":"Copy {value}","history":{"created":"Transaction for {amount} {symbol} has been created.","submitted":"Transaction submitted with fee of {fee} {symbol}","confirmed":"Transaction confirmed"},"txId":"Transaction Id","viewIn":"View in {explorer}","referrer":"Referrer","referral":"Referral"},"appName":"{AppName}","changeNetworkText":"Change network in {Metamask}","transactionText":"transaction | transactions","connectWalletText":"Connect account","changeAccountText":"Change account","connectedText":"Connected","connectWalletTextTooltip":"Connect to {Sora} Network with {PolkadotJs}","selectNodeText":"Select Network Node","bridgeText":"Bridge","disclaimer":"{disclaimerPrefix} This website is maintained by the {Sora} community. Before continuing to use this website, please review the {polkaswapFaqLink} and documentation, which includes a detailed explanation on how {AppName} works, as well as the {memorandumLink}, and {privacyLink}. These documents are crucial to a secure and positive user experience. By using {AppName}, you acknowledge that you have read and understand these documents. You also acknowledge the following: 1) your sole responsibility for compliance with all laws that may apply to your particular use of {AppName} in your legal jurisdiction; 2) your understanding that the current version of {AppName} is an alpha version: it has not been fully tested, and some functions may not perform as designed; and 3) your understanding and voluntary acceptance of the risks involved in using {AppName}, including, but not limited to, the risk of losing tokens. Please do not continue without reading the {polkaswapFaqLink}, {memorandumLink}, {privacyLink}!","poweredBy":"Powered by","confirmTransactionText":"Confirm transaction in {direction}","retryText":"Retry","networkFeeText":"Network Fee","networkFeeTooltipText":"Network fee is used to ensure {Sora} system\'s growth and stable performance.","ethNetworkFeeTooltipText":"Please note that the {Ethereum} network fees displayed on {AppName} are only rough estimations, you can see the correct fee amount in your connected {Ethereum} wallet prior to confirming the transaction.","marketText":"Market","marketAlgorithmText":"Market algorithm","firstPerSecond":"{first} per {second}","pairIsNotCreated":"Token pair isn\'t created","pageTitle":{"Swap":"Swap","Pool":"Pool","Bridge":"@:bridgeText","About":"About","Stats":"Statistics","Wallet":"Wallet","CreatePair":"Create Pair","AddLiquidity":"Add Liquidity","AddLiquidityId":"Add Liquidity","RemoveLiquidity":"Remove Liquidity","Rewards":"Rewards","Explore/Tokens":"Tokens","Explore/Pools":"Pools","Explore/Staking":"Staking","Explore/Farming":"Farming","Staking":"Staking"},"mainMenu":{"Swap":"Swap","Pool":"Pool","Bridge":"@:bridgeText","Farming":"Farming","Wallet":"Account","Rewards":"Rewards","About":"About","Stats":"Statistics","CreatePair":"Create Pair","StakingContainer":"Staking","Explore/Container":"Explore","SoraCard":"{Sora} Card"},"social":{"twitter":"Twitter","telegram":"Telegram","medium":"Medium","reddit":"Reddit","github":"GitHub","wiki":"{Sora} Wiki"},"footerMenu":{"faucet":"Faucet","github":"GitHub","sorawiki":"{Sora} Wiki","memorandum":"{AppName} Memorandum and Terms of Services","privacy":"Privacy Policy","info":"Info & Community"},"helpDialog":{"title":"Help","termsOfService":"Terms of Service","privacyPolicy":"Privacy Policy","appVersion":"{AppName} version","contactUs":"Contact us"},"aboutNetworkDialog":{"title":"About","learnMore":"@:learnMoreText","network":{"title":"What is {Sora}?","description":"{AppName} is built on top of the {Sora} Network, and the {Sora} token (XOR) is used for gas/fees and liquidity provision on {AppName}. {Sora} Network allows for reduced fees, faster transactions and simpler consensus finalization and is focused on delivering interoperability across other blockchain ecosystems like {Ethereum}."},"polkadot":{"title":"What is {PolkadotJs}?","description":"{PolkadotJs} extension is a browser extension available for Firefox and Chrome dedicated to managing accounts for Substrate-based chains, including {Sora}, {Polkadot} and {Kusama}. You can add, import, and export accounts and sign transactions or extrinsics that you have initiated from websites you have authorized."}},"node":{"errors":{"connection":"An error occurred while connecting to the node\\n{address}\\n","network":"The node\\n{address}\\n is from the another network\\n","existing":"This node is already added: {title}\\n"},"messages":{"connected":"Connection established with node\\n{address}\\n","selectNode":"Please select node to connect from the node list"},"warnings":{"disconnect":"Connection to the node has been lost. Reconnecting..."}},"selectNodeDialog":{"title":"{Sora} Network node selection","addNode":"Add custom node","customNode":"Custom node","howToSetupOwnNode":"How to setup your own {Sora} node","select":"Select","connected":"Connected","selectNodeForEnvironment":"Select a node for {environment} environment:","nodeTitle":"{chain} hosted by {name}","messages":{"emptyName":"Please input the name of the node","emptyAddress":"Please input the address of the node","incorrectProtocol":"Address should starts from ws:// or wss://","incorrectAddress":"Incorrect address"},"updateNode":"Update node"},"buttons":{"max":"MAX","chooseToken":"Choose token","chooseAToken":"Choose a token","chooseTokens":"Choose tokens","enterAmount":"Enter amount"},"transfers":{"from":"From","to":"To"},"metamask":"{Metamask}","providers":{"metamask":"{Metamask}"},"about":{"title":"The DEX for the Interoperable Future.","description":"Cross-chain exchange of assets, simple creation and listing of new assets, and the easiest swaps ever. The interoperable future of {Polkadot} is here and we are at the forefront!","trading":{"title":"Faster Trading","first":"{AppName} is a non-custodial, cross-chain AMM DEX protocol for swapping tokens based on {Polkadot} and {Kusama} relay chains, {Polkadot} and {Kusama} parachains, and blockchains directly connected via bridges.","second":"{AppName} removes trusted intermediaries and provides the opportunity for faster trading","third":"{AppName} is a community project and devs collaborate on the open source code using the"},"liquidity":{"title":"Boundless Liquidity","first":"{AppName} combines multiple liquidity sources under a common liquidity aggregation algorithm, operating completely on-chain, in a trustless and decentralized way.","second":"When traders call the swap function, the liquidity aggregation algorithm will fill orders using the best offers across all liquidity sources. Liquidity sources can be other DEXs, order books, or other API-driven sources.","third":"Because {AppName} is an open-source project, anyone can add more liquidity sources by making contributions to the {AppName} codebase."},"swap":{"title":"Swap Any Token","first":"Go beyond the limits of current DEXs by adding tokens from the {Polkadot} ecosystem as well as other blockchains.","second":"Create, list and trade your own tokens on the {Sora} network.","third":"Our core infrastructure uses Parity Substrate, which is more scalable than {Ethereum}, and does not use expensive mining for consensus."},"pswap":{"title":"PSWAP Tokens","first":"PSWAP was created by community governance by voting on its release. It is a utility and governance token used to reward liquidity providers on {AppName}. Unlike most other reward tokens, PSWAP is burned with transactions and decreases in supply over time.","second":"The {percent}% fee for every swap on the {AppName} DEX is used to buy back PSWAP tokens, which are then burned. At first, 90% of burned PSWAP tokens are reminted to allocate to liquidity providers, but with time this percentage will decrease to 35% after 4 years."},"links":{"first":{"title":"Become a {Sora} Validator","desc":"Secure the future of the {Sora} network and decentralized apps like {AppName}, and earn rewards along the way by becoming a {Sora} validator."},"second":{"title":"Connect a Chain to {Sora}","desc":"Grow the decentralized world economy by connecting more chains to {Sora} and {AppName} using the {Hashi} bridge protocol."}},"network":"{AppName} is built on the {Sora} Network, focusing on interoperability to connect the rest of the crypto ecosystem to {Polkadot}."},"exchange":{"Swap":"Swap","Pool":"Pool","balance":"Balance","insufficientBalance":"@:insufficientBalanceText","price":"Price","transactionSubmitted":"Transaction submitted","transactionMessage":"{firstToken} and {secondToken}","ok":"OK","confirm":"Confirm"},"swap":{"connectWallet":"@:connectWalletText","estimated":"estimated","slippageTolerance":"Slippage Tolerance","minReceived":"Minimum Received","maxSold":"Maximum Sold","minReceivedTooltip":"Your transaction will revert if there is a large, unfavorable price movement before it is confirmed.","priceImpact":"Price Impact","priceImpactTooltip":"The difference between the market price and estimated price due to trade size.","liquidityProviderFee":"Liquidity Provider Fee","liquidityProviderFeeTooltip":"A portion of each trade ({liquidityProviderFee}%) goes to liquidity providers as a protocol incentive.","networkFee":"@:networkFeeText","pairIsNotCreated":"@:pairIsNotCreated","firstPerSecond":"@:firstPerSecond","insufficientAmount":"Insufficient {tokenSymbol} amount","insufficientLiquidity":"Insufficient liquidity","confirmSwap":"Confirm swap","swapOutputMessage":"Output is estimated. You will receive at least {transactionValue} or the transaction will revert.","rewardsForSwap":"PSWAP Strategic Rewards","swapInputMessage":"Input is estimated. You will sell maximum {transactionValue} or the transaction will revert.","route":"Route","errorFetching":"Error fetching the data"},"pool":{"connectWallet":"@:connectWalletText","connectToWallet":"Connect an account to view your liquidity.","liquidityNotFound":"No liquidity found.","addLiquidity":"Add liquidity","removeLiquidity":"Remove liquidity","createPair":"Create a pair","pooledToken":"{tokenSymbol} Pooled","pairTokens":"{pair} Pool Tokens","poolShare":"Your pool share","unknownAsset":"@:unknownAssetText","description":"When you add liquidity, you are given pool tokens representing your position. These tokens automatically earn fees proportional to your share of the pool, and can be redeemed at any time.","strategicBonusApy":"Strategic Bonus APY"},"bridge":{"title":"{Hashi} Bridge","info":"Convert tokens between the {Sora} and {Ethereum} networks.","balance":"Balance","connectWallet":"@:connectWalletText","connected":"@:connectedText","changeAccount":"@:changeAccountText","changeNetwork":"@:changeNetworkText","next":"Next","connectWallets":"Connect wallets to view respective transaction history.","soraNetworkFee":"{Sora} Network Fee","ethereumNetworkFee":"{Ethereum} Network Fee","total":"Total","viewHistory":"View transactions history","transactionSubmitted":"Transaction submitted","transactionMessage":"{assetA} for {assetB}","notRegisteredAsset":"Asset {assetSymbol} is not registered","selectNetwork":"Select network","networkInfo":"Bridge {Sora} Network with:","copy":"Copy network address","soraAddress":"{Sora} address","ethereumAddress":"{Ethereum} address","tooltipValue":"@:comingSoonText"},"selectRegisteredAsset":{"title":"Select a token","search":{"title":"Tokens","placeholder":"Filter by Asset ID, Name or Ticker Symbol","networkLabelSora":"{Sora} network tokens","networkLabelEthereum":"{Ethereum} network mirror tokens","emptyListMessage":"No results"},"customAsset":{"title":"Custom","customInfo":"Important! Custom tokens must be registered in {Sora}.","registerToken":"Register token","addressPlaceholder":"Asset ID","symbolPlaceholder":"Token symbol","empty":"No tokens found","alreadyAttached":"Token was already attached"}},"confirmBridgeTransactionDialog":{"confirmTransaction":"Confirm transaction","insufficientBalance":"@:insufficientBalanceText","changeNetwork":"@:changeNetworkText","confirm":"@:confirmTransactionText","buttonConfirm":"@:confirmText"},"bridgeTransaction":{"details":"{from} for {to}","for":" for ","steps":{"step":"{step} of 2","step1":"1st","step2":"2nd"},"status":{"pending":"{step} transactions pending...","failed":"{step} transactions failed. @:(retryText).","confirm":"Confirm 2nd of 2 transactions...","complete":"Complete","convertionComplete":"Conversion complete"},"statuses":{"waiting":"Waiting","ready":"Ready","pending":"Pending","frozen":"Frozen","failed":"Transaction failed","done":"Complete","waitingForConfirmation":"Waiting for confirmation..."},"networkTitle":"{network} transaction","transactionHash":"Transaction hash","networkInfo":{"status":"Status","date":"Date","amount":"Amount","transactionFee":"Transaction Fee","total":"Total"},"successCopy":"Transaction hash is copied to the clipboard","ethereum":"{Ethereum}","sora":"{Sora}","pending":"{network} transaction pending...","retry":"@:retryText","metamask":"{Metamask}","confirm":"@:confirmTransactionText","newTransaction":"Create new transaction","changeNetwork":"@:changeNetworkText","connectWallet":"@:connectWalletText","changeAccount":"@:changeAccountText in {Metamask}","expectedAddress":"Expected address in {Metamask}","title":"Bridge Transaction","expectedMetaMaskAddress":"Expected address in {Metamask}:","allowToken":"Allow {AppName} to use your {tokenSymbol}","approveToken":"Please note that it is only needed to approve the token once. If your extension has multiple token approval requests, make sure to only confirm the last one while rejecting the rest.","blocksLeft":"{count} blocks left..."},"bridgeHistory":{"title":"History","showHistory":"Show history","clearHistory":"Clear history","empty":"Your transactions will appear here.","filterPlaceholder":"Filter by Asset ID or Ticker Symbol","restoreHistory":"Restore history","statusAction":"Action Needed"},"selectToken":{"title":"Select a token","searchPlaceholder":"Filter by Asset ID, Name or Ticker Symbol","emptyListMessage":"No results","copy":"Copy Asset ID","successCopy":"{symbol} Asset ID is copied to the clipboard","assets":{"title":"Assets"},"custom":{"title":"Custom","search":"Input Asset ID","text":"CUSTOM TOKENS","alreadyAttached":"This token was already attached","notFound":"Token not found"}},"createPair":{"title":"Create a pair","deposit":"Deposit","balance":"Balance","pricePool":"Prices and fees","shareOfPool":"Share of pool","firstPerSecond":"@:firstPerSecond","firstSecondPoolTokens":"{first}-{second} Pool","connect":"Connect wallet","supply":"Supply","yourPosition":"Your position","yourPositionEstimated":"Your position (estimated)","youWillReceive":"You will receive","remove":"remove","add":"ADD","ok":"OK","networkFee":"@:networkFeeText","alreadyCreated":"Token pair is already created","firstLiquidityProvider":"You are the first liquidity provider","firstLiquidityProviderInfo":"The ratio of tokens you add will set the price of this pool.<br/>Once you are happy with the rate click supply to review."},"confirmSupply":{"title":"Your pool share will be","outputDescription":"Output is estimated. If the price changes more than {slippageTolerance}% your transaction will revert.","poolTokensBurned":"{first}-{second} Pool Tokens Burned","price":"Price"},"addLiquidity":{"title":"Add liquidity","pairIsNotCreated":"@:pairIsNotCreated","firstPerSecond":"@:firstPerSecond"},"removeLiquidity":{"title":"Remove liquidity","liquidity":"liquidity","balance":"Balance","amount":"Amount","input":"Input","output":"Output","price":"Price","remove":"Remove","description":"Removing pool tokens converts your position back into underlying tokens at the current rate, proportional to your share of the pool. Accrued fees are included in the amounts you receive.","outputMessage":"Output is estimated. If the price changes more than {slippageTolerance}% your transaction will revert.","confirmTitle":"You will receive","shareOfPool":"Share of pool after transaction","locked":"{percent} of your pool is in {lock}"},"dexSettings":{"title":"Settings","marketAlgorithm":"@.upper:marketAlgorithmText","marketAlgorithmTooltip":{"main":" - option to choose between Primary Market (TBC), Secondary Market (XYK) or a combined smart algorithm for guaranteed best price for any given transaction."},"slippageTolerance":"SLIPPAGE TOLERANCE","slippageToleranceHint":"Your transaction will revert if the price changes unfavorably by more than this percentage.","slippageToleranceValidation":{"warning":"Your transaction may fail","frontrun":"Your transaction may be frontrun","error":"Enter a valid slippage percentage"},"custom":"CUSTOM","transactionDeadline":"TRANSACTION DEADLINE","transactionDeadlineHint":"Transaction will be cancelled if it is pending for more than this long.","nodeAddress":"NODE ADDRESS","ip":"IP","port":"PORT","min":"MIN","marketAlgorithms":{"SMART":"{smartAlgorithm} liquidity routing ensures the best price for any transaction by combining only the best price options from all available markets. When available, Token Bonding Curve ({tbcAlgorithm}) will be used for liquidity as long as the asset price is more affordable than from other sources, upon which the {xycAlgorithm} pool is utilized.","TBC":"{tbcAlgorithm} — buying only from the Token Bonding Curve (Primary Market). There is a possibility that the price can become unfavorable compared to the {xycAlgorithm} pool (Secondary Market), but the value received from the vested rewards might turn out to be much more favorable over time.","XYK":"{xycAlgorithm} — buying only from the XYK Pool (Secondary Market). Traditional XYK pool swap."},"charts":"Charts","сhartsDescription":"View charts for token prices"},"resultDialog":{"title":"Transaction submitted","ok":"OK"},"rewards":{"title":"Claim Rewards","changeAccount":"@:changeAccountText","connected":"@:connectedText","networkFee":"@:networkFeeText","andText":"and","claiming":{"pending":"Claiming...","success":"Claimed successfully"},"transactions":{"confimation":"Confirm {order} of {total} transactions...","success":"You will receive your rewards shortly","failed":"{order} of {total} transactions failed. @:retryText"},"signing":{"extension":"{PolkadotJs} browser extension","accounts":"your {Sora} and {Ethereum} accounts respectively"},"hint":{"connectExternalAccount":"Connect an {Ethereum} account to check for available PSWAP and VAL rewards.","connectAccounts":"To claim your PSWAP and VAL rewards you need to connect both your {Sora} and {Ethereum} accounts.","connectAnotherAccount":"Connect another {Ethereum} account to check for available PSWAP and VAL rewards.","howToClaimRewards":"To claim your {symbols} rewards you need to sign {count} {transactions} in {destination}. Rewards will be deposited to your {Sora} account."},"action":{"connectWallet":"@:connectWalletText","connectExternalWallet":"Connect {Ethereum} account","signAndClaim":"Sign and claim","pendingInternal":"{Sora} transaction pending...","pendingExternal":"{Ethereum} transaction pending...","retry":"@:retryText","checkRewards":"Check","insufficientBalance":"@:insufficientBalanceText"},"notification":{"empty":"No available claims for this account"},"events":{"XorErc20":"XOR ERC-20","SoraFarmHarvest":"{Sora}.farm harvest","NtfAirdrop":"NFT Airdrop","LiquidityProvision":"Fees gained from liquidity provision","BuyOnBondingCurve":"buying from the TBC","MarketMakerVolume":"Market Making","LiquidityProvisionFarming":"Farming"},"vested":"vested","forText":"for","totalVested":"Total rewards","claimableAmountDoneVesting":"Claimable rewards","groups":{"strategic":"Strategic Rewards","external":"Rewards for the connected {Ethereum} account","crowdloan":"Crowdloan rewards"},"Rewards":"Rewards","ReferralProgram":"@:referralProgram.title"},"provider":{"default":"{Ethereum} provider","metamask":"{Metamask}","messages":{"checkExtension":"{name} extension is busy, please check it","extensionLogin":"Please login to your {name} extension","installExtension":"{name} extension is not found. Please install it!\\n\\nAlready installed extension? Please reload the page","reloadPage":"Reload page"}},"selectLanguageDialog":{"title":"Language"},"tokens":{"symbol":"Symbol","assetId":"Asset ID"},"memorandum":"{AppName} Memorandum and Terms of Services","FAQ":"{AppName} FAQ","connectedAccount":"Connected account","selectNodeConnected":"Connected to: {chain}","moonpayText":"MoonPay","forText":"for","moonpay":{"notifications":{"success":{"title":"Tokens purchased","text":"Token purchase is finished. The {Hashi} bridge transaction will start automatically as soon as the tokens have been received in the connected {Ethereum} account. It is safe to close this window and continue using {AppName}. There will be a notification about the bridge transaction when ready."},"supportError":{"title":"Token not supported","text":"Unfortunately the token purchased via @:moonpayText is not yet supported by the {Hashi} bridge in {AppName}. Normally only the supported tokens should be available for purchase via MoonPay in {AppName}, hence something must have gone wrong somewhere. Please don’t hesitate to let the community know about this case in the <a class=\\"link\\" href=\\"https://t.me/polkaswap\\" target=\\"_blank\\" rel=\\"nofollow noopener\\" title=\\"{AppName}\\">{AppName} Telegram group</a>."},"feeError":{"title":"Not enough ETH for the bridge tx","text":"Unfortunately the {Hashi} bridge transaction has failed due to there not being enough ETH to pay for the {Ethereum} network transation fees. Please add more ETH and try again."},"transactionError":{"title":"Transaction has failed","text":"Unfortunately it appears that the @:moonpayText transaction has failed. Please try again. For @:moonpayText support go to <a class=\\"link\\" href=\\"https://support.moonpay.com\\" target=\\"_blank\\" rel=\\"nofollow noopener\\" title=\\"@:moonpayText\\">https://support.moonpay.com</a>"},"amountError":{"title":"Insufficient balance","text":"Unfortunately the {Hashi} bridge transaction has failed due to there not being enough tokens for transaction. Please check your {Ethereum} account balance and try again."},"accountAddressError":{"title":"Wrong {Ethereum} account","text":"Unfortunately, the {Hashi} bridge transaction failed due to the recipient address of the tokens in the @:moonpayText order does not match your current {Ethereum} account address. Please switch {Ethereum} account in extension and try again."}},"buttons":{"buy":"Buy Tokens","history":"Purchase History","transfer":"Start bridge","view":"View bridge transaction"},"history":{"title":"Purchase history","empty":"@:noDataText"},"confirmations":{"txReady":"Transaction Ready For Bridge"},"tooltips":{"transfer":"Tokens successfully purchased!\\nClick to start the bridge transaction"}},"light":"Light","dark":"Dark","headerMenu":{"showBalances":"Show Balances","hideBalances":"Hide Balances","settings":"Settings","switchTheme":"Switch to {theme} Mode","switchLanguage":"Choose Language","selectNode":"@:selectNodeText","showDisclaimer":"Show Disclaimer","hideDisclaimer":"Hide Disclaimer"},"sentText":"Sent","learnMoreText":"Learn more","marketMakerCountdown":{"title":"Market Maker Countdown","blocks":"blocks","daysLeft":"days left","txs":"TXs","volume":"MM TX volume","description":"20 million PSWAP / month will be distributed to market makers with at least 500 tx / month valued over 1 XOR."},"confirmNextTxFailure":{"header":"Attention","info":"Your XOR balance will be less than {fee} XOR after this transaction. You won’t be able to pay for the network fee for another transaction.","payoff":"You would have to use the Bridge to get XOR from other networks, get sent XOR from another {Sora} account, or swap any other token already in your account into XOR.","button":"Yes, I understand the risk"},"blockNumberText":"Block number","referralProgram":{"title":"Referral Program","connectAccount":"To invite users you need to connect your {Sora} account.","bondedXOR":"XOR Bonded","referralsNumber":"{number} referrals","startInviting":"Bond XOR to refer others","preview":"Invite new users and get 10% from their transaction fees.<br/>To start, bond any amount of XOR. <a href=\\"#\\" target=\\"_blank\\" rel=\\"nofollow noopener\\" class=\\"link\\">Learn more</a>","deposit":"Deposit","balance":"Balance","networkFee":"@:networkFeeText","insufficientBalance":"@:insufficientBalanceText","insufficientBondedBalance":"Insufficient bonded balance","action":{"connectWallet":"@:connectWalletText","empty":"Enter amount of {tokenSymbol}","startInviting":"Bond {tokenSymbol} to start inviting","bondMore":"Bond More","bond":"Bond","unbond":"Unbond","copyLink":"Copy link"},"transactionDetails":"Transaction Details","receivedRewards":"Received rewards","invitationLink":"Invitation link","successCopy":"Referral link is copied to the clipboard","bondTitle":"Bond XOR","unbondTitle":"Unbond XOR","confirm":{"bond":"Confirm bond","unbond":"Confirm unbond","inviteTitle":"You have been invited to {AppName}","inviteDescription":"For every transaction, 10% of the fee will go to your referrer, without any extra cost to you.","signInvitation":"Approve","freeOfCharge":"This action is free of charge","hasReferrerTitle":"You’ve already set your referrer","hasReferrerDescription":"Unfortunately, you can only set one","ok":"OK","text":"Confirm"},"referrer":{"title":"Add your referrer","titleReferrer":"Your referrer","placeholder":"Enter invitation link or code","label":"Invitation link or code","approve":"Approve","approved":"Approved","description":"You can get referred to {AppName},<br/>type in the link or code of the referrer","referredBy":"You’ve been referred by {referrer}","info":"When you’ll pay a fee for transaction,<br/>10% will go to your referrer","referredLablel":"Referred address"},"insufficientBondedAmount":"To invite more referrals, bond at least {inviteUserFee} XOR"},"transactionDetailsText":"Transaction Details","code":{"download":"Download QR Code","upload":"Scan QR","invalid":"Invalid QR Code","import":"Import an image","scan":"Scan with camera","allowanceError":"Check your camera availability and browser permissions to use it","receive":"Receive","camera":"Camera","allowanceRequest":"Press “Allow” to access camera"},"bridgeTransferNotification":{"addToken":"Add {symbol} to {Metamask}","title":"Bridge transaction successful"},"mobilePopup":{"sideMenu":"Get {Sora} Wallet","header":"Download {Sora} Wallet with {polkaswapHighlight} features","info":"Swap tokens from different networks - {Sora}, {Ethereum}, {Polkadot}, {Kusama}. Provide liquidity pool and earn % from exchange fees."},"releaseNotesText":"Release notes","copiedText":"Copied!","copyWithValue":"Copy {value}","copiedWithValue":"{value} is copied!","signAndClaimText":"Sign and claim","balanceText":"Balance","unknownAssetText":"Unknown asset","demeterFarming":{"staking":{"active":"Staking active","inactive":"Stake to earn additional rewards","stopped":"Staking stopped"},"info":{"earned":"{symbol} earned","fee":"Fee","feeTooltip":"Deposit fee is applied to your amount to stake","owned":"{symbol} @:balanceText","poolShare":"Your pool share staked","poolShareWillBe":"Your pool share staked will be","rewardToken":"Reward token","stake":"Your {symbol} staked","stakeWillBe":"Your {symbol} stake will be","totalLiquidityLocked":"Total liquidity locked"},"actions":{"add":"Stake more","claim":"Claim rewards","remove":"Remove stake","start":"Start staking"},"amountAdd":"Amount to stake","amountRemove":"Amount to remove","poweredBy":"Powered by Demeter Farming","calculator":"Calculator","results":"Results","rewards":"{symbol} rewards"},"staking":{"title":"Staking"},"historyErrorMessages":{"generalError":"Something went wrong","balances":{"liquidityrestrictions":"Account liquidity restrictions prevent withdrawal"},"poolxyk":{"sourcebalanceisnotlargeenough":"Source balance is not large enough","targetbalanceisnotlargeenough":"Destination balance is not large enough","impossibletodecidevalidpairvaluesfromrangeforthispool":"Provided amounts are too diverse","calculatedvalueisnotmeetsrequiredboundaries":"Amounts are out of required bounds","unabletodepositxorlessthanminimum":"XOR lower than the minimum value (0.007)","zerovalueinamountparameter":"Amount parameter has zero value"},"xstpool":{"poolalreadyinitializedforpair":"Pool pair already exists","slippagelimitexceeded":"Slippage tolerance has not met proper limits"},"referrals":{"alreadyhasreferrer":"Account already has a referrer","referrerinsufficientbalance":"Referrer does not have enough of reserved balance"},"vestedrewards":{"rewardssupplyshortage":"Rewards program has already finished","cantcalculatereward":"Failed to perform reward calculation","norewardsforasset":"There are no rewards for this asset"},"liquidityproxy":{"forbiddenfilter":"Selected liquidity source is not allowed"},"demeterfarmingplatform":{"insufficientfunds":"Insufficient funds","insufficientlptokens":"Insufficient liquidity provision tokens","pooldoesnothaverewards":"Pool does not have rewards"},"multicollateralbondingcurvepool":{"pricecalculationfailed":"An error occurred while calculating the price"}},"receivedText":"Received","browserNotificationDialog":{"title":"Enable browser notifications","info":"We will send you only relevant updates about your wallet, for example: asset balance changes","button":"Enable notifications","agree":"Yes, I understand","notificationBlocked":"To receive the notifications about {AppName}, please, allow the notifications in your browser\'s native settings","pointer":"Press “Allow” to turn notifications on"},"assetDeposit":"Asset balance has been deposited","noDataText":"No data","ofText":"{first} of {second}","filter":{"all":"All","token":"Currencies","verifiedOnly":"Show verified assets only","zeroBalance":"Hide 0 balance assets","showAssets":"Show assets","show":"Show"},"desktop":{"welcome":{"header":"Welcome to {AppName}!","headline":"Let’s set up your account","text":"Create your {Sora} Network account or log into the old ones using mnemonic phrase or .json import. This allows you to securely sign transactions and manage assets in {Sora} Network.","createAccount":"Create an account","importAccount":"Import Account"},"heading":{"seedPhraseTitle":"Seed phrase","confirmSeedTitle":"Confirm seed phrase","accountDetailsTitle":"Account Details","importTitle":"Import account"},"button":{"next":"Next step","skip":"Skip","createAccount":"Create Account","importAccount":"Import account"},"accountName":{"placeholder":"Wallet name","desc":"This is the public name of your wallet which will be visible to everyone"},"password":{"placeholder":"Password","desc":"Ensure you are using a strong password for proper protection"},"confirmPassword":{"placeholder":"Confirm password"},"accountMnemonic":{"placeholder":"Mnemonic phrase"},"seedAdviceText":"This is a secret seed of your account. Make sure to store it on a non-digital carrier, for example - paper","confirmSeedText":"Confirm the seed phrase by clicking words in the correct order","errorMnemonicText":"Incorrect seed phrase order","exportOptionText":"Export .json account file","exportJsonText":"You will always be able to access your account by importing that .json file. Do not share it with anyone!","addAccount":"Add an account","dialog":{"confirmTitle":"Confirm with password","confirmButton":"Sign Transaction","savePasswordText":"Remember my password for next 15 minutes","extendPasswordText":"Extend period without password by 15 minutes"},"errorMessages":{"password":"Password did not match","passwords":"Passwords did not match","mnemonic":"Invalid bip39 mnemonic specified","mnemonicLength":"Mnemonic should contain {number} words","jsonFields":"JSON file does not have required fields"},"assetsAtRiskText":"Assets at risk!","deleteAccountText":"Account can’t be recovered without a seed phrase, .json file or if it’s stored in some extension. You will be logged out."},"hashiBridgeText":"{Hashi} bridge","disclaimerTitle":"Disclaimer:","explore":{"showOnlyMyPositions":"Show only my positions"},"tooltips":{"roi":"{ROI} stands for Return on Investment. It is calculated by dividing the profit earned on an investment by the cost of that investment in a percentage equivalent.","tvl":"{TVL} stands for Total Value Locked. It represents tokens locked in the pools in the dollar equivalent.","volume":"Volume refers to the total amount of assets that have been traded or exchanged on the network over a specific period of time. The volume is an important metric for measuring the liquidity and overall activity of the network.","fees":"Fees on the {Sora} blockchain refer to the charges that are incurred for executing transactions on the network. These fees are paid in XOR, the native cryptocurrency of the {Sora} Network. The fee amount is determined by the complexity and size of the transaction being executed","supply":"Token supply refers to the total number of tokens that have been created and are in circulation on the network. The token supply can fluctuate based on the amount of tokens being staked, burned, or transferred on the network.","transactions":"Transactions refer to the process of sending or receiving digital assets on the network, including liquidity operations, as well as swaps.","accounts":"Accounts are digital addresses that hold user\'s assets on the network. Each account is associated with a unique public address and a private key that allows the user to access and manage their assets.","bridgeTransactions":"{from} to {to} bridge refers to the process of transferring assets between the {from} and {to} networks using a bridge. The bridge allows for the interoperability of the two networks, enabling users to seamlessly move assets between them.","velocity":"Token velocity is the number of times token changes accounts during period (month) on average. It indicates the level of trading activity and liquidity."},"createTokenText":"Create","comingSoonText":"Coming Soon","confirmText":"Confirm","createTokenTextNFT":"Create NFT","doNotShowText":"Don’t show me this again","accountText":"account | accounts","networkStatisticsText":"Network statistics","footer":{"node":{"title":{"connected":"Node connected","loading":"Node re-connecting","disconnected":"Node disconnected"}},"internet":{"title":{"disabled":"Internet disabled","unstable":"Internet unstable","stable":"Internet stable"},"label":"Your internet speed","desc":{"disabled":"Disconnected","unstable":"Slow connection","stable":"Optimal speed"},"action":"Refresh {Polkaswap}","dialogTitle":"Connect to internet source","dialogDesc":"{Polkaswap} requires internet connection for stable experience"},"statistics":{"title":{"unavailable":"Statistics unavailable","loading":"Statistics loading","available":"Statistics available"},"label":"Statistics services","desc":{"unavailable":"All services are disconnected","loading":"All services are loading","available":"All services are stable"},"action":"Select services","dialog":{"title":"{Sora} Network service selection","fiat":"Fiat values","chartsAndActivity":"Charts & Activity"}}},"locationText":"Location","acceptText":"Accept & Hide","newAccountsText":"New accounts"}')}},c={};function d(e){var t=c[e];if(void 0!==t)return t.exports;var o=c[e]={id:e,loaded:!1,exports:{}};return i[e].call(o.exports,o,o.exports,d),o.loaded=!0,o.exports}d.m=i,d.amdO={},e=[],d.O=function(t,o,s,n){if(!o){var a=1/0;for(l=0;l<e.length;l++){o=e[l][0],s=e[l][1],n=e[l][2];for(var r=!0,i=0;i<o.length;i++)(!1&n||a>=n)&&Object.keys(d.O).every((function(e){return d.O[e](o[i])}))?o.splice(i--,1):(r=!1,n<a&&(a=n));if(r){e.splice(l--,1);var c=s();void 0!==c&&(t=c)}}return t}n=n||0;for(var l=e.length;l>0&&e[l-1][2]>n;l--)e[l]=e[l-1];e[l]=[o,s,n]},d.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return d.d(t,{a:t}),t},o=Object.getPrototypeOf?function(e){return Object.getPrototypeOf(e)}:function(e){return e.__proto__},d.t=function(e,s){if(1&s&&(e=this(e)),8&s)return e;if("object"==typeof e&&e){if(4&s&&e.__esModule)return e;if(16&s&&"function"==typeof e.then)return e}var n=Object.create(null);d.r(n);var a={};t=t||[null,o({}),o([]),o(o)];for(var r=2&s&&e;"object"==typeof r&&!~t.indexOf(r);r=o(r))Object.getOwnPropertyNames(r).forEach((function(t){a[t]=function(){return e[t]}}));return a.default=function(){return e},d.d(n,a),n},d.d=function(e,t){for(var o in t)d.o(t,o)&&!d.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},d.f={},d.e=function(e){return Promise.all(Object.keys(d.f).reduce((function(t,o){return d.f[o](e,t),t}),[]))},d.u=function(e){return"js/"+({330:"lang-card-hr-json",661:"lang-cs-json",676:"lang-card-sv-json",1309:"lang-es-json",1896:"lang-card-zh_CN-json",1987:"lang-de-json",2066:"lang-card-hu-json",2182:"lang-hu-json",2649:"lang-card-pl-json",2763:"lang-id-json",3064:"chunk-common",3192:"lang-card-it-json",3273:"lang-fr-json",4018:"lang-pl-json",4034:"lang-hy-json",4208:"lang-zh_CN-json",4468:"lang-it-json",4572:"lang-yo-json",4598:"lang-hr-json",4724:"lang-sr-json",5274:"lang-no-json",5548:"lang-card-de-json",6156:"lang-card-sr-json",6185:"lang-card-yo-json",6650:"lang-card-sk-json",6673:"lang-card-es-json",6914:"lang-sv-json",7457:"lang-card-id-json",7940:"lang-card-ru-json",8116:"lang-ru-json",8285:"lang-card-no-json",8763:"lang-vi-json",9026:"lang-card-nl-json",9093:"lang-card-fr-json",9137:"lang-card-hy-json",9288:"lang-card-vi-json",9347:"lang-nl-json",9648:"lang-card-cs-json",9789:"lang-sk-json"}[e]||e)+"."+{100:"8b1fa4b3",157:"5d1b4b92",330:"32a7947f",334:"c4f0ae00",502:"0903c302",546:"0989a83c",558:"f4a52d1b",637:"78508fd1",661:"62b9b720",676:"b35388f5",766:"d8b06ff4",783:"99bbb32b",803:"46aec4ea",836:"3a7743b8",928:"9aa0ff57",1150:"1cd61cd8",1243:"9c20ef1f",1247:"7424e865",1309:"23b33bc4",1362:"c6b29366",1485:"9ca409a1",1504:"43f23788",1782:"0301d110",1789:"989a2b32",1896:"9ff65b3d",1926:"89a45f7f",1944:"0d0a1822",1950:"86b1e8b0",1987:"6dc104e6",2049:"f1473448",2065:"b1b6acb7",2066:"3b8efc39",2107:"50f4c55b",2182:"23585b96",2307:"f28225ae",2333:"3045d6fc",2578:"6223fa11",2583:"3c8a4edc",2585:"f6090246",2649:"ed7b06ed",2658:"a9cda4fa",2683:"b5f196f2",2763:"56317f54",2946:"19f33faa",2991:"99d1743b",3010:"6ad817ee",3019:"14dce086",3031:"d28861b1",3064:"ca5bf0b7",3192:"85e3422c",3221:"956c1f4a",3273:"d9d29f25",3342:"4b808207",3560:"06f470af",3983:"d133cc4a",3988:"353c5beb",4018:"7662f102",4034:"b54c88fa",4085:"c6cb7c98",4137:"6f53e6a8",4160:"20e574e9",4208:"f0cedba9",4249:"83bedaa2",4300:"5767de8e",4468:"269d5899",4540:"dfb49675",4572:"d2e0890b",4598:"5e9e1d1c",4668:"5f282e7e",4675:"1a8390b8",4700:"876c5df5",4724:"93f4a2bf",4831:"4d6f0a9a",4864:"c188debf",5003:"f10312f3",5065:"d7de97b7",5274:"f37aa14a",5313:"32bd6098",5360:"07c97bf4",5402:"c613abec",5548:"d1c115b3",5551:"94f0ef1b",5756:"3e359e37",5915:"dbe26c1d",5976:"250941da",6023:"8ee004b4",6063:"b56b2e73",6156:"dbda0739",6185:"a755e065",6267:"26521f27",6393:"46586b6f",6415:"5684808c",6455:"e4bb5caa",6542:"33cffc9f",6650:"fa5d60d9",6673:"49cafc86",6712:"d521f7b7",6795:"12f5265e",6870:"6fac9383",6914:"c38a2e53",7063:"63b918d3",7117:"3b4b14f4",7125:"a2fb0619",7146:"d60c14f5",7198:"2b98d3e3",7201:"ca9c140d",7319:"5b1c2a9d",7436:"33bd86a5",7457:"f6b76669",7502:"cf8e172a",7565:"28a1a24c",7622:"42d6ab94",7661:"ab5ff061",7722:"246d61de",7748:"7486556b",7937:"35479e79",7940:"cc95f87c",8020:"5f1d5ca8",8071:"028708df",8072:"4c0670a9",8110:"75ba224a",8116:"f66ed633",8167:"96ef9090",8285:"01c382bc",8523:"977813fb",8555:"a51276b8",8650:"d25f485b",8763:"7157f771",8831:"5eb4a854",8895:"80b1b388",9026:"4f837835",9093:"1e853aa8",9137:"ae0938a8",9241:"689d0d10",9288:"28de43f6",9314:"c142d93a",9347:"01db7aeb",9413:"b0c55cab",9453:"b4daecce",9648:"c56f158a",9733:"b54e7ae0",9789:"35b1a098",9883:"24bfda47",9896:"1b16b341"}[e]+".1687195267571.js"},d.miniCssF=function(e){return"css/"+(2143===e?"app":e)+"."+{100:"8154764e",157:"4e56a4c5",334:"57c0ae89",502:"c7df788f",546:"d262f6e9",558:"d7396bcd",637:"1c9d5774",766:"30051259",803:"00a3956f",836:"f87b628c",928:"b0c1812d",1150:"b90b25de",1243:"2844e7f9",1247:"624454d5",1362:"d1e8102f",1504:"ce21c50d",1789:"74280e13",1926:"47d8a3a8",1950:"25918348",2049:"309570a1",2065:"8b902a32",2107:"beddc3e6",2143:"06c3214b",2307:"dd30faf2",2333:"2229d2ec",2578:"e87a0cdd",2583:"59fde0f9",2585:"ad63ac74",2658:"80b78539",2683:"a2cae443",3010:"391137b5",3019:"25e1006b",3031:"f3f2cf29",3221:"980be11c",3342:"eee868a3",3560:"461dce0d",3983:"6429e792",3988:"10d84964",4085:"de88f210",4137:"6a0339df",4160:"4e56a4c5",4249:"afbcf132",4300:"f2dd03e2",4540:"4e56a4c5",4668:"31e35265",4675:"89a78712",4700:"b9b89896",4831:"54f3ffe7",4864:"022b5183",5003:"88d1cb46",5065:"11e1c6dc",5313:"9386000d",5360:"92e90693",5402:"6d34a368",5551:"e74fb506",5756:"6389780d",5915:"8d1eb946",5976:"69986199",6023:"bd6d9a03",6063:"4f96d735",6267:"ccf78e5d",6415:"625b70ec",6455:"bb78d5aa",6712:"6d3d1758",6795:"a2ff117c",6870:"bc8a400c",7063:"01298400",7117:"5446f1ff",7125:"a941694e",7146:"9cc9fc70",7201:"0d5710c3",7319:"e242eba9",7436:"4cfb332a",7502:"88fd7aa8",7565:"ed4cafe7",7622:"b135f077",7661:"b10b05ad",7722:"7aea333b",7748:"df8c08c2",7937:"08453692",8020:"ef301b2a",8072:"17b7772b",8110:"3143e01c",8167:"1b992cb0",8523:"0e44b492",8555:"966d214e",8650:"2a6121d8",8831:"bba5017b",8895:"0d350eb7",9241:"d87b0973",9314:"d3754795",9413:"96025a15",9453:"2e30ad6d",9733:"86ff12f1",9883:"c2065e0a",9896:"191ffafb"}[e]+".css"},d.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),d.hmd=function(e){return(e=Object.create(e)).children||(e.children=[]),Object.defineProperty(e,"exports",{enumerable:!0,set:function(){throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+e.id)}}),e},d.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s={},n="polkaswap-exchange-web:",d.l=function(e,t,o,a){if(s[e])s[e].push(t);else{var r,i;if(void 0!==o)for(var c=document.getElementsByTagName("script"),l=0;l<c.length;l++){var u=c[l];if(u.getAttribute("src")==e||u.getAttribute("data-webpack")==n+o){r=u;break}}r||(i=!0,(r=document.createElement("script")).charset="utf-8",r.timeout=120,d.nc&&r.setAttribute("nonce",d.nc),r.setAttribute("data-webpack",n+o),r.src=e),s[e]=[t];var p=function(t,o){r.onerror=r.onload=null,clearTimeout(m);var n=s[e];if(delete s[e],r.parentNode&&r.parentNode.removeChild(r),n&&n.forEach((function(e){return e(o)})),t)return t(o)},m=setTimeout(p.bind(null,void 0,{type:"timeout",target:r}),12e4);r.onerror=p.bind(null,r.onerror),r.onload=p.bind(null,r.onload),i&&document.head.appendChild(r)}},d.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},d.nmd=function(e){return e.paths=[],e.children||(e.children=[]),e},d.p="",a=function(e){return new Promise((function(t,o){var s=d.miniCssF(e),n=d.p+s;if(function(e,t){for(var o=document.getElementsByTagName("link"),s=0;s<o.length;s++){var n=(r=o[s]).getAttribute("data-href")||r.getAttribute("href");if("stylesheet"===r.rel&&(n===e||n===t))return r}var a=document.getElementsByTagName("style");for(s=0;s<a.length;s++){var r;if((n=(r=a[s]).getAttribute("data-href"))===e||n===t)return r}}(s,n))return t();!function(e,t,o,s){var n=document.createElement("link");n.rel="stylesheet",n.type="text/css",n.onerror=n.onload=function(a){if(n.onerror=n.onload=null,"load"===a.type)o();else{var r=a&&("load"===a.type?"missing":a.type),i=a&&a.target&&a.target.href||t,c=new Error("Loading CSS chunk "+e+" failed.\n("+i+")");c.code="CSS_CHUNK_LOAD_FAILED",c.type=r,c.request=i,n.parentNode.removeChild(n),s(c)}},n.href=t,document.head.appendChild(n)}(e,n,t,o)}))},r={2143:0},d.f.miniCss=function(e,t){r[e]?t.push(r[e]):0!==r[e]&&{100:1,157:1,334:1,502:1,546:1,558:1,637:1,766:1,803:1,836:1,928:1,1150:1,1243:1,1247:1,1362:1,1504:1,1789:1,1926:1,1950:1,2049:1,2065:1,2107:1,2307:1,2333:1,2578:1,2583:1,2585:1,2658:1,2683:1,3010:1,3019:1,3031:1,3221:1,3342:1,3560:1,3983:1,3988:1,4085:1,4137:1,4160:1,4249:1,4300:1,4540:1,4668:1,4675:1,4700:1,4831:1,4864:1,5003:1,5065:1,5313:1,5360:1,5402:1,5551:1,5756:1,5915:1,5976:1,6023:1,6063:1,6267:1,6415:1,6455:1,6712:1,6795:1,6870:1,7063:1,7117:1,7125:1,7146:1,7201:1,7319:1,7436:1,7502:1,7565:1,7622:1,7661:1,7722:1,7748:1,7937:1,8020:1,8072:1,8110:1,8167:1,8523:1,8555:1,8650:1,8831:1,8895:1,9241:1,9314:1,9413:1,9453:1,9733:1,9883:1,9896:1}[e]&&t.push(r[e]=a(e).then((function(){r[e]=0}),(function(t){throw delete r[e],t})))},function(){var e={2143:0};d.f.j=function(t,o){var s=d.o(e,t)?e[t]:void 0;if(0!==s)if(s)o.push(s[2]);else if(/^(1926|2307|6415|7146)$/.test(t))e[t]=0;else{var n=new Promise((function(o,n){s=e[t]=[o,n]}));o.push(s[2]=n);var a=d.p+d.u(t),r=new Error;d.l(a,(function(o){if(d.o(e,t)&&(0!==(s=e[t])&&(e[t]=void 0),s)){var n=o&&("load"===o.type?"missing":o.type),a=o&&o.target&&o.target.src;r.message="Loading chunk "+t+" failed.\n("+n+": "+a+")",r.name="ChunkLoadError",r.type=n,r.request=a,s[1](r)}}),"chunk-"+t,t)}},d.O.j=function(t){return 0===e[t]};var t=function(t,o){var s,n,a=o[0],r=o[1],i=o[2],c=0;if(a.some((function(t){return 0!==e[t]}))){for(s in r)d.o(r,s)&&(d.m[s]=r[s]);if(i)var l=i(d)}for(t&&t(o);c<a.length;c++)n=a[c],d.o(e,n)&&e[n]&&e[n][0](),e[n]=0;return d.O(l)},o=self.webpackChunkpolkaswap_exchange_web=self.webpackChunkpolkaswap_exchange_web||[];o.forEach(t.bind(null,0)),o.push=t.bind(null,o.push.bind(o))}();var l=d.O(void 0,[4998],(function(){return d(4458)}));l=d.O(l)}();